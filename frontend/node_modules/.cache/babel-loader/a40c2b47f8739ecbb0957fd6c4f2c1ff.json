{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/PropositionsPane.jsx\";\nimport React from \"react\";\nimport StepProposition from \"./StepProposition\";\nimport add_btn from \"../statics/add_btn.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DescriptionPane extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFreqencySelected = this.handleFreqencySelected.bind(this);\n    this.handlePropositionSelected = this.handlePropositionSelected.bind(this);\n    this.handlePropositionUnselected = this.handlePropositionUnselected.bind(this);\n    this.handleAddButtonClick = this.handleAddButtonClick.bind(this);\n    this.createProposition = this.createProposition.bind(this);\n    this.removeEmptyProposition = this.removeEmptyProposition.bind(this);\n    this.getIndex = this.getIndex.bind(this);\n    this.state = {\n      propositions: [{\n        key: 0,\n        selected: true,\n        text: \"\",\n        freq: null\n      }]\n    };\n    this.counter = 1;\n  }\n\n  render() {\n    const {\n      rows,\n      cols,\n      options\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"proposition-pane-cantainer\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: \"10px\",\n        boxShadow: \"1px 3px 8px #c9c9c9be\"\n      },\n      children: [this.state.propositions.map(proposition => /*#__PURE__*/_jsxDEV(StepProposition, {\n        id: proposition.key.toString(),\n        rows: rows,\n        cols: cols,\n        options: options,\n        data: proposition,\n        handleFreqencySelected: this.handleFreqencySelected,\n        handleSelected: this.handlePropositionSelected,\n        handleUnselected: this.handlePropositionUnselected\n      }, proposition.key.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(AddButton, {\n        handleClick: this.handleAddButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleFreqencySelected(propositionKey, optionIdx, text) {\n    let propositions = [...this.state.propositions];\n    const idx = this.getIndex(propositions, propositionKey);\n\n    for (let i = 0; i < propositions.length; i++) {\n      if (i === idx) {\n        propositions[i].freq = this.props.options[optionIdx];\n        propositions[i].text = text;\n        propositions[i].selected = false;\n      }\n    }\n\n    this.setState({\n      propositions: propositions\n    });\n  } // get called onFocus\n\n\n  handlePropositionSelected(propositionKey) {\n    let propositions = [...this.state.propositions];\n    const idx = this.getIndex(propositions, propositionKey);\n\n    for (let i = 0; i < propositions.length; i++) {\n      propositions[i].selected = false;\n\n      if (i === idx) {\n        propositions[i].selected = true;\n      }\n    }\n\n    this.setState({\n      propositions: propositions\n    });\n  } // get called onBLur\n\n\n  handlePropositionUnselected(propositionKey, text) {\n    // TODO: remove the empty propo.. >1 else keep selected (do nothing)\n    let propositions = removeEmptyProposition(this.state.propositions);\n    const idx = this.getIndex(propositions, propositionKey);\n    propositions[idx].selected = false;\n    propositions[idx].text = text;\n    this.setState({\n      propositions: propositions\n    });\n  }\n\n  handleAddButtonClick() {\n    // TODO: remove the empty propo.. >1\n    // add a new proposition if the last one is not empty\n    this.counter += 1;\n  }\n\n  removeEmptyProposition(propositions) {\n    if (propositions.length < 2) return propositions;\n    let items = []; // ignor the last one\n\n    for (let i = 0; i < propositions.length - 1; i++) {\n      if (propositions[i].text !== \"\") {\n        items.push(propositions[i]);\n      }\n    }\n\n    return propositions;\n  }\n\n  getIndex(propositions, propositionKey) {\n    let items = [...propositions];\n    let itemIndex = items.map(proposition => proposition.key).indexOf(propositionKey);\n\n    if (itemIndex >= 0) {\n      return itemIndex;\n    }\n\n    return -1;\n  }\n\n  createProposition() {\n    return {\n      key: 0,\n      selected: true,\n      text: \"\",\n      freq: null\n    };\n  }\n\n}\n\nfunction AddButton(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: {\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: \"transparent\",\n      marginTop: \"10px\"\n    },\n    onClick: props.handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"add-btn-img\",\n      src: add_btn,\n      alt: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AddButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddButton\");","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/PropositionsPane.jsx"],"names":["React","StepProposition","DescriptionPane","Component","constructor","props","handleFreqencySelected","bind","handlePropositionSelected","handlePropositionUnselected","handleAddButtonClick","createProposition","removeEmptyProposition","getIndex","state","propositions","key","selected","text","freq","counter","render","rows","cols","options","display","flexDirection","alignItems","justifyContent","padding","boxShadow","map","proposition","toString","propositionKey","optionIdx","idx","i","length","setState","items","push","itemIndex","indexOf","AddButton","width","height","backgroundColor","marginTop","handleClick","add_btn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport StepProposition from \"./StepProposition\";\n\nimport add_btn from \"../statics/add_btn.svg\";\n\nexport default class DescriptionPane extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.handleFreqencySelected = this.handleFreqencySelected.bind(this);\n        this.handlePropositionSelected = this.handlePropositionSelected.bind(this);\n        this.handlePropositionUnselected = this.handlePropositionUnselected.bind(this);\n        this.handleAddButtonClick = this.handleAddButtonClick.bind(this);\n\n        this.createProposition = this.createProposition.bind(this);\n        this.removeEmptyProposition = this.removeEmptyProposition.bind(this);\n        this.getIndex = this.getIndex.bind(this);\n\n\n        this.state = { propositions: [{ key: 0, selected: true, text: \"\", freq: null }] };\n        this.counter = 1;\n    }\n\n    render() {\n        const { rows, cols, options } = this.props;\n\n        return (\n            <div\n                id=\"proposition-pane-cantainer\"\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    padding: \"10px\",\n                    boxShadow: \"1px 3px 8px #c9c9c9be\"\n                }}\n            >\n                {this.state.propositions.map((proposition) => (\n                    <StepProposition\n                        key={proposition.key.toString()}\n                        id={proposition.key.toString()}\n                        rows={rows}\n                        cols={cols}\n                        options={options}\n                        data={proposition}\n                        handleFreqencySelected={this.handleFreqencySelected}\n                        handleSelected={this.handlePropositionSelected}\n                        handleUnselected={this.handlePropositionUnselected}\n                    ></StepProposition>\n                ))}\n                <AddButton handleClick={this.handleAddButtonClick}></AddButton>\n            </div>\n        );\n    }\n\n    handleFreqencySelected(propositionKey, optionIdx, text) {\n        let propositions = [...this.state.propositions];\n        const idx = this.getIndex(propositions, propositionKey);\n        for (let i = 0; i < propositions.length; i++) {\n            if (i === idx) {\n                propositions[i].freq = this.props.options[optionIdx];\n                propositions[i].text = text;\n                propositions[i].selected = false;\n            }\n        }\n        this.setState({ propositions: propositions });\n    }\n\n    // get called onFocus\n    handlePropositionSelected(propositionKey) {\n        let propositions = [...this.state.propositions];\n        const idx = this.getIndex(propositions, propositionKey);\n        for (let i = 0; i < propositions.length; i++) {\n            propositions[i].selected = false;\n            if (i === idx) {\n                propositions[i].selected = true;\n            }\n        }\n        this.setState({ propositions: propositions });\n    }\n\n    // get called onBLur\n    handlePropositionUnselected(propositionKey, text) {\n        // TODO: remove the empty propo.. >1 else keep selected (do nothing)\n        let propositions = removeEmptyProposition(this.state.propositions);\n        const idx = this.getIndex(propositions, propositionKey);\n        propositions[idx].selected = false;\n        propositions[idx].text = text;\n\n        this.setState({ propositions: propositions });\n    }\n\n    handleAddButtonClick() {\n        // TODO: remove the empty propo.. >1\n\n        // add a new proposition if the last one is not empty\n\n\n        this.counter += 1;\n    }\n\n    removeEmptyProposition(propositions) {\n        if (propositions.length < 2) return propositions\n\n        let items = [];\n        // ignor the last one\n        for (let i = 0; i < propositions.length - 1; i++) {\n            if (propositions[i].text !== \"\") {\n                items.push(propositions[i])\n            }\n        }\n\n        return propositions;\n\n    }\n\n    getIndex(propositions, propositionKey) {\n        let items = [...propositions];\n        let itemIndex = items\n            .map((proposition) => proposition.key)\n            .indexOf(propositionKey);\n        if (itemIndex >= 0) {\n            return itemIndex;\n        }\n        return -1;\n    }\n\n    createProposition() {\n        return { key: 0, selected: true, text: \"\", freq: null }\n    }\n}\n\nfunction AddButton(props) {\n    return (\n        <button\n            style={{\n                width: \"auto\",\n                height: \"auto\",\n                backgroundColor: \"transparent\",\n                marginTop: \"10px\",\n            }}\n            onClick={props.handleClick}\n        >\n            <img id=\"add-btn-img\" src={add_btn} alt=\"+\"></img>\n        </button>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}