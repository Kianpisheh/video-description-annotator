{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx\";\nimport React from 'react';\nimport \"./StepDescription.css\";\nimport close_btn from \"../statics/close_btn.svg\";\nimport indent_btn from \"../statics/indent_btn.svg\";\nimport outdent_btn from \"../statics/outdent_btn.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StepDescription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInputRef = /*#__PURE__*/React.createRef();\n    this.btnsDivRef = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    var config = this.getConfig(this.props.item);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description-item-div\",\n      id: \"description-item_\" + this.props.id.toString(),\n      style: config.itemDivStyle,\n      onClick: () => console.log(this.btnsDivRef.current),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"description-text_\" + this.props.id.toString(),\n        className: \"description-text\",\n        ref: this.textInputRef,\n        type: \"text\",\n        placeholder: \"type here...\",\n        maxLength: \"30\",\n        size: \"30\",\n        autoComplete: \"off\",\n        draggable: true,\n        blur: config.blur,\n        focus: config.focus,\n        autoFocus: config.autofocus,\n        readOnly: config.readOnly,\n        style: config.style,\n        onClick: event => this.props.onSingleClick(this.props.id, this.textInputRef.current.value, event),\n        onKeyDown: event => this.props.onKeyPress(this.props.id, this.textInputRef.current.value, event),\n        onBlur: () => this.props.onBlur(this.props.id, this.textInputRef.current.value)\n      }, this.props.sid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-btns-div\",\n        ref: this.btnsDivRef,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"outdent-btn\",\n          id: \"outdent_btn_\" + this.props.id.toString(),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"indentation-btn-img\",\n            src: outdent_btn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 100\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"indent-btn\",\n          id: \"indent_btn_\" + this.props.id.toString(),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"indentation-btn-img\",\n            src: indent_btn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 98\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          id: \"indent_btn_\" + this.props.id.toString(),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"close-btn-img\",\n            src: close_btn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 97\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n\n  componentDidUpdate() {\n    this.textInputRef.current.value = this.props.item.text;\n\n    if (this.props.item.mode === \"writing\") {\n      this.textInputRef.current.focus();\n    } else {\n      this.textInputRef.current.blur();\n    }\n  }\n\n  componentDidMount() {\n    this.textInputRef.current.value = this.props.item.text;\n\n    if (this.props.item.mode === \"writing\") {\n      this.textInputRef.current.focus();\n    } else {\n      this.textInputRef.current.blur();\n    }\n  }\n\n  getConfig(item) {\n    const {\n      mode,\n      level\n    } = item;\n    let textInputStyle = {};\n    let itemDivStyle = {};\n    let blur = \"false\";\n    let focus = \"true\";\n    let autofocus = true;\n    let readOnly = false;\n\n    if (mode === \"writing\") {\n      textInputStyle = {\n        cursor: \"text\"\n      };\n    } else if (mode === \"not_writing\") {\n      textInputStyle = {\n        cursor: \"pointer\"\n      };\n      blur = \"true\";\n      focus = \"false\";\n      readOnly = true;\n      autofocus = false;\n    } // level-related styling\n\n\n    textInputStyle.fontSize = 17;\n    itemDivStyle.marginLeft = 0;\n    itemDivStyle.width = 470;\n    itemDivStyle.height = 45;\n\n    if (level === 2) {\n      textInputStyle.fontSize = 16;\n      itemDivStyle.marginLeft = 60;\n      itemDivStyle.width = 420;\n      itemDivStyle.height = 40;\n    } else if (level === 3) {\n      textInputStyle.fontSize = 15;\n      itemDivStyle.marginLeft = 110;\n      itemDivStyle.width = 395;\n      itemDivStyle.height = 35;\n    }\n\n    return {\n      readOnly: readOnly,\n      style: textInputStyle,\n      focus: focus,\n      blur: blur,\n      autofocus: autofocus,\n      itemDivStyle: itemDivStyle\n    };\n  }\n\n}","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx"],"names":["React","StepDescription","Component","constructor","props","textInputRef","createRef","btnsDivRef","render","config","getConfig","item","id","toString","itemDivStyle","console","log","current","blur","focus","autofocus","readOnly","style","event","onSingleClick","value","onKeyPress","onBlur","sid","outdent_btn","indent_btn","close_btn","componentDidUpdate","text","mode","componentDidMount","level","textInputStyle","cursor","fontSize","marginLeft","width","height"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport \"./StepDescription.css\"\nimport close_btn from \"../statics/close_btn.svg\"\nimport indent_btn from \"../statics/indent_btn.svg\"\nimport outdent_btn from \"../statics/outdent_btn.svg\"\n\nexport default class StepDescription extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInputRef = React.createRef();\n        this.btnsDivRef = React.createRef();\n    }\n\n    render() {\n        var config = this.getConfig(this.props.item);\n\n        return <div className=\"description-item-div\" id={\"description-item_\" + this.props.id.toString()} style={config.itemDivStyle} onClick={() => (console.log(this.btnsDivRef.current))}>\n                <input className=\"input-text\" id={\"description-text_\" + this.props.id.toString()}\n                    className=\"description-text\"\n                    key={this.props.sid}\n                    ref={this.textInputRef}\n                    type=\"text\"\n                    placeholder=\"type here...\"\n                    maxLength=\"30\"\n                    size=\"30\"\n                    autoComplete=\"off\"\n                    draggable={true}\n                    blur={config.blur}\n                    focus={config.focus}\n                    autoFocus={config.autofocus}\n                    readOnly={config.readOnly}\n                    style={config.style}\n                    onClick={(event) => this.props.onSingleClick(this.props.id, this.textInputRef.current.value, event)}\n                    onKeyDown={(event) => this.props.onKeyPress(this.props.id, this.textInputRef.current.value, event)}\n                    onBlur={() => this.props.onBlur(this.props.id, this.textInputRef.current.value)} /> \n                <div className=\"step-btns-div\" ref={this.btnsDivRef}>\n                    <button className=\"outdent-btn\" id={\"outdent_btn_\" + this.props.id.toString()}><img className=\"indentation-btn-img\" src={outdent_btn}></img></button>\n                    <button className=\"indent-btn\" id={\"indent_btn_\" + this.props.id.toString()}><img className=\"indentation-btn-img\" src={indent_btn}></img></button>\n                    <button className=\"close-btn\" id={\"indent_btn_\" + this.props.id.toString()}><img className=\"close-btn-img\" src={close_btn}></img></button>\n                </div>\n            </div>\n            }\n            \n\n    componentDidUpdate() {\n        this.textInputRef.current.value = this.props.item.text;\n        if (this.props.item.mode === \"writing\") {\n            this.textInputRef.current.focus();\n        } else {\n            this.textInputRef.current.blur();\n        }\n    }\n\n    componentDidMount() {\n        this.textInputRef.current.value = this.props.item.text;\n        if (this.props.item.mode === \"writing\") {\n            this.textInputRef.current.focus();\n        } else {\n            this.textInputRef.current.blur();\n        }\n    }\n\n    getConfig(item) {\n\n        const { mode, level } = item;\n\n        let textInputStyle = {};\n        let itemDivStyle = {}\n        let blur = \"false\";\n        let focus = \"true\";\n        let autofocus = true;\n        let readOnly = false;\n\n        if (mode === \"writing\") {\n            textInputStyle = { cursor: \"text\" };\n\n        } else if (mode === \"not_writing\") {\n            textInputStyle = { cursor: \"pointer\" };\n            blur = \"true\";\n            focus = \"false\";\n            readOnly = true;\n            autofocus = false;\n        }\n\n        // level-related styling\n        textInputStyle.fontSize = 17;\n        itemDivStyle.marginLeft = 0;\n        itemDivStyle.width = 470;\n        itemDivStyle.height = 45;\n        \n        if (level === 2) {\n            textInputStyle.fontSize = 16;\n            itemDivStyle.marginLeft = 60;\n            itemDivStyle.width = 420;\n            itemDivStyle.height = 40;\n\n\n        } else if (level === 3) {\n            textInputStyle.fontSize = 15;\n            itemDivStyle.marginLeft = 110;\n            itemDivStyle.width = 395;\n            itemDivStyle.height = 35;\n        }\n\n        return { readOnly: readOnly, style: textInputStyle, focus: focus, blur: blur, autofocus: autofocus, itemDivStyle: itemDivStyle }\n    }\n}"]},"metadata":{},"sourceType":"module"}