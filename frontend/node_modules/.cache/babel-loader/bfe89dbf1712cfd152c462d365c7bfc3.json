{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  return fetch(\"https://secret-gorge-06842.herokuapp.com/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nexport default function LoginPage({\n  setToken\n}) {\n  _s();\n\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    console.log(token);\n    setToken(token, username);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"login-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"username-label-div\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-text-input\",\n            type: \"text\",\n            placeholder: \"username\",\n            onChange: e => setUserName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"password-label-div\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"login-text-input\",\n            type: \"password\",\n            placeholder: \"password\",\n            autoComplete: \"off\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"login-btn-div\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"login-btn\",\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LoginPage, \"mDofyeUwpW7DCqzRlXtw6aPy/HU=\");\n\n_c = LoginPage;\nLoginPage.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/pages/LoginPage.js"],"names":["React","useState","PropTypes","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","LoginPage","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","console","log","target","value","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,iBAAP;;;AAEA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AACrC,SAAOC,KAAK,CAAC,gDAAD,EAAmD;AAC9DC,IAAAA,MAAM,EAAE,MADsD;AAE9DC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR,KAFqD;AAK9DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AALwD,GAAnD,CAAL,CAMJO,IANI,CAMEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EANX,CAAP;AAOA;;AAED,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAiC;AAAA;;AAC/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,EAAxC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,EAAxC;;AAEA,QAAMmB,YAAY,GAAG,MAAOC,CAAP,IAAa;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAG,MAAMpB,SAAS,CAAC;AAC7Ba,MAAAA,QAD6B;AAE7BE,MAAAA;AAF6B,KAAD,CAA7B;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAR,IAAAA,QAAQ,CAACQ,KAAD,EAAQP,QAAR,CAAR;AACA,GARD;;AAUA,sBACC;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA,4BACC;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAM,MAAA,YAAY,EAAE,KAApB;AAA2B,MAAA,QAAQ,EAAEI,YAArC;AAAA,8BACC;AAAK,QAAA,EAAE,EAAC,oBAAR;AAAA,+BACC;AAAA,iCACC;AACC,YAAA,SAAS,EAAC,kBADX;AAEC,YAAA,IAAI,EAAC,MAFN;AAGC,YAAA,WAAW,EAAC,UAHb;AAIC,YAAA,QAAQ,EAAGC,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACK,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAWC;AAAK,QAAA,EAAE,EAAC,oBAAR;AAAA,+BACC;AAAA,iCACC;AACC,YAAA,SAAS,EAAC,kBADX;AAEC,YAAA,IAAI,EAAC,UAFN;AAGC,YAAA,WAAW,EAAC,UAHb;AAIC,YAAA,YAAY,EAAE,KAJf;AAKC,YAAA,QAAQ,EAAGN,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAXD,eAsBC;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,+BACC;AAAQ,UAAA,EAAE,EAAC,WAAX;AAAuB,UAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAtBD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAiCA;;GA/CuBb,S;;KAAAA,S;AAiDxBA,SAAS,CAACc,SAAV,GAAsB;AACrBb,EAAAA,QAAQ,EAAEb,SAAS,CAAC2B,IAAV,CAAeC;AADJ,CAAtB","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./LoginPage.css\";\n\nasync function loginUser(credentials) {\n\treturn fetch(\"https://secret-gorge-06842.herokuapp.com/login\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify(credentials),\n\t}).then((data) => data.json());\n}\n\nexport default function LoginPage({ setToken }) {\n\tconst [username, setUserName] = useState();\n\tconst [password, setPassword] = useState();\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\t\tconst token = await loginUser({\n\t\t\tusername,\n\t\t\tpassword,\n\t\t});\n\t\tconsole.log(token);\n\t\tsetToken(token, username);\n\t};\n\n\treturn (\n\t\t<div id=\"login-container\">\n\t\t\t<h1 id=\"login-title\">Login</h1>\n\t\t\t<form autoComplete={\"off\"} onSubmit={handleSubmit}>\n\t\t\t\t<div id=\"username-label-div\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"login-text-input\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"username\"\n\t\t\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"password-label-div\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"login-text-input\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"password\"\n\t\t\t\t\t\t\tautoComplete={\"off\"}\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"login-btn-div\">\n\t\t\t\t\t<button id=\"login-btn\" type=\"submit\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nLoginPage.propTypes = {\n\tsetToken: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}