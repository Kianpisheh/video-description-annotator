{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/PropositionsPane.jsx\";\nimport React from \"react\";\nimport StepProposition from \"./StepProposition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DescriptionPane extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      propositions: [{\n        key: 0,\n        selected: true,\n        text: \"\",\n        freq: null\n      }]\n    };\n    this.counter = 1;\n    this.handleFreqencySelected = this.handleFreqencySelected.bind(this);\n    this.getIndex = this.getIndex.bind(this);\n  }\n\n  render() {\n    const {\n      rows,\n      cols,\n      options\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"proposition-pane-cantainer\",\n      children: this.state.propositions.map(proposition => /*#__PURE__*/_jsxDEV(StepProposition, {\n        id: proposition.key.toString(),\n        rows: rows,\n        cols: cols,\n        options: options,\n        data: proposition,\n        handleFreqencySelected: this.handleFreqencySelected\n      }, proposition.key.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleFreqencySelected(propositionKey, optionIdx, text) {\n    let propositions = [...this.state.propositions];\n    const idx = this.getIndex(propositions, propositionKey);\n\n    for (let i = 0; i < propositions.length; i++) {\n      if (i === idx) {}\n\n      propositions[i].freq = this.props.options[optionIdx];\n      propositions[i].text = text;\n      propositions[i].selected = false;\n    }\n\n    this.setState({\n      propositions: propositions\n    });\n  }\n\n  getIndex(propositions, propositionKey) {\n    let items = [...propositions];\n    let itemIndex = items.map(proposition => proposition.key).indexOf(propositionKey);\n\n    if (itemIndex >= 0) {\n      return itemIndex;\n    }\n\n    return -1;\n  }\n\n}","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/PropositionsPane.jsx"],"names":["React","StepProposition","DescriptionPane","Component","constructor","props","state","propositions","key","selected","text","freq","counter","handleFreqencySelected","bind","getIndex","render","rows","cols","options","map","proposition","toString","propositionKey","optionIdx","idx","i","length","setState","items","itemIndex","indexOf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,eAAe,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,YAAY,EAAE,CAAC;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,QAAQ,EAAE,IAApB;AAA0BC,QAAAA,IAAI,EAAE,EAAhC;AAAoCC,QAAAA,IAAI,EAAE;AAA1C,OAAD;AAAhB,KAAb;AACA,SAAKC,OAAL,GAAe,CAAf;AAEA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA;AAAd,QAA0B,KAAKd,KAArC;AAEA,wBACI;AAAK,MAAA,EAAE,EAAC,4BAAR;AAAA,gBACK,KAAKC,KAAL,CAAWC,YAAX,CAAwBa,GAAxB,CAA6BC,WAAD,iBACzB,QAAC,eAAD;AAEI,QAAA,EAAE,EAAEA,WAAW,CAACb,GAAZ,CAAgBc,QAAhB,EAFR;AAGI,QAAA,IAAI,EAAEL,IAHV;AAII,QAAA,IAAI,EAAEC,IAJV;AAKI,QAAA,OAAO,EAAEC,OALb;AAMI,QAAA,IAAI,EAAEE,WANV;AAOI,QAAA,sBAAsB,EAAE,KAAKR;AAPjC,SACSQ,WAAW,CAACb,GAAZ,CAAgBc,QAAhB,EADT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAGDT,EAAAA,sBAAsB,CAACU,cAAD,EAAiBC,SAAjB,EAA4Bd,IAA5B,EAAkC;AACpD,QAAIH,YAAY,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,YAAf,CAAnB;AACA,UAAMkB,GAAG,GAAG,KAAKV,QAAL,CAAcR,YAAd,EAA4BgB,cAA5B,CAAZ;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnB,YAAY,CAACoB,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,UAAIA,CAAC,KAAKD,GAAV,EAAe,CAEd;;AACDlB,MAAAA,YAAY,CAACmB,CAAD,CAAZ,CAAgBf,IAAhB,GAAwB,KAAKN,KAAL,CAAWc,OAAX,CAAmBK,SAAnB,CAAxB;AACAjB,MAAAA,YAAY,CAACmB,CAAD,CAAZ,CAAgBhB,IAAhB,GAAuBA,IAAvB;AACAH,MAAAA,YAAY,CAACmB,CAAD,CAAZ,CAAgBjB,QAAhB,GAA2B,KAA3B;AACH;;AACD,SAAKmB,QAAL,CAAc;AAACrB,MAAAA,YAAY,EAAEA;AAAf,KAAd;AACH;;AAEDQ,EAAAA,QAAQ,CAACR,YAAD,EAAegB,cAAf,EAA+B;AACnC,QAAIM,KAAK,GAAG,CAAC,GAAGtB,YAAJ,CAAZ;AACN,QAAIuB,SAAS,GAAGD,KAAK,CACnBT,GADc,CACTC,WAAD,IAAiBA,WAAW,CAACb,GADnB,EAEduB,OAFc,CAENR,cAFM,CAAhB;;AAGA,QAAIO,SAAS,IAAI,CAAjB,EAAoB;AACnB,aAAOA,SAAP;AACA;;AACD,WAAO,CAAC,CAAR;AACG;;AAtDwD","sourcesContent":["import React from \"react\";\nimport StepProposition from \"./StepProposition\";\n\nexport default class DescriptionPane extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { propositions: [{ key: 0, selected: true, text: \"\", freq: null }] };\n        this.counter = 1;\n\n        this.handleFreqencySelected = this.handleFreqencySelected.bind(this);\n        this.getIndex = this.getIndex.bind(this);\n    }\n\n    render() {\n        const { rows, cols, options } = this.props;\n\n        return (\n            <div id=\"proposition-pane-cantainer\">\n                {this.state.propositions.map((proposition) => (\n                    <StepProposition\n                        key={proposition.key.toString()}\n                        id={proposition.key.toString()}\n                        rows={rows}\n                        cols={cols}\n                        options={options}\n                        data={proposition}\n                        handleFreqencySelected={this.handleFreqencySelected}\n                    ></StepProposition>\n                ))}\n            </div>\n        );\n    }\n\n\n    handleFreqencySelected(propositionKey, optionIdx, text) {\n        let propositions = [...this.state.propositions];\n        const idx = this.getIndex(propositions, propositionKey);\n        for (let i = 0; i < propositions.length; i++) {\n            if (i === idx) {\n\n            }\n            propositions[i].freq =  this.props.options[optionIdx];   \n            propositions[i].text = text;\n            propositions[i].selected = false;    \n        }\n        this.setState({propositions: propositions})\n    }\n\n    getIndex(propositions, propositionKey) {\n        let items = [...propositions];\n\t\tlet itemIndex = items\n\t\t\t.map((proposition) => proposition.key)\n\t\t\t.indexOf(propositionKey);\n\t\tif (itemIndex >= 0) {\n\t\t\treturn itemIndex;\n\t\t}\n\t\treturn -1;\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}