{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx\";\nimport React from 'react';\nimport \"./StepDescription.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StepDescription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInputRef = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    var config = this.getConfig(this.props.mode);\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-text\",\n      ref: this.textInputRef,\n      type: \"text\",\n      placeholder: \"type here...\",\n      maxLength: \"30\",\n      size: \"30\",\n      blur: config.blur,\n      focus: config.focus,\n      readOnly: config.readOnly,\n      style: config.style,\n      onClick: () => this.props.onSingleClick(this.props.id, this.textInputRef.current.value),\n      onDoubleClick: () => this.props.onDoubleClick(this.props.id),\n      onBlur: () => this.props.onBlur(this.props.id, this.textInputRef.current.value)\n    }, this.props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.mode);\n\n    if (this.props.mode === \"writing\") {\n      console.log(\"im here\");\n      this.textInputRef.current.selectionStart = this.textInputRef.current.selectionEnd;\n    }\n  }\n\n  getConfig(mode) {\n    let textInputStyle = {};\n    let blur = \"false\";\n    let focus = \"true\";\n    let readOnly = false;\n\n    if (mode === \"writing\") {\n      textInputStyle = {\n        cursor: \"text\",\n        backgroundColor: \"white\",\n        borderRadius: 5\n      };\n    } else if (this.props.mode === \"not_writing\") {\n      textInputStyle = {\n        cursor: \"pointer\",\n        backgroundColor: \"#20D0FF\",\n        borderRadius: 5\n      };\n      blur = \"true\";\n      focus = \"false\";\n      readOnly = true;\n    }\n\n    return {\n      readOnly: readOnly,\n      style: textInputStyle,\n      focus: focus,\n      blur: blur\n    };\n  }\n\n} // Single click \n// do not change the mode\n// reject writing\n// Double click\n// go to wiring mode\n// Blur\n// go to non-writing mode\n// What happens in non-writing mode\n// cursor --> pointer\n// background --> customized color\n// input is in blur (unfocus)\n// What happens in writing mode\n// cursor --> text\n// background --> white\n// input is in focus","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx"],"names":["React","StepDescription","Component","constructor","props","textInputRef","createRef","render","config","getConfig","mode","blur","focus","readOnly","style","onSingleClick","id","current","value","onDoubleClick","onBlur","componentDidUpdate","console","log","selectionStart","selectionEnd","textInputStyle","cursor","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport \"./StepDescription.css\"\n\nexport default class StepDescription extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInputRef = React.createRef();\n\n    }\n\n    render() {\n\n        var config = this.getConfig(this.props.mode);\n\n        return <input id=\"input-text\" \n                      key={this.props.id}\n                      ref={this.textInputRef} \n                      type=\"text\" \n                      placeholder=\"type here...\" \n                      maxLength=\"30\" \n                      size=\"30\"\n                      blur={config.blur} \n                      focus={config.focus}\n                      readOnly={config.readOnly} \n                      style={config.style}\n                      onClick={() => this.props.onSingleClick(this.props.id, this.textInputRef.current.value)}\n                      onDoubleClick={() => this.props.onDoubleClick(this.props.id)}\n                      onBlur={() => this.props.onBlur(this.props.id, this.textInputRef.current.value)} />\n    }\n\n    componentDidUpdate() {\n        console.log(this.props.mode)\n        if (this.props.mode === \"writing\") { \n            console.log(\"im here\")\n            this.textInputRef.current.selectionStart = this.textInputRef.current.selectionEnd;\n        }\n\n    }\n\n    getConfig(mode) {\n        let textInputStyle = {};\n        let blur = \"false\";\n        let focus = \"true\";\n        let readOnly = false;\n\n        if (mode === \"writing\") {\n            textInputStyle = {cursor: \"text\", backgroundColor: \"white\", borderRadius: 5};\n\n        } else if (this.props.mode === \"not_writing\") {\n            textInputStyle = {cursor: \"pointer\", backgroundColor: \"#20D0FF\", borderRadius: 5};\n            blur = \"true\";\n            focus = \"false\";\n            readOnly = true;\n        }\n\n        return {readOnly: readOnly, style: textInputStyle, focus: focus, blur: blur}\n    }\n}\n\n\n// Single click \n// do not change the mode\n// reject writing\n\n// Double click\n// go to wiring mode\n\n// Blur\n// go to non-writing mode\n\n\n// What happens in non-writing mode\n// cursor --> pointer\n// background --> customized color\n// input is in blur (unfocus)\n\n// What happens in writing mode\n// cursor --> text\n// background --> white\n// input is in focus"]},"metadata":{},"sourceType":"module"}