{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/PropositionsPane.jsx\";\nimport React from \"react\";\nimport StepProposition from \"./StepProposition\";\nimport add_btn from \"../statics/add_btn.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DescriptionPane extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleFreqencySelected = this.handleFreqencySelected.bind(this);\n    this.handlePropositionSelected = this.handlePropositionSelected.bind(this);\n    this.handlePropositionUnselected = this.handlePropositionUnselected.bind(this);\n    this.handleAddButtonClick = this.handleAddButtonClick.bind(this);\n    this.createProposition = this.createProposition.bind(this);\n    this.removeEmptyProposition = this.removeEmptyProposition.bind(this);\n    this.getIndex = this.getIndex.bind(this);\n    this.counter = 0;\n    this.state = {\n      propositions: [this.createProposition(this.counter)]\n    };\n  }\n\n  render() {\n    const {\n      rows,\n      cols,\n      options\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"proposition-pane-cantainer\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: \"10px\",\n        boxShadow: \"1px 3px 8px #c9c9c9be\"\n      },\n      children: [this.state.propositions.map(proposition => /*#__PURE__*/_jsxDEV(StepProposition, {\n        id: proposition.key.toString(),\n        rows: rows,\n        cols: cols,\n        options: options,\n        data: proposition,\n        handleFreqencySelected: this.handleFreqencySelected,\n        handleSelected: this.handlePropositionSelected,\n        handleUnselected: this.handlePropositionUnselected\n      }, proposition.key.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(AddButton, {\n        handleClick: this.handleAddButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleFreqencySelected(propositionKey, optionIdx, text) {\n    let propositions = [...this.state.propositions];\n    const idx = this.getIndex(propositions, propositionKey);\n\n    for (let i = 0; i < propositions.length; i++) {\n      if (i === idx) {\n        propositions[i].freq = this.props.options[optionIdx];\n        propositions[i].text = text;\n        propositions[i].selected = false;\n      }\n    }\n\n    this.setState({\n      propositions: propositions\n    });\n  } // get called onFocus\n\n\n  handlePropositionSelected(propositionKey) {\n    let propositions = [...this.state.propositions];\n    const idx = this.getIndex(propositions, propositionKey);\n\n    for (let i = 0; i < propositions.length; i++) {\n      propositions[i].selected = false;\n\n      if (i === idx) {\n        propositions[i].selected = true;\n      }\n    }\n\n    this.setState({\n      propositions: propositions\n    });\n  } // get called onBLur\n\n\n  handlePropositionUnselected(propositionKey, text, event) {\n    console.log(event);\n    let propositions = [...this.state.propositions];\n    const idx = this.getIndex(propositions, propositionKey);\n    propositions[idx].selected = false;\n    propositions[idx].text = text;\n    propositions = this.removeEmptyProposition(propositions, false); // do not update the states if the add-buton or a radio button is clicked\n\n    if (event.relatedTarget) {\n      let tid = event.relatedTarget;\n\n      if (tid === \"add-btn\" || tid.slice(0, 9) === \"radio-btn\") {\n        return;\n      }\n    }\n\n    this.setState({\n      propositions: propositions\n    });\n  }\n\n  handleAddButtonClick() {\n    let propositions = [...this.state.propositions];\n    if (propositions[propositions.length - 1].text === \"\") return;\n    propositions = this.removeEmptyProposition(propositions, false);\n    propositions.push(this.createProposition(this.counter));\n    this.setState({\n      propositions: propositions\n    });\n  }\n\n  removeEmptyProposition(propositions, lastItem) {\n    if (propositions.length < 2) return propositions;\n    const j = lastItem ? 0 : 1;\n    let items = []; // ignor the last one\n\n    for (let i = 0; i < propositions.length - j; i++) {\n      if (propositions[i].text !== \"\") {\n        items.push(propositions[i]);\n      }\n    }\n\n    return propositions;\n  }\n\n  getIndex(propositions, propositionKey) {\n    let items = [...propositions];\n    let itemIndex = items.map(proposition => proposition.key).indexOf(propositionKey);\n\n    if (itemIndex >= 0) {\n      return itemIndex;\n    }\n\n    return -1;\n  }\n\n  createProposition(keyNum) {\n    this.counter += 1;\n    return {\n      key: keyNum,\n      selected: true,\n      text: \"\",\n      freq: null\n    };\n  }\n\n}\n\nfunction AddButton(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"add-btn\",\n    style: {\n      width: \"auto\",\n      height: \"auto\",\n      backgroundColor: \"transparent\",\n      marginTop: \"10px\"\n    },\n    onClick: props.handleClick,\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"add-btn-img\",\n      src: add_btn,\n      alt: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n\n_c = AddButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddButton\");","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/PropositionsPane.jsx"],"names":["React","StepProposition","DescriptionPane","Component","constructor","props","handleFreqencySelected","bind","handlePropositionSelected","handlePropositionUnselected","handleAddButtonClick","createProposition","removeEmptyProposition","getIndex","counter","state","propositions","render","rows","cols","options","display","flexDirection","alignItems","justifyContent","padding","boxShadow","map","proposition","key","toString","propositionKey","optionIdx","text","idx","i","length","freq","selected","setState","event","console","log","relatedTarget","tid","slice","push","lastItem","j","items","itemIndex","indexOf","keyNum","AddButton","width","height","backgroundColor","marginTop","handleClick","add_btn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport StepProposition from \"./StepProposition\";\n\nimport add_btn from \"../statics/add_btn.svg\";\n\nexport default class DescriptionPane extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleFreqencySelected = this.handleFreqencySelected.bind(this);\n        this.handlePropositionSelected = this.handlePropositionSelected.bind(this);\n        this.handlePropositionUnselected = this.handlePropositionUnselected.bind(this);\n        this.handleAddButtonClick = this.handleAddButtonClick.bind(this);\n\n        this.createProposition = this.createProposition.bind(this);\n        this.removeEmptyProposition = this.removeEmptyProposition.bind(this);\n        this.getIndex = this.getIndex.bind(this);\n\n        this.counter = 0;\n        this.state = { propositions: [this.createProposition(this.counter)] };\n    }\n\n    render() {\n        const { rows, cols, options } = this.props;\n\n        return (\n            <div\n                id=\"proposition-pane-cantainer\"\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    padding: \"10px\",\n                    boxShadow: \"1px 3px 8px #c9c9c9be\",\n                }}\n            >\n                {this.state.propositions.map((proposition) => (\n                    <StepProposition\n                        key={proposition.key.toString()}\n                        id={proposition.key.toString()}\n                        rows={rows}\n                        cols={cols}\n                        options={options}\n                        data={proposition}\n                        handleFreqencySelected={this.handleFreqencySelected}\n                        handleSelected={this.handlePropositionSelected}\n                        handleUnselected={this.handlePropositionUnselected}\n                    ></StepProposition>\n                ))}\n                <AddButton handleClick={this.handleAddButtonClick}></AddButton>\n            </div>\n        );\n    }\n\n    handleFreqencySelected(propositionKey, optionIdx, text) {\n        let propositions = [...this.state.propositions];\n        const idx = this.getIndex(propositions, propositionKey);\n        for (let i = 0; i < propositions.length; i++) {\n            if (i === idx) {\n                propositions[i].freq = this.props.options[optionIdx];\n                propositions[i].text = text;\n                propositions[i].selected = false;\n            }\n        }\n        this.setState({ propositions: propositions });\n    }\n\n    // get called onFocus\n    handlePropositionSelected(propositionKey) {\n        let propositions = [...this.state.propositions];\n        const idx = this.getIndex(propositions, propositionKey);\n        for (let i = 0; i < propositions.length; i++) {\n            propositions[i].selected = false;\n            if (i === idx) {\n                propositions[i].selected = true;\n            }\n        }\n        this.setState({ propositions: propositions });\n    }\n\n    // get called onBLur\n    handlePropositionUnselected(propositionKey, text, event) {\n        console.log(event);\n        let propositions = [...this.state.propositions];\n        const idx = this.getIndex(propositions, propositionKey);\n        propositions[idx].selected = false;\n        propositions[idx].text = text;\n        propositions = this.removeEmptyProposition(propositions, false);\n\n        // do not update the states if the add-buton or a radio button is clicked\n        if (event.relatedTarget) {\n            let tid = event.relatedTarget;\n           if (tid === \"add-btn\" || tid.slice(0, 9) === \"radio-btn\") {\n               return\n           }\n        }\n\n        this.setState({ propositions: propositions });\n    }\n\n    handleAddButtonClick() {\n        let propositions = [...this.state.propositions];\n        if (propositions[propositions.length - 1].text === \"\") return\n\n        propositions = this.removeEmptyProposition(propositions, false);\n        propositions.push(this.createProposition(this.counter));\n\n        this.setState({ propositions: propositions });\n    }\n\n    removeEmptyProposition(propositions, lastItem) {\n        if (propositions.length < 2) return propositions;\n\n        const j = lastItem ? 0 : 1;\n        let items = [];\n        // ignor the last one\n        for (let i = 0; i < propositions.length - j; i++) {\n            if (propositions[i].text !== \"\") {\n                items.push(propositions[i]);\n            }\n        }\n\n        return propositions;\n    }\n\n    getIndex(propositions, propositionKey) {\n        let items = [...propositions];\n        let itemIndex = items\n            .map((proposition) => proposition.key)\n            .indexOf(propositionKey);\n        if (itemIndex >= 0) {\n            return itemIndex;\n        }\n        return -1;\n    }\n\n    createProposition(keyNum) {\n        this.counter += 1;\n        return { key: keyNum, selected: true, text: \"\", freq: null };\n    }\n}\n\nfunction AddButton(props) {\n    return (\n        <button\n        id=\"add-btn\"\n            style={{\n                width: \"auto\",\n                height: \"auto\",\n                backgroundColor: \"transparent\",\n                marginTop: \"10px\",\n            }}\n            onClick={props.handleClick}\n        >\n            <img id=\"add-btn-img\" src={add_btn} alt=\"+\"></img>\n        </button>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}