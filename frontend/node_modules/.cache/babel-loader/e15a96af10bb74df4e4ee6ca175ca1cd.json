{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/DescriptionPane.jsx\";\nimport React from \"react\";\nimport \"./DescriptionPane.css\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport StepDescription from \"./StepDescription\";\nimport { sendDataToServer } from \"../apiCalls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class DescriptionPane extends React.Component {\n  constructor(props) {\n    super(props);\n    this.counter = 0;\n    this.sessionTime = \"\";\n    this.state = {\n      descriptions: [{\n        key: 0,\n        mode: \"writing\",\n        level: 1,\n        selected: true,\n        text: \"\"\n      }]\n    };\n    this.counter += 1;\n    this.setModeByKey = this.setModeByKey.bind(this);\n    this.getMode = this.getMode.bind(this);\n    this.addStepAfter = this.addStepAfter.bind(this);\n    this.removeWritingStep = this.removeWritingStep.bind(this);\n    this.getSelected = this.getSelected.bind(this);\n    this.getWritingStep = this.getWritingStep.bind(this);\n    this.deselectAll = this.deselectAll.bind(this);\n    this.getIndex = this.getIndex.bind(this);\n    this.getWritingIndex = this.getWritingIndex.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.updateDescendents = this.updateDescendents.bind(this);\n    this.getDescendents = this.getDescendents.bind(this);\n    this.deleteItems = this.deleteItems.bind(this);\n    this.getPrevSibling = this.getPrevSibling.bind(this);\n    this.groupDescriptions = this.groupDescriptions.bind(this);\n    this.getSessionTime = this.getSessionTime.bind(this);\n    this.handleSingleClick = this.handleSingleClick.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleKeyAction = this.handleKeyAction.bind(this);\n    this.handleDragEnd = this.handleDragEnd.bind(this);\n  }\n\n  render() {\n    if (this.counter === 2) {\n      this.sessionTime = this.getSessionTime();\n    }\n\n    let descriptionListG = this.groupDescriptions([...this.state.descriptions]);\n    let stepComponentsList = descriptionListG.map((stepList, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: index.toString(),\n      index: index,\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: index.toString(),\n        className: \"step-div\",\n        ...provided.draggableProps,\n        ...provided.dragHandleProps,\n        ref: provided.innerRef,\n        children: stepList.map((item, index) => /*#__PURE__*/_jsxDEV(StepDescription, {\n          id: item.key.toString(),\n          onSingleClick: this.handleSingleClick,\n          onDoubleClick: this.handleDoubleClick,\n          onBlur: this.handleBlur,\n          onKeyPress: this.handleKeyAction,\n          item: item\n        }, item.key.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this))\n      }, index.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, index.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this));\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: this.handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"description-pane-droppable\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"description-pane-container\",\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [stepComponentsList, provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }, this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.videoID !== this.props.videoID) {\n      descriptions: [{\n        key: 0,\n        mode: \"writing\",\n        level: 1,\n        selected: true,\n        text: \"\"\n      }];\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000\").then(res => console.log(res.text())).catch(err => err);\n  }\n\n  getSessionTime() {\n    let d = new Date();\n    const sessionTime = `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}-${d.getHours()}-${d.getMinutes()}-${d.getSeconds()}`;\n    return sessionTime;\n  }\n\n  groupDescriptions(descriptions) {\n    let descriptionListG = [];\n    let stepDescriptionList = [];\n\n    for (let i = 0; i < descriptions.length; i++) {\n      // new step\n      if (descriptions[i].level === 1) {\n        if (stepDescriptionList.length) {\n          descriptionListG.push(stepDescriptionList);\n        }\n\n        stepDescriptionList = [descriptions[i]];\n      } else {\n        // descendents\n        stepDescriptionList.push(descriptions[i]);\n      }\n\n      if (i === descriptions.length - 1) {\n        if (stepDescriptionList.length) {\n          descriptionListG.push(stepDescriptionList);\n        }\n      }\n    }\n\n    return descriptionListG;\n  }\n\n  handleDragEnd(result) {\n    if (result.destination == null) return;\n    if (result.destination.index === result.source.index) return;\n    let items = [...this.state.descriptions]; // step-set level index\n\n    const sourceStepIndex = result.source.index;\n    const destinationStepIndex = result.destination.index;\n    let steps = this.groupDescriptions(items);\n    let destinationOffset = destinationStepIndex > sourceStepIndex ? 1 : 0;\n    let sourceOffset = destinationStepIndex > sourceStepIndex ? 0 : 1; // move a copy of source step into the new location\n\n    steps.splice(destinationStepIndex + destinationOffset, 0, steps[sourceStepIndex]); // remove the old copy of source step\n\n    steps.splice(sourceStepIndex + sourceOffset, 1);\n    sendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n    this.setState({\n      descriptions: steps.flat()\n    });\n  }\n\n  handleSingleClick(key, txt) {\n    let items = [...this.state.descriptions];\n\n    if (txt !== \"\") {\n      let index = this.getIndex(items, key, 0);\n      const oldWritingIndex = this.getWritingIndex(items);\n\n      if (oldWritingIndex >= 0) {\n        items[oldWritingIndex].mode = \"not_writing\";\n      }\n\n      items[index].mode = \"writing\";\n      items = this.deselectAll(items);\n      items[index].selected = true;\n      this.setState({\n        descriptions: items\n      });\n    }\n  }\n\n  handleBlur(key, txt) {\n    let items = [...this.state.descriptions];\n\n    if (txt !== \"\") {\n      const index = this.getIndex(items, key, 0);\n      items[index].mode = \"not_writing\";\n      items[index].text = txt;\n    } else if (txt === \"\" && items.length > 1) {\n      items = this.removeWritingStep(items);\n    }\n\n    sendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n    this.setState({\n      descriptions: items\n    });\n  }\n\n  handleKeyAction(key, txt, event) {\n    let items = [...this.state.descriptions]; // del --> delete step\n\n    if (event.which === 46 || event.type === 'click' && txt === 'close_btn') {\n      let currentStepIndex = null;\n\n      if (key === null) {\n        // delete (window listener)\n        currentStepIndex = this.getSelected(items);\n      } else {\n        // delete (<input> listener)\n        currentStepIndex = this.getIndex(items, key, 0);\n      }\n\n      if ((items[currentStepIndex].selected || event.type === 'click' && txt === 'close_btn') && items.length >= 2) {\n        // select the previous/next step\n        items = this.deselectAll(items);\n        const descIndexList = this.getDescendents(items, currentStepIndex);\n\n        if (currentStepIndex === 0) {\n          items[currentStepIndex + descIndexList.length].selected = true;\n        } else {\n          const prevSiblingIndex = this.getPrevSibling(items, currentStepIndex);\n          let offset = 1;\n\n          if (!(prevSiblingIndex == null)) {\n            const prevStepDescIndexList = this.getDescendents(items, prevSiblingIndex);\n            offset = prevStepDescIndexList.length;\n          }\n\n          items[currentStepIndex - offset].selected = true;\n        } // do not delete everything\n\n\n        if (descIndexList.length < items.length) {\n          items = this.deleteItems(items, descIndexList);\n          sendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n          this.setState({\n            descriptions: items\n          });\n        }\n      }\n    } // Enter --> nex step (writing)\n    else if (event.which === 13 && txt !== \"\") {\n      const currentStepMode = this.getMode(items, key, 0);\n      const curretnStepIndex = this.getIndex(items, key, 0);\n      let newStepIndex = curretnStepIndex;\n\n      if (currentStepMode === \"writing\" || currentStepMode === \"not_writing\" && items[curretnStepIndex].selected) {\n        // change the current step to non-writing and add one writing step after it\n        items[curretnStepIndex].mode = \"not_writing\";\n        items[curretnStepIndex].text = txt; // select the current step\n\n        items = this.deselectAll(items);\n        [items, newStepIndex] = this.addStepAfter(items, key, \"writing\", null);\n        items[newStepIndex].selected = true;\n        items[newStepIndex].mode = \"writing\";\n        sendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n        this.setState({\n          descriptions: items\n        });\n      }\n    } // Tab or Shift + Tab\n    else if (event.which === 9 || event.type === \"click\") {\n      event.preventDefault(); // perform indention if it is writing\n\n      const currentStepIndex = this.getIndex(items, key, 0);\n\n      if (currentStepIndex > 0) {\n        const descIndexList = this.getDescendents(items, currentStepIndex); // only tab\n\n        if (!event.shiftKey || txt === \"indent_btn\") {\n          if ((items[currentStepIndex].mode === \"writing\" || txt === \"indent_btn\") && items.length > 1) {\n            if (items[currentStepIndex - 1].level >= items[currentStepIndex].level && items[currentStepIndex].level <= 2) {\n              items[currentStepIndex].level += 1;\n              items = this.updateDescendents(items, descIndexList, \"level_increase\");\n              sendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n              this.setState({\n                descriptions: items\n              });\n            }\n          }\n        }\n\n        if (event.shiftKey || txt === \"outdent_btn\") {\n          // shift + tab\n          if (items[currentStepIndex].level >= 2) {\n            items[currentStepIndex].level -= 1;\n            items = this.updateDescendents(items, descIndexList, \"level_decrease\");\n            sendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n            this.setState({\n              descriptions: items\n            });\n          }\n        }\n      }\n    } // down\n    else if (event.which === 40) {\n      items = [...this.state.descriptions];\n      const oldIndex = this.getIndex(items, key, 0); // can't go down\n\n      if (oldIndex === items.length - 1) {\n        this.setState({\n          descriptions: items\n        });\n        return;\n      } // update the selected item\n\n\n      if (txt !== \"\") {\n        // keep the old item\n        items[oldIndex].text = txt;\n        items[oldIndex].selected = false;\n        items[oldIndex].mode = \"not_writing\"; // select the new item\n\n        items[oldIndex + 1].selected = true;\n        items[oldIndex + 1].mode = \"writing\";\n      } else {\n        // must be removed\n        items = this.removeItem(items, oldIndex); // select the new item\n\n        items[oldIndex].selected = true;\n        items[oldIndex].mode = \"writing\";\n      }\n\n      this.setState({\n        descriptions: items\n      });\n    } // up\n    else if (event.which === 38) {\n      items = [...this.state.descriptions];\n      const oldIndex = this.getIndex(items, key, 0); // can't go up\n\n      if (oldIndex === 0) {\n        this.setState({\n          descriptions: items\n        });\n        return;\n      } // update the selected item\n\n\n      if (txt !== \"\") {\n        // keep the old item\n        items[oldIndex].text = txt;\n        items[oldIndex].selected = false;\n        items[oldIndex].mode = \"not_writing\"; // select the new item\n\n        items[oldIndex - 1].selected = true;\n        items[oldIndex - 1].mode = \"writing\";\n      } else {\n        // must be removed\n        items = this.removeItem(items, oldIndex); // select the new item\n\n        items[oldIndex - 1].selected = true;\n        items[oldIndex - 1].mode = \"writing\";\n      }\n\n      this.setState({\n        descriptions: items\n      });\n    } else if (event.which === 40 || event.which === 38) {\n      items = [...this.state.descriptions];\n      const oldIndex = this.getIndex(items, key, 0);\n      if (oldIndex === items.length - 1 && event.which === 40) return;\n      if (oldIndex === 0 && event.which === 38) return; // take care of the old selected item\n\n      let oldItemIsRemoved = false;\n\n      if (txt === \"\") {\n        if (items.length > 1) {\n          // should be  deleted\n          items = this.removeItem(items, oldIndex);\n          oldItemIsRemoved = true;\n        } else {\n          return; // length = 0 --> you cannot go to another item\n        }\n      } else {\n        items[oldIndex].text = txt;\n        items[oldIndex].selected = false;\n        items[oldIndex].mode = \"not_writing\";\n      } // selected the new item (already know that items.length > 1)\n\n\n      let newIndex = oldIndex;\n\n      if (event.which === 40) {\n        // down\n        if (!oldItemIsRemoved && oldIndex < items.length - 1) {\n          newIndex = oldIndex + 1;\n        }\n      } else {\n        // up\n        if (oldIndex > 0) newIndex = oldIndex - 1;\n      }\n\n      items = this.deselectAll(items);\n      items[newIndex].selected = true;\n      items[newIndex].mode = \"writing\";\n      this.setState({\n        descriptions: items\n      });\n    }\n  } // TODO:\n  // 1) next-prev video\n  // 2) saving the description\n  // 4) add guiddance (key bindings, ...)\n  // 5) record timestamp\n  // 6) record video control events (number of times, and types (jump to the future/past))\n\n\n  getIndex(stateItems, descriptionKey, offset) {\n    let items = [...stateItems];\n    let itemIndex = items.map(item => item.key).indexOf(parseInt(descriptionKey));\n\n    if (itemIndex >= 0) {\n      return itemIndex + offset;\n    }\n\n    return -1;\n  }\n\n  getWritingIndex(items) {\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].mode === \"writing\") {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  setModeByKey(stateItems, descriptionKey, mode) {\n    let items = [...stateItems];\n    let itemIndex = items.map(item => item.key).indexOf(parseInt(descriptionKey));\n\n    if (itemIndex >= 0) {\n      items[itemIndex].mode = mode;\n    } else {\n      console.log(\"step description does not exist\");\n    }\n\n    return items;\n  }\n\n  getMode(stateItems, descriptionKey, offset) {\n    let items = [...stateItems];\n    let itemIndex = items.map(item => item.key).indexOf(parseInt(descriptionKey));\n\n    if (items[itemIndex + offset] !== undefined) {\n      return items[itemIndex + offset].mode;\n    }\n\n    return undefined;\n  }\n\n  getSelected(items) {\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].selected) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  getWritingStep(items) {\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].mode === \"writing\") {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  deselectAll(items) {\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].selected) {\n        items[i].selected = false;\n      }\n    }\n\n    return items;\n  }\n\n  addStepAfter(itemsState, key, mode, level) {\n    let items = [...itemsState];\n    let itemIndex = items.map(item => item.key).indexOf(parseInt(key)); // add the new step\n\n    let mLevel = level;\n\n    if (level === null) {\n      mLevel = items[itemIndex].level;\n    }\n\n    const descIndexList = this.getDescendents(items, itemIndex);\n    let newItemIndex = descIndexList[descIndexList.length - 1] + 1;\n    items.splice(newItemIndex, 0, {\n      key: this.counter,\n      mode: mode,\n      level: mLevel,\n      selected: true,\n      text: \"\"\n    });\n    this.counter += 1;\n    return [items, newItemIndex];\n  }\n\n  removeWritingStep(itemsState) {\n    let items = [...itemsState];\n    let newItems = [...items];\n\n    for (let i = 1; i < items.length; i++) {\n      if (items[i].mode === \"writing\") {\n        newItems.splice(i, 1);\n        return newItems;\n      }\n    }\n\n    console.log(\"Didn't find the item, to remove\");\n    return newItems;\n  }\n\n  removeItem(items, index) {\n    items.splice(index, 1);\n    return items;\n  }\n\n  getDescendents(items, index) {\n    let descIndexList = [index];\n    const currentStepLevel = items[index].level;\n\n    for (let i = index + 1; i < items.length; i++) {\n      if (items[i].level > currentStepLevel) {\n        descIndexList.push(i);\n      } else {\n        break;\n      }\n    }\n\n    return descIndexList;\n  }\n\n  updateDescendents(items, desIndexList, action) {\n    for (let i = 1; i < desIndexList.length; i++) {\n      if (action === \"level_increase\") {\n        items[desIndexList[i]].level += 1;\n      } else if (action === \"level_decrease\") {\n        items[desIndexList[i]].level -= 1;\n      }\n    }\n\n    return items;\n  }\n\n  deleteItems(items, indexList) {\n    let newItems = [];\n    items.forEach((item, index) => {\n      if (!indexList.includes(index)) {\n        newItems.push(item);\n      }\n    });\n    return newItems;\n  }\n\n  getPrevSibling(items, index) {\n    // pre-condition: index > 0\n    for (let i = index - 1; i > 0; i--) {\n      if (items[i].level < items[index].level) {\n        return null;\n      }\n\n      if (items[index].level === items[i].level) {\n        return i;\n      }\n    }\n\n    return null;\n  }\n\n  saveUserData(descriptions, fileName) {//const descriptionsJson = JSON.stringify(descriptions);\n  }\n\n}","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/DescriptionPane.jsx"],"names":["React","DragDropContext","Draggable","Droppable","StepDescription","sendDataToServer","DescriptionPane","Component","constructor","props","counter","sessionTime","state","descriptions","key","mode","level","selected","text","setModeByKey","bind","getMode","addStepAfter","removeWritingStep","getSelected","getWritingStep","deselectAll","getIndex","getWritingIndex","removeItem","updateDescendents","getDescendents","deleteItems","getPrevSibling","groupDescriptions","getSessionTime","handleSingleClick","handleBlur","handleKeyAction","handleDragEnd","render","descriptionListG","stepComponentsList","map","stepList","index","toString","provided","draggableProps","dragHandleProps","innerRef","item","handleDoubleClick","droppableProps","placeholder","componentDidUpdate","prevProps","videoID","componentDidMount","fetch","then","res","console","log","catch","err","d","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","stepDescriptionList","i","length","push","result","destination","source","items","sourceStepIndex","destinationStepIndex","steps","destinationOffset","sourceOffset","splice","user","setState","flat","txt","oldWritingIndex","event","which","type","currentStepIndex","descIndexList","prevSiblingIndex","offset","prevStepDescIndexList","currentStepMode","curretnStepIndex","newStepIndex","preventDefault","shiftKey","oldIndex","oldItemIsRemoved","newIndex","stateItems","descriptionKey","itemIndex","indexOf","parseInt","undefined","itemsState","mLevel","newItemIndex","newItems","currentStepLevel","desIndexList","action","indexList","forEach","includes","saveUserData","fileName"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\nimport \"./DescriptionPane.css\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport StepDescription from \"./StepDescription\";\nimport { sendDataToServer } from \"../apiCalls\"\n\nexport default class DescriptionPane extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.counter = 0;\n\t\tthis.sessionTime = \"\"\n\t\tthis.state = {\n\t\t\tdescriptions: [{ key: 0, mode: \"writing\", level: 1, selected: true, text: \"\" }],\n\t\t};\n\t\tthis.counter += 1;\n\n\t\tthis.setModeByKey = this.setModeByKey.bind(this);\n\t\tthis.getMode = this.getMode.bind(this);\n\t\tthis.addStepAfter = this.addStepAfter.bind(this);\n\t\tthis.removeWritingStep = this.removeWritingStep.bind(this);\n\t\tthis.getSelected = this.getSelected.bind(this);\n\t\tthis.getWritingStep = this.getWritingStep.bind(this);\n\t\tthis.deselectAll = this.deselectAll.bind(this);\n\t\tthis.getIndex = this.getIndex.bind(this);\n\t\tthis.getWritingIndex = this.getWritingIndex.bind(this);\n\t\tthis.removeItem = this.removeItem.bind(this);\n\t\tthis.updateDescendents = this.updateDescendents.bind(this);\n\t\tthis.getDescendents = this.getDescendents.bind(this);\n\t\tthis.deleteItems = this.deleteItems.bind(this);\n\t\tthis.getPrevSibling = this.getPrevSibling.bind(this);\n\t\tthis.groupDescriptions = this.groupDescriptions.bind(this);\n\t\tthis.getSessionTime = this.getSessionTime.bind(this);\n\n\t\tthis.handleSingleClick = this.handleSingleClick.bind(this);\n\t\tthis.handleBlur = this.handleBlur.bind(this);\n\t\tthis.handleKeyAction = this.handleKeyAction.bind(this);\n\t\tthis.handleDragEnd = this.handleDragEnd.bind(this);\n\t}\n\n\trender() {\n\n\t\tif (this.counter === 2) {\n\t\t\tthis.sessionTime = this.getSessionTime();\n\t\t}\n\n\t\tlet descriptionListG = this.groupDescriptions([...this.state.descriptions]);\n\n\t\tlet stepComponentsList = descriptionListG.map((stepList, index) => (\n\t\t\t<Draggable draggableId={index.toString()} key={index.toString()} index={index}>\n\t\t\t\t{(provided) => (<div key={index.toString()} id={index.toString()} className=\"step-div\" {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\n\t\t\t\t\t{stepList.map((item, index) => (\n\t\t\t\t\t\t<StepDescription\n\t\t\t\t\t\t\tid={item.key.toString()}\n\t\t\t\t\t\t\tkey={item.key.toString()}\n\t\t\t\t\t\t\tonSingleClick={this.handleSingleClick}\n\t\t\t\t\t\t\tonDoubleClick={this.handleDoubleClick}\n\t\t\t\t\t\t\tonBlur={this.handleBlur}\n\t\t\t\t\t\t\tonKeyPress={this.handleKeyAction}\n\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</div>)}\n\t\t\t</Draggable>\n\t\t));\n\n\t\treturn <DragDropContext onDragEnd={this.handleDragEnd}>\n\t\t\t<Droppable droppableId=\"description-pane-droppable\" >\n\t\t\t\t{(provided) => (<div id=\"description-pane-container\" ref={provided.innerRef} {...provided.droppableProps}>{stepComponentsList}{provided.placeholder}</div>)}\n\t\t\t</Droppable>\n\t\t</DragDropContext>\n\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.videoID !== this.props.videoID) {\n\t\t\tdescriptions: [{ key: 0, mode: \"writing\", level: 1, selected: true, text: \"\" }]\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"http://localhost:3000\").then(res => (console.log(res.text()))).catch(err => err)\n\t}\n\n\tgetSessionTime() {\n\t\tlet d = new Date();\n\t\tconst sessionTime = `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}-${d.getHours()}-${d.getMinutes()}-${d.getSeconds()}`;\n\t\treturn sessionTime;\n\t}\n\n\tgroupDescriptions(descriptions) {\n\t\tlet descriptionListG = [];\n\t\tlet stepDescriptionList = [];\n\t\tfor (let i = 0; i < descriptions.length; i++) {\n\t\t\t// new step\n\t\t\tif (descriptions[i].level === 1) {\n\t\t\t\tif (stepDescriptionList.length) {\n\t\t\t\t\tdescriptionListG.push(stepDescriptionList);\n\t\t\t\t}\n\t\t\t\tstepDescriptionList = [descriptions[i]];\n\t\t\t} else {\n\t\t\t\t// descendents\n\t\t\t\tstepDescriptionList.push(descriptions[i]);\n\t\t\t}\n\t\t\tif (i === descriptions.length - 1) {\n\t\t\t\tif (stepDescriptionList.length) {\n\t\t\t\t\tdescriptionListG.push(stepDescriptionList);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn descriptionListG;\n\t}\n\n\thandleDragEnd(result) {\n\t\tif (result.destination == null) return;\n\t\tif (result.destination.index === result.source.index) return;\n\n\t\tlet items = [...this.state.descriptions];\n\t\t// step-set level index\n\t\tconst sourceStepIndex = result.source.index;\n\t\tconst destinationStepIndex = result.destination.index;\n\n\t\tlet steps = this.groupDescriptions(items);\n\t\tlet destinationOffset = destinationStepIndex > sourceStepIndex ? 1 : 0;\n\t\tlet sourceOffset = destinationStepIndex > sourceStepIndex ? 0 : 1;\n\n\t\t// move a copy of source step into the new location\n\t\tsteps.splice(destinationStepIndex + destinationOffset, 0, steps[sourceStepIndex]);\n\t\t// remove the old copy of source step\n\t\tsteps.splice(sourceStepIndex + sourceOffset, 1);\n\t\tsendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n\t\tthis.setState({ descriptions: steps.flat() });\n\t}\n\n\thandleSingleClick(key, txt) {\n\t\tlet items = [...this.state.descriptions];\n\t\tif (txt !== \"\") {\n\t\t\tlet index = this.getIndex(items, key, 0);\n\t\t\tconst oldWritingIndex = this.getWritingIndex(items);\n\t\t\tif (oldWritingIndex >= 0) {\n\t\t\t\titems[oldWritingIndex].mode = \"not_writing\";\n\t\t\t}\n\t\t\titems[index].mode = \"writing\";\n\t\t\titems = this.deselectAll(items);\n\t\t\titems[index].selected = true;\n\t\t\tthis.setState({ descriptions: items });\n\t\t}\n\t}\n\n\thandleBlur(key, txt) {\n\t\tlet items = [...this.state.descriptions];\n\t\tif (txt !== \"\") {\n\t\t\tconst index = this.getIndex(items, key, 0);\n\t\t\titems[index].mode = \"not_writing\";\n\t\t\titems[index].text = txt;\n\t\t} else if (txt === \"\" && items.length > 1) {\n\t\t\titems = this.removeWritingStep(items);\n\t\t}\n\t\tsendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n\t\tthis.setState({ descriptions: items });\n\t}\n\n\thandleKeyAction(key, txt, event) {\n\t\tlet items = [...this.state.descriptions];\n\n\t\t// del --> delete step\n\t\tif (event.which === 46 || (event.type === 'click' && txt === 'close_btn')) {\n\t\t\tlet currentStepIndex = null;\n\t\t\tif (key === null) {\n\t\t\t\t// delete (window listener)\n\t\t\t\tcurrentStepIndex = this.getSelected(items);\n\t\t\t} else {\n\t\t\t\t// delete (<input> listener)\n\t\t\t\tcurrentStepIndex = this.getIndex(items, key, 0);\n\t\t\t}\n\n\t\t\tif ((items[currentStepIndex].selected || (event.type === 'click' && txt === 'close_btn')) && items.length >= 2) {\n\t\t\t\t// select the previous/next step\n\t\t\t\titems = this.deselectAll(items);\n\t\t\t\tconst descIndexList = this.getDescendents(items, currentStepIndex);\n\t\t\t\tif (currentStepIndex === 0) {\n\t\t\t\t\titems[currentStepIndex + descIndexList.length].selected = true;\n\t\t\t\t} else {\n\t\t\t\t\tconst prevSiblingIndex = this.getPrevSibling(items, currentStepIndex);\n\t\t\t\t\tlet offset = 1;\n\t\t\t\t\tif (!(prevSiblingIndex == null)) {\n\t\t\t\t\t\tconst prevStepDescIndexList = this.getDescendents(\n\t\t\t\t\t\t\titems,\n\t\t\t\t\t\t\tprevSiblingIndex\n\t\t\t\t\t\t);\n\t\t\t\t\t\toffset = prevStepDescIndexList.length;\n\t\t\t\t\t}\n\t\t\t\t\titems[currentStepIndex - offset].selected = true;\n\t\t\t\t}\n\t\t\t\t// do not delete everything\n\t\t\t\tif (descIndexList.length < items.length) {\n\t\t\t\t\titems = this.deleteItems(items, descIndexList);\n\t\t\t\t\tsendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n\t\t\t\t\tthis.setState({ descriptions: items });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\t// Enter --> nex step (writing)\n\t\telse if (event.which === 13 && txt !== \"\") {\n\t\t\tconst currentStepMode = this.getMode(items, key, 0);\n\t\t\tconst curretnStepIndex = this.getIndex(items, key, 0);\n\t\t\tlet newStepIndex = curretnStepIndex;\n\t\t\tif (\n\t\t\t\tcurrentStepMode === \"writing\" ||\n\t\t\t\t(currentStepMode === \"not_writing\" && items[curretnStepIndex].selected)\n\t\t\t) {\n\t\t\t\t// change the current step to non-writing and add one writing step after it\n\t\t\t\titems[curretnStepIndex].mode = \"not_writing\";\n\t\t\t\titems[curretnStepIndex].text = txt;\n\t\t\t\t// select the current step\n\t\t\t\titems = this.deselectAll(items);\n\t\t\t\t[items, newStepIndex] = this.addStepAfter(items, key, \"writing\", null);\n\t\t\t\titems[newStepIndex].selected = true;\n\t\t\t\titems[newStepIndex].mode = \"writing\";\n\t\t\t\tsendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n\t\t\t\tthis.setState({ descriptions: items });\n\t\t\t}\n\t\t}\n\n\t\t// Tab or Shift + Tab\n\t\telse if (event.which === 9 || event.type === \"click\") {\n\t\t\tevent.preventDefault();\n\t\t\t// perform indention if it is writing\n\t\t\tconst currentStepIndex = this.getIndex(items, key, 0);\n\n\t\t\tif (currentStepIndex > 0) {\n\t\t\t\tconst descIndexList = this.getDescendents(items, currentStepIndex);\n\t\t\t\t// only tab\n\t\t\t\tif (!event.shiftKey || txt === \"indent_btn\") {\n\t\t\t\t\tif ((items[currentStepIndex].mode === \"writing\" || txt === \"indent_btn\") && items.length > 1) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\titems[currentStepIndex - 1].level >=\n\t\t\t\t\t\t\titems[currentStepIndex].level &&\n\t\t\t\t\t\t\titems[currentStepIndex].level <= 2\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\titems[currentStepIndex].level += 1;\n\t\t\t\t\t\t\titems = this.updateDescendents(\n\t\t\t\t\t\t\t\titems,\n\t\t\t\t\t\t\t\tdescIndexList,\n\t\t\t\t\t\t\t\t\"level_increase\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n\t\t\t\t\t\t\tthis.setState({ descriptions: items });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} if (event.shiftKey || txt === \"outdent_btn\") {\n\t\t\t\t\t// shift + tab\n\t\t\t\t\tif (items[currentStepIndex].level >= 2) {\n\t\t\t\t\t\titems[currentStepIndex].level -= 1;\n\t\t\t\t\t\titems = this.updateDescendents(\n\t\t\t\t\t\t\titems,\n\t\t\t\t\t\t\tdescIndexList,\n\t\t\t\t\t\t\t\"level_decrease\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsendDataToServer(items, this.sessionTime, this.props.videoID, this.props.user);\n\t\t\t\t\t\tthis.setState({ descriptions: items });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// down\n\t\telse if (event.which === 40) {\n\t\t\titems = [...this.state.descriptions];\n\t\t\tconst oldIndex = this.getIndex(items, key, 0);\n\n\t\t\t// can't go down\n\t\t\tif (oldIndex === items.length - 1) {\n\t\t\t\tthis.setState({ descriptions: items });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// update the selected item\n\t\t\tif (txt !== \"\") { // keep the old item\n\t\t\t\titems[oldIndex].text = txt;\n\t\t\t\titems[oldIndex].selected = false;\n\t\t\t\titems[oldIndex].mode = \"not_writing\";\n\n\t\t\t\t// select the new item\n\t\t\t\titems[oldIndex + 1].selected = true;\n\t\t\t\titems[oldIndex + 1].mode = \"writing\";\n\n\t\t\t} else { // must be removed\n\t\t\t\titems = this.removeItem(items, oldIndex);\n\n\t\t\t\t// select the new item\n\t\t\t\titems[oldIndex].selected = true;\n\t\t\t\titems[oldIndex].mode = \"writing\";\n\t\t\t}\n\t\t\tthis.setState({ descriptions: items });\n\t\t}\n\n\t\t// up\n\t\telse if (event.which === 38) {\n\t\t\titems = [...this.state.descriptions];\n\t\t\tconst oldIndex = this.getIndex(items, key, 0);\n\n\t\t\t// can't go up\n\t\t\tif (oldIndex === 0) {\n\t\t\t\tthis.setState({ descriptions: items });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// update the selected item\n\t\t\tif (txt !== \"\") { // keep the old item\n\t\t\t\titems[oldIndex].text = txt;\n\t\t\t\titems[oldIndex].selected = false;\n\t\t\t\titems[oldIndex].mode = \"not_writing\";\n\n\t\t\t\t// select the new item\n\t\t\t\titems[oldIndex - 1].selected = true;\n\t\t\t\titems[oldIndex - 1].mode = \"writing\";\n\n\t\t\t} else { // must be removed\n\t\t\t\titems = this.removeItem(items, oldIndex);\n\n\t\t\t\t// select the new item\n\t\t\t\titems[oldIndex - 1].selected = true;\n\t\t\t\titems[oldIndex - 1].mode = \"writing\";\n\t\t\t}\n\t\t\tthis.setState({ descriptions: items });\n\t\t}\n\n\n\n\t\telse if (event.which === 40 || event.which === 38) {\n\t\t\titems = [...this.state.descriptions];\n\t\t\tconst oldIndex = this.getIndex(items, key, 0);\n\n\t\t\tif (oldIndex === items.length - 1 && event.which === 40) return;\n\t\t\tif (oldIndex === 0 && event.which === 38) return;\n\n\t\t\t// take care of the old selected item\n\t\t\tlet oldItemIsRemoved = false;\n\t\t\tif (txt === \"\") {\n\t\t\t\tif (items.length > 1) { // should be  deleted\n\t\t\t\t\titems = this.removeItem(items, oldIndex);\n\t\t\t\t\toldItemIsRemoved = true;\n\t\t\t\t} else {\n\t\t\t\t\treturn; // length = 0 --> you cannot go to another item\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\titems[oldIndex].text = txt;\n\t\t\t\titems[oldIndex].selected = false;\n\t\t\t\titems[oldIndex].mode = \"not_writing\";\n\t\t\t}\n\n\t\t\t// selected the new item (already know that items.length > 1)\n\t\t\tlet newIndex = oldIndex;\n\t\t\tif (event.which === 40) {  // down\n\t\t\t\tif (!oldItemIsRemoved && oldIndex < items.length - 1) {\n\t\t\t\t\tnewIndex = oldIndex + 1;\n\t\t\t\t}\n\t\t\t} else { // up\n\t\t\t\tif (oldIndex > 0)\n\t\t\t\t\tnewIndex = oldIndex - 1;\n\t\t\t}\n\t\t\titems = this.deselectAll(items);\n\t\t\titems[newIndex].selected = true;\n\t\t\titems[newIndex].mode = \"writing\";\n\t\t\tthis.setState({ descriptions: items });\n\t\t}\n\t}\n\n\t// TODO:\n\t// 1) next-prev video\n\t// 2) saving the description\n\t// 4) add guiddance (key bindings, ...)\n\t// 5) record timestamp\n\t// 6) record video control events (number of times, and types (jump to the future/past))\n\n\tgetIndex(stateItems, descriptionKey, offset) {\n\t\tlet items = [...stateItems];\n\t\tlet itemIndex = items\n\t\t\t.map((item) => item.key)\n\t\t\t.indexOf(parseInt(descriptionKey));\n\t\tif (itemIndex >= 0) {\n\t\t\treturn itemIndex + offset;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tgetWritingIndex(items) {\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (items[i].mode === \"writing\") {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tsetModeByKey(stateItems, descriptionKey, mode) {\n\t\tlet items = [...stateItems];\n\t\tlet itemIndex = items\n\t\t\t.map((item) => item.key)\n\t\t\t.indexOf(parseInt(descriptionKey));\n\t\tif (itemIndex >= 0) {\n\t\t\titems[itemIndex].mode = mode;\n\t\t} else {\n\t\t\tconsole.log(\"step description does not exist\");\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tgetMode(stateItems, descriptionKey, offset) {\n\t\tlet items = [...stateItems];\n\t\tlet itemIndex = items\n\t\t\t.map((item) => item.key)\n\t\t\t.indexOf(parseInt(descriptionKey));\n\t\tif (items[itemIndex + offset] !== undefined) {\n\t\t\treturn items[itemIndex + offset].mode;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetSelected(items) {\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (items[i].selected) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tgetWritingStep(items) {\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (items[i].mode === \"writing\") {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\n\tdeselectAll(items) {\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (items[i].selected) {\n\t\t\t\titems[i].selected = false;\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t}\n\n\taddStepAfter(itemsState, key, mode, level) {\n\t\tlet items = [...itemsState];\n\t\tlet itemIndex = items.map((item) => item.key).indexOf(parseInt(key));\n\t\t// add the new step\n\t\tlet mLevel = level;\n\t\tif (level === null) {\n\t\t\tmLevel = items[itemIndex].level;\n\t\t}\n\t\tconst descIndexList = this.getDescendents(items, itemIndex);\n\t\tlet newItemIndex = descIndexList[descIndexList.length - 1] + 1;\n\t\titems.splice(newItemIndex, 0, {\n\t\t\tkey: this.counter,\n\t\t\tmode: mode,\n\t\t\tlevel: mLevel,\n\t\t\tselected: true,\n\t\t\ttext: \"\"\n\t\t});\n\t\tthis.counter += 1;\n\n\t\treturn [items, newItemIndex];\n\t}\n\n\tremoveWritingStep(itemsState) {\n\t\tlet items = [...itemsState];\n\t\tlet newItems = [...items];\n\t\tfor (let i = 1; i < items.length; i++) {\n\t\t\tif (items[i].mode === \"writing\") {\n\t\t\t\tnewItems.splice(i, 1);\n\t\t\t\treturn newItems;\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"Didn't find the item, to remove\");\n\t\treturn newItems;\n\t}\n\n\tremoveItem(items, index) {\n\t\titems.splice(index, 1);\n\t\treturn items;\n\t}\n\n\tgetDescendents(items, index) {\n\t\tlet descIndexList = [index];\n\t\tconst currentStepLevel = items[index].level;\n\t\tfor (let i = index + 1; i < items.length; i++) {\n\t\t\tif (items[i].level > currentStepLevel) {\n\t\t\t\tdescIndexList.push(i);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn descIndexList;\n\t}\n\n\tupdateDescendents(items, desIndexList, action) {\n\t\tfor (let i = 1; i < desIndexList.length; i++) {\n\t\t\tif (action === \"level_increase\") {\n\t\t\t\titems[desIndexList[i]].level += 1;\n\t\t\t} else if (action === \"level_decrease\") {\n\t\t\t\titems[desIndexList[i]].level -= 1;\n\t\t\t}\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tdeleteItems(items, indexList) {\n\t\tlet newItems = [];\n\t\titems.forEach((item, index) => {\n\t\t\tif (!indexList.includes(index)) {\n\t\t\t\tnewItems.push(item);\n\t\t\t}\n\t\t});\n\t\treturn newItems;\n\t}\n\n\tgetPrevSibling(items, index) {\n\t\t// pre-condition: index > 0\n\t\tfor (let i = index - 1; i > 0; i--) {\n\t\t\tif (items[i].level < items[index].level) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (items[index].level === items[i].level) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tsaveUserData(descriptions, fileName) {\n\t\t//const descriptionsJson = JSON.stringify(descriptions);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}