{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/App.js\";\nimport React from \"react\";\nimport \"video.js/dist/video-js.css\";\nimport Task2Page from \"./pages/Task2Page\";\nimport Task1Page from \"./pages/Task1Page\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoId: \"\",\n      token: \"\"\n    };\n    this.user = \"\";\n    this.currentPage = \"task1\";\n    this.setToken = this.setToken.bind(this);\n    this.getToken = this.getToken.bind(this);\n    this.handleVideoPlay = this.handleVideoPlay.bind(this);\n    this.handleNavifationButtonClick = this.handleNavifationButtonClick.bind(this);\n  }\n\n  render() {\n    const token = this.getToken(); // if (!token) {\n    //     return <Login setToken={this.setToken} />;\n    // }\n\n    let page = /*#__PURE__*/_jsxDEV(Task1Page, {\n      videoId: this.state.videoId,\n      handleVideoPlay: this.handleVideoPlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n\n    if (this.currentPage === \"task2\") {\n      page = /*#__PURE__*/_jsxDEV(Task2Page, {\n        handleVideoPlay: this.handleVideoPlay,\n        handleNavifationButtonClick: this.handleNavifationButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  handleNavifationButtonClick(btn) {\n    console.log(btn);\n  }\n\n  handleVideoPlay(videoUrl) {\n    // remove time from the url\n    let newUrl = videoUrl;\n\n    if (videoUrl.includes(\"&t=\")) {\n      const urlFirstHalf = videoUrl.split(\"&t=\")[0];\n      let urlSecondHalf = videoUrl.split(\"&t=\")[1];\n\n      if (urlSecondHalf.includes(\"&v=\")) {\n        urlSecondHalf = \"&v=\" + urlSecondHalf.split(\"&v=\")[1];\n      }\n\n      newUrl = urlFirstHalf + urlSecondHalf;\n    }\n\n    if (this.state.videoId !== newUrl) {\n      this.setState({\n        videoId: newUrl\n      });\n    }\n  }\n\n  setToken(userToken, username) {\n    sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n    this.user = username;\n    sessionStorage.setItem(\"user\", this.user);\n    this.forceUpdate();\n  }\n\n  getToken() {\n    const tokenString = sessionStorage.getItem(\"token\");\n    const userToken = JSON.parse(tokenString);\n    this.user = sessionStorage.getItem(\"user\");\n    return userToken === null || userToken === void 0 ? void 0 : userToken.token;\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/App.js"],"names":["React","Task2Page","Task1Page","App","Component","constructor","props","state","videoId","token","user","currentPage","setToken","bind","getToken","handleVideoPlay","handleNavifationButtonClick","render","page","btn","console","log","videoUrl","newUrl","includes","urlFirstHalf","split","urlSecondHalf","setState","userToken","username","sessionStorage","setItem","JSON","stringify","forceUpdate","tokenString","getItem","parse","callAPI","fetch","then","res","text","apiResponse"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport \"video.js/dist/video-js.css\";\n\nimport Task2Page from \"./pages/Task2Page\";\nimport Task1Page from \"./pages/Task1Page\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { videoId: \"\", token: \"\" };\n        this.user = \"\";\n        this.currentPage = \"task1\";\n\n        this.setToken = this.setToken.bind(this);\n        this.getToken = this.getToken.bind(this);\n        this.handleVideoPlay = this.handleVideoPlay.bind(this);\n        this.handleNavifationButtonClick = this.handleNavifationButtonClick.bind(this);\n    }\n\n    render() {\n        const token = this.getToken();\n\n        // if (!token) {\n        //     return <Login setToken={this.setToken} />;\n        // }\n\n        let page = (\n            <Task1Page\n                videoId={this.state.videoId}\n                handleVideoPlay={this.handleVideoPlay}\n            ></Task1Page>\n        );\n        if (this.currentPage === \"task2\") {\n            page = (\n                <Task2Page\n                    handleVideoPlay={this.handleVideoPlay}\n                    handleNavifationButtonClick={this.handleNavifationButtonClick}\n                ></Task2Page>\n            );\n        }\n\n        return <React.Fragment>{page}</React.Fragment>;\n    }\n\n    handleNavifationButtonClick(btn) {\n        console.log(btn);\n    }\n\n    handleVideoPlay(videoUrl) {\n        // remove time from the url\n        let newUrl = videoUrl;\n        if (videoUrl.includes(\"&t=\")) {\n            const urlFirstHalf = videoUrl.split(\"&t=\")[0];\n            let urlSecondHalf = videoUrl.split(\"&t=\")[1];\n            if (urlSecondHalf.includes(\"&v=\")) {\n                urlSecondHalf = \"&v=\" + urlSecondHalf.split(\"&v=\")[1];\n            }\n            newUrl = urlFirstHalf + urlSecondHalf;\n        }\n\n        if (this.state.videoId !== newUrl) {\n            this.setState({ videoId: newUrl });\n        }\n    }\n\n    setToken(userToken, username) {\n        sessionStorage.setItem(\"token\", JSON.stringify(userToken));\n        this.user = username;\n        sessionStorage.setItem(\"user\", this.user);\n        this.forceUpdate();\n    }\n\n    getToken() {\n        const tokenString = sessionStorage.getItem(\"token\");\n        const userToken = JSON.parse(tokenString);\n        this.user = sessionStorage.getItem(\"user\");\n        return userToken?.token;\n    }\n\n    callAPI() {\n        fetch(\"http://localhost:9000/testAPI\")\n            .then((res) => res.text())\n            .then((res) => this.setState({ apiResponse: res }));\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}