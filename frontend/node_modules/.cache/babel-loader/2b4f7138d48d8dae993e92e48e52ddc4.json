{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/StepProposition.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StepProposition extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textAreaRef = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    const {\n      rows,\n      cols,\n      data,\n      options,\n      id\n    } = this.props;\n    let stepProposition = null;\n    stepProposition = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-proposition-container\",\n      style: {\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        readOnly: !data.selected,\n        ref: this.textAreaRef,\n        rows: data.selected ? rows : 1,\n        cols: cols,\n        placeholder: \"type here\",\n        style: {\n          resize: \"none\",\n          overflow: \"hidden\",\n          padding: \"10px\",\n          marginBottom: \"15px\",\n          fontSize: \"16px\"\n        },\n        onBlur: () => this.props.handleUnselected(parseInt(this.props.id), this.textAreaRef.current.value),\n        onFocus: () => this.props.handleSelected(parseInt(this.props.id)),\n        value: data.text\n      }, id.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), options.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frequency-scale-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"frequency-scale-radio-btn-container\",\n            style: {\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              gap: \"60px\"\n            },\n            children: options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"scale-radio-btn-div\",\n              style: {\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                id: `radio-btn-label-${option}`,\n                htmlFor: `radio-btn-${option}`,\n                style: {\n                  marginBottom: \"4px\"\n                },\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: `radio-btn-${option}`,\n                type: \"radio\",\n                name: \"freqScale\",\n                value: option,\n                checked: data.freq === option ? true : false,\n                onClick: () => this.props.handleFreqencySelected(parseInt(this.props.id), idx, this.textAreaRef.current.value),\n                onChange: () => {\n                  const x = 1;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this)]\n            }, `${id.toString()}_${idx}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this) : {}]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n    return stepProposition;\n  }\n\n  componentDidUpdate() {\n    this.textAreaRef.current.value = this.props.data.text;\n  }\n\n  componentDidMount() {\n    this.textAreaRef.current.value = this.props.data.text;\n  }\n\n}","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/StepProposition.jsx"],"names":["React","StepProposition","Component","constructor","props","textAreaRef","createRef","render","rows","cols","data","options","id","stepProposition","padding","selected","resize","overflow","marginBottom","fontSize","handleUnselected","parseInt","current","value","handleSelected","text","toString","length","display","flexDirection","alignItems","justifyContent","gap","map","option","idx","freq","handleFreqencySelected","x","componentDidUpdate","componentDidMount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,WAAL,gBAAmBL,KAAK,CAACM,SAAN,EAAnB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,IAAR;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA,OAApB;AAA6BC,MAAAA;AAA7B,QAAoC,KAAKR,KAA/C;AACA,QAAIS,eAAe,GAAG,IAAtB;AAEAA,IAAAA,eAAe,gBACX;AACI,MAAA,SAAS,EAAC,4BADd;AAEI,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAFX;AAAA,8BAII;AAEI,QAAA,QAAQ,EAAE,CAACJ,IAAI,CAACK,QAFpB;AAGI,QAAA,GAAG,EAAE,KAAKV,WAHd;AAII,QAAA,IAAI,EAAEK,IAAI,CAACK,QAAL,GAAgBP,IAAhB,GAAuB,CAJjC;AAKI,QAAA,IAAI,EAAEC,IALV;AAMI,QAAA,WAAW,EAAE,WANjB;AAOI,QAAA,KAAK,EAAE;AACHO,UAAAA,MAAM,EAAE,MADL;AAEHC,UAAAA,QAAQ,EAAE,QAFP;AAGHH,UAAAA,OAAO,EAAE,MAHN;AAIHI,UAAAA,YAAY,EAAE,MAJX;AAKHC,UAAAA,QAAQ,EAAE;AALP,SAPX;AAcI,QAAA,MAAM,EAAE,MAAM,KAAKf,KAAL,CAAWgB,gBAAX,CAA4BC,QAAQ,CAAC,KAAKjB,KAAL,CAAWQ,EAAZ,CAApC,EAAqD,KAAKP,WAAL,CAAiBiB,OAAjB,CAAyBC,KAA9E,CAdlB;AAeI,QAAA,OAAO,EAAE,MACL,KAAKnB,KAAL,CAAWoB,cAAX,CACIH,QAAQ,CAAC,KAAKjB,KAAL,CAAWQ,EAAZ,CADZ,CAhBR;AAoBI,QAAA,KAAK,EAAEF,IAAI,CAACe;AApBhB,SACSb,EAAE,CAACc,QAAH,EADT;AAAA;AAAA;AAAA;AAAA,cAJJ,EA0BKf,OAAO,CAACgB,MAAR,gBACG;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA,+BACI;AAAA,iCACI;AACI,YAAA,SAAS,EAAC,qCADd;AAEI,YAAA,KAAK,EAAE;AACHC,cAAAA,OAAO,EAAE,MADN;AAEHC,cAAAA,aAAa,EAAE,KAFZ;AAGHC,cAAAA,UAAU,EAAE,QAHT;AAIHC,cAAAA,cAAc,EAAE,QAJb;AAKHC,cAAAA,GAAG,EAAE;AALF,aAFX;AAAA,sBAUKrB,OAAO,CAACsB,GAAR,CAAY,CAACC,MAAD,EAASC,GAAT,kBACT;AAEI,cAAA,SAAS,EAAC,qBAFd;AAGI,cAAA,KAAK,EAAE;AACHP,gBAAAA,OAAO,EAAE,MADN;AAEHC,gBAAAA,aAAa,EAAE,QAFZ;AAGHC,gBAAAA,UAAU,EAAE;AAHT,eAHX;AAAA,sCASI;AACI,gBAAA,EAAE,EAAG,mBAAkBI,MAAO,EADlC;AAEI,gBAAA,OAAO,EAAG,aAAYA,MAAO,EAFjC;AAGI,gBAAA,KAAK,EAAE;AAAEhB,kBAAAA,YAAY,EAAE;AAAhB,iBAHX;AAAA,0BAKKgB;AALL;AAAA;AAAA;AAAA;AAAA,sBATJ,eAgBI;AACI,gBAAA,EAAE,EAAG,aAAYA,MAAO,EAD5B;AAEI,gBAAA,IAAI,EAAC,OAFT;AAGI,gBAAA,IAAI,EAAC,WAHT;AAII,gBAAA,KAAK,EAAEA,MAJX;AAKI,gBAAA,OAAO,EAAExB,IAAI,CAAC0B,IAAL,KAAcF,MAAd,GAAuB,IAAvB,GAA8B,KAL3C;AAMI,gBAAA,OAAO,EAAE,MACL,KAAK9B,KAAL,CAAWiC,sBAAX,CACIhB,QAAQ,CAAC,KAAKjB,KAAL,CAAWQ,EAAZ,CADZ,EAEIuB,GAFJ,EAGI,KAAK9B,WAAL,CAAiBiB,OAAjB,CAAyBC,KAH7B,CAPR;AAaI,gBAAA,QAAQ,EAAE,MAAM;AACZ,wBAAMe,CAAC,GAAG,CAAV;AACH;AAfL;AAAA;AAAA;AAAA;AAAA,sBAhBJ;AAAA,eACU,GAAE1B,EAAE,CAACc,QAAH,EAAc,IAAGS,GAAI,EADjC;AAAA;AAAA;AAAA;AAAA,oBADH;AAVL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADH,GAqDG,EA/ER;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqFA,WAAOtB,eAAP;AACH;;AAED0B,EAAAA,kBAAkB,GAAG;AACjB,SAAKlC,WAAL,CAAiBiB,OAAjB,CAAyBC,KAAzB,GAAiC,KAAKnB,KAAL,CAAWM,IAAX,CAAgBe,IAAjD;AACH;;AAEDe,EAAAA,iBAAiB,GAAG;AAChB,SAAKnC,WAAL,CAAiBiB,OAAjB,CAAyBC,KAAzB,GAAiC,KAAKnB,KAAL,CAAWM,IAAX,CAAgBe,IAAjD;AACH;;AAxGwD","sourcesContent":["import React from \"react\";\n\nexport default class StepProposition extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textAreaRef = React.createRef();\n    }\n\n    render() {\n        const { rows, cols, data, options, id } = this.props;\n        let stepProposition = null;\n\n        stepProposition = (\n            <div\n                className=\"step-proposition-container\"\n                style={{ padding: \"10px\"}}\n            >\n                <textarea\n                    key={id.toString()}\n                    readOnly={!data.selected}\n                    ref={this.textAreaRef}\n                    rows={data.selected ? rows : 1}\n                    cols={cols}\n                    placeholder={\"type here\"}\n                    style={{\n                        resize: \"none\",\n                        overflow: \"hidden\",\n                        padding: \"10px\",\n                        marginBottom: \"15px\",\n                        fontSize: \"16px\",\n                    }}\n                    onBlur={() => this.props.handleUnselected(parseInt(this.props.id), this.textAreaRef.current.value)}\n                    onFocus={() =>\n                        this.props.handleSelected(\n                            parseInt(this.props.id),\n                        )\n                    }\n                    value={data.text}\n                ></textarea>\n                {options.length ? (\n                    <div className=\"frequency-scale-form-container\">\n                        <form>\n                            <div\n                                className=\"frequency-scale-radio-btn-container\"\n                                style={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    alignItems: \"center\",\n                                    justifyContent: \"center\",\n                                    gap: \"60px\",\n                                }}\n                            >\n                                {options.map((option, idx) => (\n                                    <div\n                                        key={`${id.toString()}_${idx}`}\n                                        className=\"scale-radio-btn-div\"\n                                        style={{\n                                            display: \"flex\",\n                                            flexDirection: \"column\",\n                                            alignItems: \"center\",\n                                        }}\n                                    >\n                                        <label\n                                            id={`radio-btn-label-${option}`}\n                                            htmlFor={`radio-btn-${option}`}\n                                            style={{ marginBottom: \"4px\" }}\n                                        >\n                                            {option}\n                                        </label>\n                                        <input\n                                            id={`radio-btn-${option}`}\n                                            type=\"radio\"\n                                            name=\"freqScale\"\n                                            value={option}\n                                            checked={data.freq === option ? true : false}\n                                            onClick={() =>\n                                                this.props.handleFreqencySelected(\n                                                    parseInt(this.props.id),\n                                                    idx,\n                                                    this.textAreaRef.current.value\n                                                )\n                                            }\n                                            onChange={() => {\n                                                const x = 1;\n                                            }}\n                                        ></input>\n                                    </div>\n                                ))}\n                            </div>\n                        </form>\n                    </div>\n                ) : (\n                    {}\n                )}\n            </div>\n        );\n\n        return stepProposition;\n    }\n\n    componentDidUpdate() {\n        this.textAreaRef.current.value = this.props.data.text;\n    }\n\n    componentDidMount() {\n        this.textAreaRef.current.value = this.props.data.text;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}