{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/App.js\";\nimport React from \"react\";\nimport \"video.js/dist/video-js.css\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport DescriptionPane from \"./components/DescriptionPane\";\nimport Login from \"./components/Login\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videoId: \"\",\n      token: \"\"\n    };\n    this.user = \"\";\n    this.setToken = this.setToken.bind(this);\n    this.getToken = this.getToken.bind(this);\n    this.handleVideoPlay = this.handleVideoPlay.bind(this);\n  }\n\n  render() {\n    const token = this.getToken();\n\n    if (!token) {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        setToken: this.setToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"player-container\",\n        children: /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          id: \"video-player\",\n          onVideoPlay: this.handleVideoPlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DescriptionPane, {\n        id: \"description-pane\",\n        videoID: this.state.videoId,\n        user: this.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleVideoPlay(videoUrl) {\n    // remove time from the url\n    videoUrl = videoUrl.split('t=')[0];\n    console.log(videoUrl);\n\n    if (this.state.videId !== videoUrl) {\n      this.setState({\n        videoId: videoUrl\n      });\n    }\n  }\n\n  setToken(userToken, username) {\n    sessionStorage.setItem('token', JSON.stringify(userToken));\n    this.user = username;\n    sessionStorage.setItem('user', this.user);\n    this.forceUpdate();\n  }\n\n  getToken() {\n    const tokenString = sessionStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    this.user = sessionStorage.getItem('user');\n    return userToken === null || userToken === void 0 ? void 0 : userToken.token;\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  componentDidMount() {//this.callAPI();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/App.js"],"names":["React","VideoPlayer","DescriptionPane","Login","App","Component","constructor","props","state","videoId","token","user","setToken","bind","getToken","handleVideoPlay","render","videoUrl","split","console","log","videId","setState","userToken","username","sessionStorage","setItem","JSON","stringify","forceUpdate","tokenString","getItem","parse","callAPI","fetch","then","res","text","apiResponse","componentDidMount"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport \"video.js/dist/video-js.css\";\n\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport DescriptionPane from \"./components/DescriptionPane\";\nimport Login from \"./components/Login\"\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { videoId: \"\", token: \"\" };\n        this.user = \"\";\n\n        this.setToken = this.setToken.bind(this);\n        this.getToken = this.getToken.bind(this);\n        this.handleVideoPlay = this.handleVideoPlay.bind(this);\n\n    }\n\n\n    render() {\n        \n        const token = this.getToken();\n\n        if (!token) {\n            return <Login setToken={this.setToken} />\n        }\n\n        return (\n            <div id=\"main-container\">\n                <div id=\"player-container\">\n                    <VideoPlayer id=\"video-player\" onVideoPlay={this.handleVideoPlay} />\n                </div>\n                <DescriptionPane id=\"description-pane\" videoID={this.state.videoId} user={this.user} />\n            </div>\n        );\n    }\n\n    handleVideoPlay(videoUrl) {\n        \n        // remove time from the url\n        videoUrl = videoUrl.split('t=')[0];\n        console.log(videoUrl)\n        \n        if (this.state.videId !== videoUrl) {\n            this.setState({videoId: videoUrl})\n        }\n    }\n\n\n    setToken(userToken, username) {\n        sessionStorage.setItem('token', JSON.stringify(userToken));\n        this.user = username;\n        sessionStorage.setItem('user', this.user);\n        this.forceUpdate();\n    }\n    \n    getToken() {\n        const tokenString = sessionStorage.getItem('token');\n        const userToken = JSON.parse(tokenString);\n        this.user = sessionStorage.getItem('user');\n        return userToken?.token\n    }\n\n\n    callAPI() {\n        fetch(\"http://localhost:9000/testAPI\")\n            .then(res => res.text())\n            .then(res => this.setState({ apiResponse: res }));\n    }\n\n    componentDidMount() {\n        //this.callAPI();\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}