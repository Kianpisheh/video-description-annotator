{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx\";\nimport React from 'react';\nimport \"./StepDescription.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StepDescription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInputRef = /*#__PURE__*/React.createRef();\n    this.handleDoubleClick = this.handleDoubleClick.bind(this);\n    this.handleSingleClick = this.handleSingleClick.bind(this);\n    this.handleDescriptionBlur = this.handleDescriptionBlur.bind(this);\n    this.handleDescriptionFocus = this.handleDescriptionFocus.bind(this);\n    this.setSelectedStyle = this.setSelectedStyle.bind(this);\n  }\n\n  handleDoubleClick(event) {\n    this.textInputRef.current.readOnly = false;\n  }\n\n  handleSingleClick(event) {\n    this.textInputRef.current.readOnly = true;\n  }\n\n  handleDescriptionBlur(event) {\n    this.textInputRef.current.readOnly = true;\n  }\n\n  handleDescriptionFocus(event) {}\n\n  componentDidMount() {\n    if (this.props.mode === \"selected\") {\n      this.textInputRef.current.focus();\n    } else if (this.props.mode === \"unselected\") {\n      this.textInputRef.current.blur();\n    }\n  }\n\n  setSelectedStyle() {\n    this.textInputRef.style.cursor = \"text\";\n  }\n\n  setUnselectedStyle() {\n    this.textInputRef.style.cursor = \"pointer\";\n  }\n\n  render() {\n    var textInputStyle = {};\n\n    if (this.props.mode === \"selected\") {\n      textInputStyle = {\n        cursor: \"text\"\n      };\n    } else if (this.props.mode === \"unselected\") {\n      textInputStyle = {\n        cursor: \"pointer\"\n      };\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-text\",\n      ref: this.textInputRef,\n      type: \"text\",\n      placeholder: \"type here...\",\n      maxLength: \"30\",\n      size: \"30\",\n      readOnly: this.props.mode === \"unselected\",\n      style: textInputStyle,\n      onClick: this.handleSingleClick,\n      onDoubleClick: this.handleDoubleClick,\n      onBlur: this.handleDescriptionBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx"],"names":["React","StepDescription","Component","constructor","props","textInputRef","createRef","handleDoubleClick","bind","handleSingleClick","handleDescriptionBlur","handleDescriptionFocus","setSelectedStyle","event","current","readOnly","componentDidMount","mode","focus","blur","style","cursor","setUnselectedStyle","render","textInputStyle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,uBAAP;;AAEA,eAAe,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,gBAAoBL,KAAK,CAACM,SAAN,EAApB;AAEA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BF,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKG,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BH,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAxB;AAEH;;AAEDD,EAAAA,iBAAiB,CAACM,KAAD,EAAQ;AACrB,SAAKR,YAAL,CAAkBS,OAAlB,CAA0BC,QAA1B,GAAqC,KAArC;AAEH;;AAEDN,EAAAA,iBAAiB,CAACI,KAAD,EAAQ;AACrB,SAAKR,YAAL,CAAkBS,OAAlB,CAA0BC,QAA1B,GAAqC,IAArC;AACH;;AAEDL,EAAAA,qBAAqB,CAACG,KAAD,EAAQ;AACzB,SAAKR,YAAL,CAAkBS,OAAlB,CAA0BC,QAA1B,GAAqC,IAArC;AACH;;AAEDJ,EAAAA,sBAAsB,CAACE,KAAD,EAAQ,CAG7B;;AAEDG,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKZ,KAAL,CAAWa,IAAX,KAAoB,UAAxB,EAAoC;AAChC,WAAKZ,YAAL,CAAkBS,OAAlB,CAA0BI,KAA1B;AACH,KAFD,MAEO,IAAI,KAAKd,KAAL,CAAWa,IAAX,KAAoB,YAAxB,EAAsC;AACzC,WAAKZ,YAAL,CAAkBS,OAAlB,CAA0BK,IAA1B;AACH;AACJ;;AAEDP,EAAAA,gBAAgB,GAAG;AACf,SAAKP,YAAL,CAAkBe,KAAlB,CAAwBC,MAAxB,GAAiC,MAAjC;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKjB,YAAL,CAAkBe,KAAlB,CAAwBC,MAAxB,GAAiC,SAAjC;AACH;;AAEDE,EAAAA,MAAM,GAAG;AAEL,QAAIC,cAAc,GAAG,EAArB;;AACA,QAAI,KAAKpB,KAAL,CAAWa,IAAX,KAAoB,UAAxB,EAAoC;AAChCO,MAAAA,cAAc,GAAG;AAACH,QAAAA,MAAM,EAAE;AAAT,OAAjB;AACH,KAFD,MAEO,IAAI,KAAKjB,KAAL,CAAWa,IAAX,KAAoB,YAAxB,EAAsC;AACzCO,MAAAA,cAAc,GAAG;AAACH,QAAAA,MAAM,EAAE;AAAT,OAAjB;AACH;;AAED,wBAAO;AAAO,MAAA,EAAE,EAAC,YAAV;AACO,MAAA,GAAG,EAAE,KAAKhB,YADjB;AAEO,MAAA,IAAI,EAAC,MAFZ;AAGO,MAAA,WAAW,EAAC,cAHnB;AAIO,MAAA,SAAS,EAAC,IAJjB;AAKO,MAAA,IAAI,EAAC,IALZ;AAMO,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWa,IAAX,KAAoB,YANrC;AAOO,MAAA,KAAK,EAAEO,cAPd;AAQO,MAAA,OAAO,EAAE,KAAKf,iBARrB;AASO,MAAA,aAAa,EAAE,KAAKF,iBAT3B;AAUO,MAAA,MAAM,EAAE,KAAKG;AAVpB;AAAA;AAAA;AAAA;AAAA,YAAP;AAWH;;AAnEwD","sourcesContent":["import React from 'react';\n\nimport \"./StepDescription.css\"\n\nexport default class StepDescription extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInputRef = React.createRef();\n\n        this.handleDoubleClick = this.handleDoubleClick.bind(this);\n        this.handleSingleClick = this.handleSingleClick.bind(this);\n        this.handleDescriptionBlur = this.handleDescriptionBlur.bind(this);\n        this.handleDescriptionFocus = this.handleDescriptionFocus.bind(this);\n        this.setSelectedStyle = this.setSelectedStyle.bind(this);\n\n    }\n\n    handleDoubleClick(event) {\n        this.textInputRef.current.readOnly = false;\n        \n    }\n\n    handleSingleClick(event) {\n        this.textInputRef.current.readOnly = true;\n    }\n\n    handleDescriptionBlur(event) {\n        this.textInputRef.current.readOnly = true;\n    }\n\n    handleDescriptionFocus(event) {\n\n\n    }\n\n    componentDidMount() {\n        if (this.props.mode === \"selected\") {\n            this.textInputRef.current.focus();\n        } else if (this.props.mode === \"unselected\") {\n            this.textInputRef.current.blur();\n        }\n    }\n\n    setSelectedStyle() {\n        this.textInputRef.style.cursor = \"text\"\n    }\n\n    setUnselectedStyle() {\n        this.textInputRef.style.cursor = \"pointer\"\n    }\n\n    render() {\n\n        var textInputStyle = {};\n        if (this.props.mode === \"selected\") {\n            textInputStyle = {cursor: \"text\"};\n        } else if (this.props.mode === \"unselected\") {\n            textInputStyle = {cursor: \"pointer\"};\n        }\n\n        return <input id=\"input-text\" \n                      ref={this.textInputRef} \n                      type=\"text\" \n                      placeholder=\"type here...\" \n                      maxLength=\"30\" \n                      size=\"30\" \n                      readOnly={this.props.mode === \"unselected\"} \n                      style={textInputStyle} \n                      onClick={this.handleSingleClick}\n                      onDoubleClick={this.handleDoubleClick}\n                      onBlur={this.handleDescriptionBlur} />\n    }\n}"]},"metadata":{},"sourceType":"module"}