{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx\";\nimport React from 'react';\nimport \"./StepDescription.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StepDescription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInputRef = /*#__PURE__*/React.createRef();\n    this.handleDoubleClick = this.handleDoubleClick.bind(this);\n    this.handleSingleClick = this.handleSingleClick.bind(this);\n    this.setSelectedStyle = this.setSelectedStyle.bind(this);\n    this.handleDescriptionBlur = this.handleDescriptionBlur.bind(this);\n  }\n\n  handleDoubleClick(event) {\n    this.textInputRef.current.readOnly = false;\n    this.setSelectedStyle();\n  }\n\n  handleSingleClick(event) {\n    this.textInputRef.current.readOnly = true;\n    this.setUnselectedStyle();\n    this.props.onSingleClick(this.props.id);\n  }\n\n  handleDescriptionBlur(event) {\n    this.textInputRef.current.readOnly = true;\n    this.setUnselectedStyle();\n  }\n\n  componentDidMount() {\n    if (this.props.mode === \"selected\") {\n      this.textInputRef.current.focus();\n    } else if (this.props.mode === \"unselected\") {\n      this.textInputRef.current.blur();\n    }\n  }\n\n  setSelectedStyle() {\n    this.textInputRef.current.style.cursor = \"text\";\n  }\n\n  setUnselectedStyle() {\n    this.textInputRef.current.style.cursor = \"pointer\";\n  }\n\n  render() {\n    var textInputStyle = {};\n\n    if (this.props.mode === \"selected\") {\n      textInputStyle = {\n        cursor: \"text\"\n      };\n    } else if (this.props.mode === \"unselected\") {\n      textInputStyle = {\n        cursor: \"pointer\"\n      };\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-text\",\n      ref: this.textInputRef,\n      type: \"text\",\n      placeholder: \"type here...\",\n      maxLength: \"30\",\n      size: \"30\",\n      readOnly: this.props.mode === \"unselected\",\n      style: textInputStyle,\n      onClick: this.handleSingleClick,\n      onDoubleClick: this.handleDoubleClick,\n      onBlur: this.handleDescriptionBlur\n    }, this.props.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx"],"names":["React","StepDescription","Component","constructor","props","textInputRef","createRef","handleDoubleClick","bind","handleSingleClick","setSelectedStyle","handleDescriptionBlur","event","current","readOnly","setUnselectedStyle","onSingleClick","id","componentDidMount","mode","focus","blur","style","cursor","render","textInputStyle","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,uBAAP;;AAEA,eAAe,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,gBAAoBL,KAAK,CAACM,SAAN,EAApB;AAEA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BH,IAA3B,CAAgC,IAAhC,CAA7B;AAEH;;AAEDD,EAAAA,iBAAiB,CAACK,KAAD,EAAQ;AACrB,SAAKP,YAAL,CAAkBQ,OAAlB,CAA0BC,QAA1B,GAAqC,KAArC;AACA,SAAKJ,gBAAL;AACH;;AAEDD,EAAAA,iBAAiB,CAACG,KAAD,EAAQ;AACrB,SAAKP,YAAL,CAAkBQ,OAAlB,CAA0BC,QAA1B,GAAqC,IAArC;AACA,SAAKC,kBAAL;AACA,SAAKX,KAAL,CAAWY,aAAX,CAAyB,KAAKZ,KAAL,CAAWa,EAApC;AACH;;AAEDN,EAAAA,qBAAqB,CAACC,KAAD,EAAQ;AACzB,SAAKP,YAAL,CAAkBQ,OAAlB,CAA0BC,QAA1B,GAAqC,IAArC;AACA,SAAKC,kBAAL;AACH;;AAGDG,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKd,KAAL,CAAWe,IAAX,KAAoB,UAAxB,EAAoC;AAChC,WAAKd,YAAL,CAAkBQ,OAAlB,CAA0BO,KAA1B;AACH,KAFD,MAEO,IAAI,KAAKhB,KAAL,CAAWe,IAAX,KAAoB,YAAxB,EAAsC;AACzC,WAAKd,YAAL,CAAkBQ,OAAlB,CAA0BQ,IAA1B;AACH;AACJ;;AAEDX,EAAAA,gBAAgB,GAAG;AACf,SAAKL,YAAL,CAAkBQ,OAAlB,CAA0BS,KAA1B,CAAgCC,MAAhC,GAAyC,MAAzC;AACH;;AAEDR,EAAAA,kBAAkB,GAAG;AACjB,SAAKV,YAAL,CAAkBQ,OAAlB,CAA0BS,KAA1B,CAAgCC,MAAhC,GAAyC,SAAzC;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAIC,cAAc,GAAG,EAArB;;AACA,QAAI,KAAKrB,KAAL,CAAWe,IAAX,KAAoB,UAAxB,EAAoC;AAChCM,MAAAA,cAAc,GAAG;AAACF,QAAAA,MAAM,EAAE;AAAT,OAAjB;AACH,KAFD,MAEO,IAAI,KAAKnB,KAAL,CAAWe,IAAX,KAAoB,YAAxB,EAAsC;AACzCM,MAAAA,cAAc,GAAG;AAACF,QAAAA,MAAM,EAAE;AAAT,OAAjB;AACH;;AAED,wBAAO;AAAO,MAAA,EAAE,EAAC,YAAV;AAEO,MAAA,GAAG,EAAE,KAAKlB,YAFjB;AAGO,MAAA,IAAI,EAAC,MAHZ;AAIO,MAAA,WAAW,EAAC,cAJnB;AAKO,MAAA,SAAS,EAAC,IALjB;AAMO,MAAA,IAAI,EAAC,IANZ;AAOO,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWe,IAAX,KAAoB,YAPrC;AAQO,MAAA,KAAK,EAAEM,cARd;AASO,MAAA,OAAO,EAAE,KAAKhB,iBATrB;AAUO,MAAA,aAAa,EAAE,KAAKF,iBAV3B;AAWO,MAAA,MAAM,EAAE,KAAKI;AAXpB,OACY,KAAKP,KAAL,CAAWsB,GADvB;AAAA;AAAA;AAAA;AAAA,YAAP;AAYH;;AAlEwD","sourcesContent":["import React from 'react';\n\nimport \"./StepDescription.css\"\n\nexport default class StepDescription extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInputRef = React.createRef();\n\n        this.handleDoubleClick = this.handleDoubleClick.bind(this);\n        this.handleSingleClick = this.handleSingleClick.bind(this);\n        this.setSelectedStyle = this.setSelectedStyle.bind(this);\n        this.handleDescriptionBlur = this.handleDescriptionBlur.bind(this);\n\n    }\n\n    handleDoubleClick(event) {\n        this.textInputRef.current.readOnly = false;\n        this.setSelectedStyle();\n    }\n\n    handleSingleClick(event) {\n        this.textInputRef.current.readOnly = true;\n        this.setUnselectedStyle();\n        this.props.onSingleClick(this.props.id);\n    }\n\n    handleDescriptionBlur(event) {\n        this.textInputRef.current.readOnly = true;\n        this.setUnselectedStyle();\n    }\n\n\n    componentDidMount() {\n        if (this.props.mode === \"selected\") {\n            this.textInputRef.current.focus();\n        } else if (this.props.mode === \"unselected\") {\n            this.textInputRef.current.blur();\n        }\n    }\n\n    setSelectedStyle() {\n        this.textInputRef.current.style.cursor = \"text\";\n    }\n\n    setUnselectedStyle() {\n        this.textInputRef.current.style.cursor = \"pointer\";\n    }\n\n    render() {\n\n        var textInputStyle = {};\n        if (this.props.mode === \"selected\") {\n            textInputStyle = {cursor: \"text\"};\n        } else if (this.props.mode === \"unselected\") {\n            textInputStyle = {cursor: \"pointer\"};\n        }\n\n        return <input id=\"input-text\" \n                      key={this.props.key}\n                      ref={this.textInputRef} \n                      type=\"text\" \n                      placeholder=\"type here...\" \n                      maxLength=\"30\" \n                      size=\"30\" \n                      readOnly={this.props.mode === \"unselected\"} \n                      style={textInputStyle} \n                      onClick={this.handleSingleClick}\n                      onDoubleClick={this.handleDoubleClick}\n                      onBlur={this.handleDescriptionBlur} />\n    }\n}"]},"metadata":{},"sourceType":"module"}