{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/VideoPlayer.jsx\";\nimport React from 'react';\nimport videojs from 'video.js';\nimport 'videojs-vr';\nimport 'video.js/dist/video-js.css';\nimport './VideoPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class VideoPlayer extends React.Component {\n  componentDidMount() {// instantiate Video.js\n    // this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n    //     console.log('onPlayerReady', this)\n    // });\n    // this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n    //     console.log('onPlayerReady', this);\n    //     const player = this;\n    //     player.mediainfo = player.mediainfo || {}\n    //     player.mediainfo.projection = 'Sphere'\n    //     player.vr({\n    //         projection: 'AUTO',\n    //         debug: true,\n    //         forceCardboard: false\n    //     });\n    // });\n  } // destroy player on unmount\n\n\n  componentWillUnmount() {// if (this.player) {\n    //     this.player.dispose()\n    // }\n  } // render() {\n  //     return (\n  //         <div data-vjs-player>\n  //             <video id=\"video-player\" ref={node => this.videoNode = node} className=\"video-js\" crossOrigin=\"anonymous\"></video>\n  //         </div >\n  //     )\n  // }\n\n\n  render() {\n    const sources = [// Declare an array of video sources\n    {\n      url: '//vjs.zencdn.net/v/oceans.mp4',\n      type: 'video/webm'\n    }];\n    const keys = {\n      // If you want to re-define the keys, here are the defaults\n      left: 'A',\n      right: 'D',\n      up: 'W',\n      down: 'S',\n      rotateLeft: 'Q',\n      rotateRight: 'E',\n      fullScreen: 'F',\n      zeroSensor: 'Z',\n      playPause: ' '\n    };\n    return /*#__PURE__*/_jsxDEV(VrPlayer, {\n      sources: sources,\n      brand: \"Some Brand Name\",\n      title: \"Some Video Title\",\n      keys: keys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/VideoPlayer.jsx"],"names":["React","videojs","VideoPlayer","Component","componentDidMount","componentWillUnmount","render","sources","url","type","keys","left","right","up","down","rotateLeft","rotateRight","fullScreen","zeroSensor","playPause"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,YAAP;AAEA,OAAO,4BAAP;AACA,OAAO,mBAAP;;AAEA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACrDC,EAAAA,iBAAiB,GAAG,CAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIH,GApBoD,CAsBrD;;;AACAC,EAAAA,oBAAoB,GAAG,CACnB;AACA;AACA;AACH,GA3BoD,CA6BrD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,CAAE;AACd;AAAEC,MAAAA,GAAG,EAAE,+BAAP;AAAwCC,MAAAA,IAAI,EAAE;AAA9C,KADY,CAAhB;AAGA,UAAMC,IAAI,GAAG;AAAE;AACXC,MAAAA,IAAI,EAAE,GADG;AAETC,MAAAA,KAAK,EAAE,GAFE;AAGTC,MAAAA,EAAE,EAAE,GAHK;AAITC,MAAAA,IAAI,EAAE,GAJG;AAKTC,MAAAA,UAAU,EAAE,GALH;AAMTC,MAAAA,WAAW,EAAE,GANJ;AAOTC,MAAAA,UAAU,EAAE,GAPH;AAQTC,MAAAA,UAAU,EAAE,GARH;AASTC,MAAAA,SAAS,EAAE;AATF,KAAb;AAWA,wBACI,QAAC,QAAD;AACI,MAAA,OAAO,EAAEZ,OADb;AAEI,MAAA,KAAK,EAAC,iBAFV;AAGI,MAAA,KAAK,EAAC,kBAHV;AAII,MAAA,IAAI,EAAEG;AAJV;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AA5DoD","sourcesContent":["import React from 'react';\nimport videojs from 'video.js'\nimport 'videojs-vr'\n\nimport 'video.js/dist/video-js.css'\nimport './VideoPlayer.css'\n\nexport default class VideoPlayer extends React.Component {\n    componentDidMount() {\n        // instantiate Video.js\n        // this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n        //     console.log('onPlayerReady', this)\n        // });\n        // this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n        //     console.log('onPlayerReady', this);\n        //     const player = this;\n        //     player.mediainfo = player.mediainfo || {}\n        //     player.mediainfo.projection = 'Sphere'\n        //     player.vr({\n        //         projection: 'AUTO',\n        //         debug: true,\n        //         forceCardboard: false\n        //     });\n        // });\n\n\n\n    }\n\n    // destroy player on unmount\n    componentWillUnmount() {\n        // if (this.player) {\n        //     this.player.dispose()\n        // }\n    }\n\n    // render() {\n    //     return (\n    //         <div data-vjs-player>\n    //             <video id=\"video-player\" ref={node => this.videoNode = node} className=\"video-js\" crossOrigin=\"anonymous\"></video>\n    //         </div >\n    //     )\n    // }\n\n    render() {\n        const sources = [ // Declare an array of video sources\n            { url: '//vjs.zencdn.net/v/oceans.mp4', type: 'video/webm' },\n        ];\n        const keys = { // If you want to re-define the keys, here are the defaults\n            left: 'A',\n            right: 'D',\n            up: 'W',\n            down: 'S',\n            rotateLeft: 'Q',\n            rotateRight: 'E',\n            fullScreen: 'F',\n            zeroSensor: 'Z',\n            playPause: ' '\n        };\n        return (\n            <VrPlayer\n                sources={sources}\n                brand=\"Some Brand Name\"\n                title=\"Some Video Title\"\n                keys={keys} />\n    \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}