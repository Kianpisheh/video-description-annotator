{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/VideoPlayer.jsx\";\nimport React from 'react';\nimport videojs from 'video.js';\nimport 'videojs-vr';\nimport 'video.js/dist/video-js.css';\nimport './VideoPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class VideoPlayer extends React.Component {\n  componentDidMount() {\n    // instantiate Video.js\n    // this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n    //     console.log('onPlayerReady', this)\n    // });\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n      console.log('onPlayerReady', this);\n      const player = this;\n      player.mediainfo = player.mediainfo || {};\n      player.mediainfo.projection = 'Sphere';\n      player.vr({\n        projection: 'AUTO',\n        debug: true,\n        forceCardboard: false\n      });\n    });\n  } // destroy player on unmount\n\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-vjs-player\": true,\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        id: \"video-player\",\n        ref: node => this.videoNode = node,\n        className: \"video-js\",\n        controls: true,\n        autoplay: true,\n        crossOrigin: \"anonymous\",\n        width: \"640\",\n        height: \"264\",\n        \"data-setup\": \"{ \\\"techOrder\\\": [\\\"youtube\\\"], \\\"sources\\\": [{ \\\"type\\\": \\\"video/youtube\\\", \\\"src\\\": \\\"https://www.youtube.com/watch?v=xjS6SftYQaQ\\\"}], \\\"youtube\\\": { \\\"iv_load_policy\\\": 1 } }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/VideoPlayer.jsx"],"names":["React","videojs","VideoPlayer","Component","componentDidMount","player","videoNode","props","onPlayerReady","console","log","mediainfo","projection","vr","debug","forceCardboard","componentWillUnmount","dispose","render","node"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,YAAP;AAEA,OAAO,4BAAP;AACA,OAAO,mBAAP;;AAEA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACrDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA;AACA;AACA,SAAKC,MAAL,GAAcJ,OAAO,CAAC,KAAKK,SAAN,EAAiB,KAAKC,KAAtB,EAA6B,SAASC,aAAT,GAAyB;AACvEC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,IAA7B;AACA,YAAML,MAAM,GAAG,IAAf;AACAA,MAAAA,MAAM,CAACM,SAAP,GAAmBN,MAAM,CAACM,SAAP,IAAoB,EAAvC;AACAN,MAAAA,MAAM,CAACM,SAAP,CAAiBC,UAAjB,GAA8B,QAA9B;AACAP,MAAAA,MAAM,CAACQ,EAAP,CAAU;AACND,QAAAA,UAAU,EAAE,MADN;AAENE,QAAAA,KAAK,EAAE,IAFD;AAGNC,QAAAA,cAAc,EAAE;AAHV,OAAV;AAKH,KAVoB,CAArB;AAcH,GApBoD,CAsBrD;;;AACAC,EAAAA,oBAAoB,GAAG;AACnB,QAAI,KAAKX,MAAT,EAAiB;AACb,WAAKA,MAAL,CAAYY,OAAZ;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,6BAAL;AAAA,6BACI;AACI,QAAA,EAAE,EAAC,cADP;AAEI,QAAA,GAAG,EAAEC,IAAI,IAAI,KAAKb,SAAL,GAAiBa,IAFlC;AAGI,QAAA,SAAS,EAAC,UAHd;AAII,QAAA,QAAQ,MAJZ;AAKI,QAAA,QAAQ,MALZ;AAMI,QAAA,WAAW,EAAC,WANhB;AAOI,QAAA,KAAK,EAAC,KAPV;AAOgB,QAAA,MAAM,EAAC,KAPvB;AAQI,sBAAW;AARf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AA9CoD","sourcesContent":["import React from 'react';\nimport videojs from 'video.js'\nimport 'videojs-vr'\n\nimport 'video.js/dist/video-js.css'\nimport './VideoPlayer.css'\n\nexport default class VideoPlayer extends React.Component {\n    componentDidMount() {\n        // instantiate Video.js\n        // this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n        //     console.log('onPlayerReady', this)\n        // });\n        this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n            console.log('onPlayerReady', this);\n            const player = this;\n            player.mediainfo = player.mediainfo || {}\n            player.mediainfo.projection = 'Sphere'\n            player.vr({\n                projection: 'AUTO',\n                debug: true,\n                forceCardboard: false\n            });\n        });\n\n\n\n    }\n\n    // destroy player on unmount\n    componentWillUnmount() {\n        if (this.player) {\n            this.player.dispose()\n        }\n    }\n\n    render() {\n        return (\n            <div data-vjs-player>\n                <video\n                    id=\"video-player\"\n                    ref={node => this.videoNode = node} \n                    className=\"video-js\"\n                    controls\n                    autoplay\n                    crossOrigin=\"anonymous\"\n                    width=\"640\" height=\"264\"\n                    data-setup='{ \"techOrder\": [\"youtube\"], \"sources\": [{ \"type\": \"video/youtube\", \"src\": \"https://www.youtube.com/watch?v=xjS6SftYQaQ\"}], \"youtube\": { \"iv_load_policy\": 1 } }'\n                >\n                </video>\n                {/* <video id=\"video-player\" ref={node => this.videoNode = node} className=\"video-js\" crossOrigin=\"anonymous\"></video> */}\n            </div >\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}