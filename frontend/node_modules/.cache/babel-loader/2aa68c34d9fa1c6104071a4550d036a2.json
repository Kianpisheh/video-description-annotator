{"ast":null,"code":"var _jsxFileName = \"/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx\";\nimport React from 'react';\nimport \"./StepDescription.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class StepDescription extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInputRef = /*#__PURE__*/React.createRef();\n    this.handleDoubleClick = this.handleDoubleClick.bind(this);\n    this.handleSingleClick = this.handleSingleClick.bind(this);\n    this.handleDescriptionBlur = this.handleDescriptionBlur.bind(this);\n    this.handleDescriptionFocus = this.handleDescriptionFocus.bind(this);\n  }\n\n  handleDoubleClick(event) {}\n\n  handleSingleClick(event) {// transform the text to editable text\n  }\n\n  handleDescriptionBlur(event) {}\n\n  handleDescriptionFocus(event) {}\n\n  render() {\n    if (this.props.mode === \"selected\") {\n      let textInputStyle = {\n        cursor: \"text\"\n      };\n    } else {\n      let textInputStyle = {\n        cursor: \"pointer\"\n      };\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"input-text\",\n      ref: this.textInputRef,\n      type: \"text\",\n      placeholder: \"type here...\",\n      maxLength: \"30\",\n      size: \"30\",\n      readOnly: !this.props.selected,\n      style: textInputStyle,\n      onClick: this.handleSingleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  } // render() {\n  //     return <p contentEditable=\"true\" style={{\n  //     }} onDoubleClick={this.handleDoubleClick} onClick={this.handleSingleClick}>\n  //         {this.props.text}\n  //     </p>\n  // }\n\n\n}","map":{"version":3,"sources":["/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx"],"names":["React","StepDescription","Component","constructor","props","textInputRef","createRef","handleDoubleClick","bind","handleSingleClick","handleDescriptionBlur","handleDescriptionFocus","event","render","mode","textInputStyle","cursor","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,uBAAP;;AAEA,eAAe,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA8C;AACzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,gBAAoBL,KAAK,CAACM,SAAN,EAApB;AAEA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BF,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKG,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BH,IAA5B,CAAiC,IAAjC,CAA9B;AAGH;;AAEDD,EAAAA,iBAAiB,CAACK,KAAD,EAAQ,CAExB;;AAEDH,EAAAA,iBAAiB,CAACG,KAAD,EAAQ,CACrB;AAEH;;AAEDF,EAAAA,qBAAqB,CAACE,KAAD,EAAQ,CAC5B;;AAEDD,EAAAA,sBAAsB,CAACC,KAAD,EAAQ,CAG7B;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKT,KAAL,CAAWU,IAAX,KAAoB,UAAxB,EAAoC;AAChC,UAAIC,cAAc,GAAG;AAACC,QAAAA,MAAM,EAAC;AAAR,OAArB;AACH,KAFD,MAEO;AACH,UAAID,cAAc,GAAG;AAACC,QAAAA,MAAM,EAAE;AAAT,OAArB;AACH;;AAED,wBAAO;AAAO,MAAA,EAAE,EAAC,YAAV;AACO,MAAA,GAAG,EAAE,KAAKX,YADjB;AAEO,MAAA,IAAI,EAAC,MAFZ;AAGO,MAAA,WAAW,EAAC,cAHnB;AAIO,MAAA,SAAS,EAAC,IAJjB;AAKO,MAAA,IAAI,EAAC,IALZ;AAMO,MAAA,QAAQ,EAAE,CAAC,KAAKD,KAAL,CAAWa,QAN7B;AAOO,MAAA,KAAK,EAAEF,cAPd;AAQO,MAAA,OAAO,EAAE,KAAKN;AARrB;AAAA;AAAA;AAAA;AAAA,YAAP;AASH,GA/CwD,CAiDzD;AACA;AAEA;AACA;AACA;AACA;;;AAvDyD","sourcesContent":["import React from 'react';\n\nimport \"./StepDescription.css\"\n\nexport default class StepDescription extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInputRef = React.createRef();\n\n        this.handleDoubleClick = this.handleDoubleClick.bind(this);\n        this.handleSingleClick = this.handleSingleClick.bind(this);\n        this.handleDescriptionBlur = this.handleDescriptionBlur.bind(this);\n        this.handleDescriptionFocus = this.handleDescriptionFocus.bind(this);\n\n\n    }\n\n    handleDoubleClick(event) {\n        \n    }\n\n    handleSingleClick(event) {\n        // transform the text to editable text\n\n    }\n\n    handleDescriptionBlur(event) {\n    }\n\n    handleDescriptionFocus(event) {\n\n\n    }\n\n    render() {\n\n        if (this.props.mode === \"selected\") {\n            let textInputStyle = {cursor:\"text\"} \n        } else {\n            let textInputStyle = {cursor: \"pointer\"}\n        }\n\n        return <input id=\"input-text\" \n                      ref={this.textInputRef} \n                      type=\"text\" \n                      placeholder=\"type here...\" \n                      maxLength=\"30\" \n                      size=\"30\" \n                      readOnly={!this.props.selected} \n                      style={textInputStyle} \n                      onClick={this.handleSingleClick} />\n    }\n\n    // render() {\n    //     return <p contentEditable=\"true\" style={{\n\n    //     }} onDoubleClick={this.handleDoubleClick} onClick={this.handleSingleClick}>\n    //         {this.props.text}\n    //     </p>\n    // }\n\n\n}"]},"metadata":{},"sourceType":"module"}