[{"/Users/kian/HAKEE/annotator_app/frontend/src/index.js":"1","/Users/kian/HAKEE/annotator_app/frontend/src/reportWebVitals.js":"2","/Users/kian/HAKEE/annotator_app/frontend/src/App.js":"3","/Users/kian/HAKEE/annotator_app/frontend/src/components/VideoPlayer.jsx":"4","/Users/kian/HAKEE/annotator_app/frontend/src/components/DescriptionPane.jsx":"5","/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx":"6"},{"size":500,"mtime":1631581768081,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1630558956973,"results":"9","hashOfConfig":"8"},{"size":936,"mtime":1631693579773,"results":"10","hashOfConfig":"8"},{"size":713,"mtime":1631559753126,"results":"11","hashOfConfig":"8"},{"size":14769,"mtime":1631868951812,"results":"12","hashOfConfig":"8"},{"size":4875,"mtime":1631838532139,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1rd8te9",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/Users/kian/HAKEE/annotator_app/frontend/src/index.js",[],["28","29"],"/Users/kian/HAKEE/annotator_app/frontend/src/reportWebVitals.js",[],"/Users/kian/HAKEE/annotator_app/frontend/src/App.js",[],"/Users/kian/HAKEE/annotator_app/frontend/src/components/VideoPlayer.jsx",[],"/Users/kian/HAKEE/annotator_app/frontend/src/components/DescriptionPane.jsx",[],"/Users/kian/HAKEE/annotator_app/frontend/src/components/StepDescription.jsx",["30","31","32","33"],"import React from \"react\";\n\nimport \"./StepDescription.css\";\nimport close_btn from \"../statics/close_btn.svg\";\nimport indent_btn from \"../statics/indent_btn.svg\";\nimport outdent_btn from \"../statics/outdent_btn.svg\";\n\nexport default class StepDescription extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textInputRef = React.createRef();\n        this.btnsDivRef = React.createRef();\n    }\n\n    render() {\n        var config = this.getConfig(this.props.item);\n\n        return (\n            <div className=\"description-item-div\" id={\"description-item_\" + this.props.id.toString()} style={config.itemDivStyle}>\n                <input\n                    className=\"input-text\"\n                    id={\"description-text_\" + this.props.id.toString()}\n                    className=\"description-text\"\n                    key={this.props.sid}\n                    ref={this.textInputRef}\n                    type=\"text\"\n                    placeholder=\"type here...\"\n                    maxLength=\"30\"\n                    size=\"30\"\n                    autoComplete=\"off\"\n                    draggable={true}\n                    blur={config.blur}\n                    focus={config.focus}\n                    autoFocus={config.autofocus}\n                    readOnly={config.readOnly}\n                    style={config.style}\n                    onClick={(event) => this.props.onSingleClick(this.props.id, this.textInputRef.current.value, event)}\n                    onKeyDown={(event) => this.props.onKeyPress(this.props.id, this.textInputRef.current.value, event)}\n                    onBlur={() => this.props.onBlur(this.props.id, this.textInputRef.current.value)}\n                />\n                <div className=\"step-btns-div\" ref={this.btnsDivRef}>\n                    <button\n                        className=\"outdent-btn\"\n                        id={\"outdent_btn_\" + this.props.id.toString()}\n                        onClick={(event) => this.props.onKeyPress(this.props.id, \"outdent_btn\", event)}\n                    >\n                        <img className=\"indentation-btn-img\" src={outdent_btn}></img>\n                    </button>\n                    <button\n                        className=\"indent-btn\"\n                        id={\"indent_btn_\" + this.props.id.toString()}\n                        onClick={(event) => this.props.onKeyPress(this.props.id, \"indent_btn\", event)}\n                    >\n                        <img className=\"indentation-btn-img\" src={indent_btn}></img>\n                    </button>\n                    <button\n                        className=\"close-btn\"\n                        id={\"indent_btn_\" + this.props.id.toString()}\n                        onClick={(event) => this.props.onKeyPress(this.props.id, \"close_btn\", event)}\n                    >\n                        <img className=\"close-btn-img\" src={close_btn}></img>\n                    </button>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidUpdate() {\n        this.textInputRef.current.value = this.props.item.text;\n        if (this.props.item.mode === \"writing\") {\n            this.textInputRef.current.focus();\n        } else {\n            this.textInputRef.current.blur();\n        }\n    }\n\n    componentDidMount() {\n        this.textInputRef.current.value = this.props.item.text;\n        if (this.props.item.mode === \"writing\") {\n            this.textInputRef.current.focus();\n        } else {\n            this.textInputRef.current.blur();\n        }\n    }\n\n    getConfig(item) {\n        const { mode, level } = item;\n\n        let textInputStyle = {};\n        let itemDivStyle = {};\n        let blur = \"false\";\n        let focus = \"true\";\n        let autofocus = true;\n        let readOnly = false;\n\n        if (mode === \"writing\") {\n            textInputStyle = { cursor: \"text\" };\n        } else if (mode === \"not_writing\") {\n            textInputStyle = { cursor: \"pointer\" };\n            blur = \"true\";\n            focus = \"false\";\n            readOnly = true;\n            autofocus = false;\n        }\n\n        // level-related styling\n        textInputStyle.fontSize = 17;\n        itemDivStyle.marginLeft = 0;\n        itemDivStyle.width = 470;\n        itemDivStyle.height = 45;\n\n        if (level === 2) {\n            textInputStyle.fontSize = 16;\n            itemDivStyle.marginLeft = 60;\n            itemDivStyle.width = 420;\n            itemDivStyle.height = 40;\n        } else if (level === 3) {\n            textInputStyle.fontSize = 15;\n            itemDivStyle.marginLeft = 110;\n            itemDivStyle.width = 395;\n            itemDivStyle.height = 35;\n        }\n\n        return {\n            readOnly: readOnly,\n            style: textInputStyle,\n            focus: focus,\n            blur: blur,\n            autofocus: autofocus,\n            itemDivStyle: itemDivStyle,\n        };\n    }\n}\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":23,"column":21,"nodeType":"40","messageId":"41","endLine":23,"endColumn":49},{"ruleId":"42","severity":1,"message":"43","line":47,"column":25,"nodeType":"44","endLine":47,"endColumn":80},{"ruleId":"42","severity":1,"message":"43","line":54,"column":25,"nodeType":"44","endLine":54,"endColumn":79},{"ruleId":"42","severity":1,"message":"43","line":61,"column":25,"nodeType":"44","endLine":61,"endColumn":72},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]