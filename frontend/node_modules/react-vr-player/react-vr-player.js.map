{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-vr-player.js","webpack:///webpack/bootstrap 1ed5668301b5f327c38a","webpack:///./source/index.js","webpack:///./~/gl-matrix/src/gl-matrix/common.js","webpack:///./~/gl-matrix/src/gl-matrix.js","webpack:///external \"react\"","webpack:///./~/gl-matrix/src/gl-matrix/mat3.js","webpack:///./~/gl-matrix/src/gl-matrix/vec3.js","webpack:///./~/gl-matrix/src/gl-matrix/vec4.js","webpack:///./source/helpers/get-vr-devices.js","webpack:///./source/helpers/goFullScreen.js","webpack:///./source/helpers/manual-controls.js","webpack:///./source/helpers/phonevr.js","webpack:///./source/helpers/select-local-video.js","webpack:///./source/webgl/index.js","webpack:///./source/webgl/settings.js","webpack:///./source/webgl/shader.js","webpack:///./source/VrPlayer.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/gl-matrix/src/gl-matrix/mat2.js","webpack:///./~/gl-matrix/src/gl-matrix/mat2d.js","webpack:///./~/gl-matrix/src/gl-matrix/mat4.js","webpack:///./~/gl-matrix/src/gl-matrix/quat.js","webpack:///./~/gl-matrix/src/gl-matrix/vec2.js","webpack:///./source/Controls.jsx","webpack:///./source/Video.jsx","webpack:///./source/VrPlayer.jsx","webpack:///./~/style-loader/addStyles.js","webpack:///./source/VrPlayer.css?448c","webpack:///./source/webgl/fragment.glsl","webpack:///./source/webgl/vertex.glsl"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_VrPlayer","_VrPlayer2","glMatrix","EPSILON","ARRAY_TYPE","Float32Array","Array","RANDOM","Math","random","setMatrixArrayType","type","GLMAT_ARRAY_TYPE","degree","PI","toRadian","mat2","mat2d","mat3","mat4","quat","vec2","vec3","vec4","create","out","fromMat4","clone","copy","identity","transpose","a01","a02","a12","invert","a00","a10","a11","a20","a21","a22","b01","b11","b21","det","adjoint","determinant","multiply","b","b00","b02","b10","b12","b20","b22","mul","translate","v","x","y","rotate","rad","s","sin","cos","scale","fromTranslation","fromRotation","fromScaling","fromMat2d","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","str","frob","sqrt","pow","fromValues","set","add","subtract","sub","divide","div","min","max","scaleAndAdd","distance","dist","squaredDistance","sqrDist","length","len","squaredLength","sqrLen","negate","inverse","normalize","dot","cross","ax","ay","az","bx","by","bz","lerp","t","hermite","d","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","r","zScale","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","ix","iy","iz","iw","rotateX","rotateY","rotateZ","forEach","vec","stride","offset","count","fn","arg","l","angle","tempA","tempB","cosine","acos","aw","getVr","navigator","getVRDevices","then","getHmdAndSensor","Promise","resolve","hmd","sensor","vrDevices","HMDVRDevice","PositionSensorVRDevice","hardwareUnitId","reject","goFullScreen","canvas","devices","fullScreen","mozRequestFullScreen","vrDisplay","webkitRequestFullscreen","requestFullScreen","requestFullscreen","initialiseManualControls","keys","onRotate","enableKeyControls","key","event","sign","control","manualControls","String","fromCharCode","keyCode","toLowerCase","active","index","document","addEventListener","left","right","up","down","rotateLeft","rotateRight","PhoneVR","deviceAlpha","deviceGamma","deviceBeta","window","orientation","alpha","gamma","beta","bind","getScreenOrientation","screen","mozOrientation","undefined","matrix","prototype","orientationIsAvailable","rotationQuat","degtorad","cX","cY","cZ","sX","sY","sZ","deviceQuaternion","screenOrientation","screenTransform","deviceRotation","r22","selectLocalVideo","input","createElement","accept","files","console","log","extension","name","split","pop","fileUrl","URL","createObjectURL","url","click","Stats","settings","Shader","vrDevice","phoneDevice","video","width","initStats","stats","setMode","domElement","style","position","bottom","ownerDocument","body","appendChild","initWebGL","gl","getContext","e","shader","fragmentShaderName","vertexShaderName","attributes","uniforms","initBuffers","positionsBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","positions","bufferData","STATIC_DRAW","verticesIndexBuffer","ELEMENT_ARRAY_BUFFER","vertexIndices","Uint16Array","initTextures","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","updateTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGB","UNSIGNED_BYTE","drawOneEye","eye","projectionMatrix","useProgram","program","vertexAttribPointer","FLOAT","activeTexture","TEXTURE0","uniform1i","uniform1f","projection","rotation","totalRotation","state","getState","sensorOrientation","manualRotation","projectionInverse","inv","uniformMatrix4fv","viewport","height","drawElements","TRIANGLES","UNSIGNED_SHORT","buildDrawScene","drawScene","frameTime","begin","frame","setCanvasSize","previousFrame","interval","update","manualRotateRate","perspectiveMatrix","leftParams","getEyeParameters","rightParams","mat4PerspectiveFromVRFieldOfView","recommendedFieldOfView","ratio","perspective","end","frameId","requestAnimationFrame","innerWidth","h","innerHeight","setCustomCanvasSize","isFullscreen","rectHalf","renderRect","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","fov","zNear","zFar","upTan","tan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","webkitCurrentFullScreenElement","clearColor","clearDepth","disable","DEPTH_TEST","draw","cancelAnimationFrame","stop","axis","videoObjectURL","getShader","source","result","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","fragment","vertex","params","fragmentShader","vertexShader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeName","getAttribLocation","enableVertexAttribArray","uniformName","getUniformLocation","push","list","toString","item","join","mediaQuery","alreadyImportedModules","a1","a0","a2","a3","b0","b1","b2","b3","v0","v1","LDU","L","D","U","aa","ab","ac","ad","atx","aty","a4","a5","b4","b5","abs","fromXRotation","fromYRotation","fromZRotation","fromRotationTranslation","xy","xz","yz","fromRotationTranslationScale","sx","sy","sz","fromRotationTranslationScaleOrigin","o","ox","oy","oz","frustum","top","near","far","rl","tb","nf","fovy","aspect","f","perspectiveFromFieldOfView","ortho","lr","bt","lookAt","center","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","rotationTo","tmpvec3","xUnitVec3","yUnitVec3","setAxisAngle","setAxes","matr","view","fromMat3","bw","calculateW","slerp","omega","cosom","sinom","scale0","scale1","sqlerp","temp1","temp2","invDot","conjugate","fRoot","fTrace","j","k","transformMat2","transformMat2d","_classCallCheck","instance","Constructor","TypeError","_inherits","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","descriptor","protoProps","staticProps","_get","_x","_x2","_x3","_again","object","property","receiver","desc","parent","getter","Function","getOwnPropertyDescriptor","get","getPrototypeOf","_react","_react2","_helpersSelectLocalVideo","_helpersSelectLocalVideo2","noop","Controls","_React$Component","apply","arguments","playClassName","isPlaying","muteClassName","isMute","className","title","onClick","playPause","onChange","positionChange","ref","mute","brand","selectLocalFile","onPlayPause","onMute","onFullScreen","onPositionChange","refs","seekBar","_this","videoFile","onLocalVideoSelected","error","Component","propTypes","PropTypes","bool","func","number","string","defaultProps","_helpersGetVrDevices","_helpersGetVrDevices2","_helpersPhonevr","_helpersPhonevr2","_webgl","_webgl2","_helpersManualControls","_helpersManualControls2","_helpersGoFullScreen","_helpersGoFullScreen2","Video","webGl","needReload","preload","loop","webkit-playsinline","sources","map","src","phone","devs","setState","paused","duration","currentTime","fullscreenEnabled","fullScreenElement","onFullscreen","newProps","updateSources","load","play","pause","muted","percentage","time","zeroSensor","array","isRequired","_Controls","_Controls2","_Video","_Video2","VrPlayer","togglePlayPause","toggleMute","toggleFullScreen","changePosition","localVideoSelected","playing","setPosition","videoSource","_this2","charCode","addStylesToDom","styles","options","domStyle","stylesInDom","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createLinkElement","linkElement","rel","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","memoize","memo","isOldIE","test","userAgent","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","content","locals"],"mappings":"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","file":"react-vr-player.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\")) : factory(root[\"react\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _VrPlayer = __webpack_require__(24);\n\t\n\tvar _VrPlayer2 = _interopRequireDefault(_VrPlayer);\n\n\texports['default'] = _VrPlayer2['default'];\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\t/**\n\t * @class Common utilities\n\t * @name glMatrix\n\t */\n\tvar glMatrix = {};\n\t\n\t// Constants\n\tglMatrix.EPSILON = 0.000001;\n\tglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\n\tglMatrix.RANDOM = Math.random;\n\t\n\t/**\n\t * Sets the type of array used when creating new vectors and matrices\n\t *\n\t * @param {Type} type Array type, such as Float32Array or Array\n\t */\n\tglMatrix.setMatrixArrayType = function(type) {\n\t    GLMAT_ARRAY_TYPE = type;\n\t}\n\t\n\tvar degree = Math.PI / 180;\n\t\n\t/**\n\t* Convert Degree To Radian\n\t*\n\t* @param {Number} Angle in Degrees\n\t*/\n\tglMatrix.toRadian = function(a){\n\t     return a * degree;\n\t}\n\t\n\tmodule.exports = glMatrix;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @fileoverview gl-matrix - High performance matrix and vector operations\n\t * @author Brandon Jones\n\t * @author Colin MacKenzie IV\n\t * @version 2.3.0\n\t */\n\t\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t// END HEADER\n\t\n\texports.glMatrix = __webpack_require__(1);\n\texports.mat2 = __webpack_require__(17);\n\texports.mat2d = __webpack_require__(18);\n\texports.mat3 = __webpack_require__(4);\n\texports.mat4 = __webpack_require__(19);\n\texports.quat = __webpack_require__(20);\n\texports.vec2 = __webpack_require__(21);\n\texports.vec3 = __webpack_require__(5);\n\texports.vec4 = __webpack_require__(6);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(1);\n\t\n\t/**\n\t * @class 3x3 Matrix\n\t * @name mat3\n\t */\n\tvar mat3 = {};\n\t\n\t/**\n\t * Creates a new identity mat3\n\t *\n\t * @returns {mat3} a new 3x3 matrix\n\t */\n\tmat3.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(9);\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 1;\n\t    out[5] = 0;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copies the upper-left 3x3 values into the given mat3.\n\t *\n\t * @param {mat3} out the receiving 3x3 matrix\n\t * @param {mat4} a   the source 4x4 matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.fromMat4 = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[4];\n\t    out[4] = a[5];\n\t    out[5] = a[6];\n\t    out[6] = a[8];\n\t    out[7] = a[9];\n\t    out[8] = a[10];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new mat3 initialized with values from an existing matrix\n\t *\n\t * @param {mat3} a matrix to clone\n\t * @returns {mat3} a new 3x3 matrix\n\t */\n\tmat3.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(9);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[8] = a[8];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one mat3 to another\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[8] = a[8];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set a mat3 to the identity matrix\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.identity = function(out) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 1;\n\t    out[5] = 0;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transpose the values of a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.transpose = function(out, a) {\n\t    // If we are transposing ourselves we can skip a few steps but have to cache some values\n\t    if (out === a) {\n\t        var a01 = a[1], a02 = a[2], a12 = a[5];\n\t        out[1] = a[3];\n\t        out[2] = a[6];\n\t        out[3] = a01;\n\t        out[5] = a[7];\n\t        out[6] = a02;\n\t        out[7] = a12;\n\t    } else {\n\t        out[0] = a[0];\n\t        out[1] = a[3];\n\t        out[2] = a[6];\n\t        out[3] = a[1];\n\t        out[4] = a[4];\n\t        out[5] = a[7];\n\t        out[6] = a[2];\n\t        out[7] = a[5];\n\t        out[8] = a[8];\n\t    }\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Inverts a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.invert = function(out, a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8],\n\t\n\t        b01 = a22 * a11 - a12 * a21,\n\t        b11 = -a22 * a10 + a12 * a20,\n\t        b21 = a21 * a10 - a11 * a20,\n\t\n\t        // Calculate the determinant\n\t        det = a00 * b01 + a01 * b11 + a02 * b21;\n\t\n\t    if (!det) { \n\t        return null; \n\t    }\n\t    det = 1.0 / det;\n\t\n\t    out[0] = b01 * det;\n\t    out[1] = (-a22 * a01 + a02 * a21) * det;\n\t    out[2] = (a12 * a01 - a02 * a11) * det;\n\t    out[3] = b11 * det;\n\t    out[4] = (a22 * a00 - a02 * a20) * det;\n\t    out[5] = (-a12 * a00 + a02 * a10) * det;\n\t    out[6] = b21 * det;\n\t    out[7] = (-a21 * a00 + a01 * a20) * det;\n\t    out[8] = (a11 * a00 - a01 * a10) * det;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the adjugate of a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the source matrix\n\t * @returns {mat3} out\n\t */\n\tmat3.adjoint = function(out, a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8];\n\t\n\t    out[0] = (a11 * a22 - a12 * a21);\n\t    out[1] = (a02 * a21 - a01 * a22);\n\t    out[2] = (a01 * a12 - a02 * a11);\n\t    out[3] = (a12 * a20 - a10 * a22);\n\t    out[4] = (a00 * a22 - a02 * a20);\n\t    out[5] = (a02 * a10 - a00 * a12);\n\t    out[6] = (a10 * a21 - a11 * a20);\n\t    out[7] = (a01 * a20 - a00 * a21);\n\t    out[8] = (a00 * a11 - a01 * a10);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the determinant of a mat3\n\t *\n\t * @param {mat3} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tmat3.determinant = function (a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8];\n\t\n\t    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n\t};\n\t\n\t/**\n\t * Multiplies two mat3's\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the first operand\n\t * @param {mat3} b the second operand\n\t * @returns {mat3} out\n\t */\n\tmat3.multiply = function (out, a, b) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8],\n\t\n\t        b00 = b[0], b01 = b[1], b02 = b[2],\n\t        b10 = b[3], b11 = b[4], b12 = b[5],\n\t        b20 = b[6], b21 = b[7], b22 = b[8];\n\t\n\t    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n\t    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n\t    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\t\n\t    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n\t    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n\t    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\t\n\t    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n\t    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n\t    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link mat3.multiply}\n\t * @function\n\t */\n\tmat3.mul = mat3.multiply;\n\t\n\t/**\n\t * Translate a mat3 by the given vector\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to translate\n\t * @param {vec2} v vector to translate by\n\t * @returns {mat3} out\n\t */\n\tmat3.translate = function(out, a, v) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8],\n\t        x = v[0], y = v[1];\n\t\n\t    out[0] = a00;\n\t    out[1] = a01;\n\t    out[2] = a02;\n\t\n\t    out[3] = a10;\n\t    out[4] = a11;\n\t    out[5] = a12;\n\t\n\t    out[6] = x * a00 + y * a10 + a20;\n\t    out[7] = x * a01 + y * a11 + a21;\n\t    out[8] = x * a02 + y * a12 + a22;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a mat3 by the given angle\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat3} out\n\t */\n\tmat3.rotate = function (out, a, rad) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2],\n\t        a10 = a[3], a11 = a[4], a12 = a[5],\n\t        a20 = a[6], a21 = a[7], a22 = a[8],\n\t\n\t        s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t\n\t    out[0] = c * a00 + s * a10;\n\t    out[1] = c * a01 + s * a11;\n\t    out[2] = c * a02 + s * a12;\n\t\n\t    out[3] = c * a10 - s * a00;\n\t    out[4] = c * a11 - s * a01;\n\t    out[5] = c * a12 - s * a02;\n\t\n\t    out[6] = a20;\n\t    out[7] = a21;\n\t    out[8] = a22;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales the mat3 by the dimensions in the given vec2\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat3} a the matrix to rotate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat3} out\n\t **/\n\tmat3.scale = function(out, a, v) {\n\t    var x = v[0], y = v[1];\n\t\n\t    out[0] = x * a[0];\n\t    out[1] = x * a[1];\n\t    out[2] = x * a[2];\n\t\n\t    out[3] = y * a[3];\n\t    out[4] = y * a[4];\n\t    out[5] = y * a[5];\n\t\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[8] = a[8];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.translate(dest, dest, vec);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {vec2} v Translation vector\n\t * @returns {mat3} out\n\t */\n\tmat3.fromTranslation = function(out, v) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 1;\n\t    out[5] = 0;\n\t    out[6] = v[0];\n\t    out[7] = v[1];\n\t    out[8] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.rotate(dest, dest, rad);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat3} out\n\t */\n\tmat3.fromRotation = function(out, rad) {\n\t    var s = Math.sin(rad), c = Math.cos(rad);\n\t\n\t    out[0] = c;\n\t    out[1] = s;\n\t    out[2] = 0;\n\t\n\t    out[3] = -s;\n\t    out[4] = c;\n\t    out[5] = 0;\n\t\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat3.identity(dest);\n\t *     mat3.scale(dest, dest, vec);\n\t *\n\t * @param {mat3} out mat3 receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat3} out\n\t */\n\tmat3.fromScaling = function(out, v) {\n\t    out[0] = v[0];\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t\n\t    out[3] = 0;\n\t    out[4] = v[1];\n\t    out[5] = 0;\n\t\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Copies the values from a mat2d into a mat3\n\t *\n\t * @param {mat3} out the receiving matrix\n\t * @param {mat2d} a the matrix to copy\n\t * @returns {mat3} out\n\t **/\n\tmat3.fromMat2d = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = 0;\n\t\n\t    out[3] = a[2];\n\t    out[4] = a[3];\n\t    out[5] = 0;\n\t\n\t    out[6] = a[4];\n\t    out[7] = a[5];\n\t    out[8] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t* Calculates a 3x3 matrix from the given quaternion\n\t*\n\t* @param {mat3} out mat3 receiving operation result\n\t* @param {quat} q Quaternion to create matrix from\n\t*\n\t* @returns {mat3} out\n\t*/\n\tmat3.fromQuat = function (out, q) {\n\t    var x = q[0], y = q[1], z = q[2], w = q[3],\n\t        x2 = x + x,\n\t        y2 = y + y,\n\t        z2 = z + z,\n\t\n\t        xx = x * x2,\n\t        yx = y * x2,\n\t        yy = y * y2,\n\t        zx = z * x2,\n\t        zy = z * y2,\n\t        zz = z * z2,\n\t        wx = w * x2,\n\t        wy = w * y2,\n\t        wz = w * z2;\n\t\n\t    out[0] = 1 - yy - zz;\n\t    out[3] = yx - wz;\n\t    out[6] = zx + wy;\n\t\n\t    out[1] = yx + wz;\n\t    out[4] = 1 - xx - zz;\n\t    out[7] = zy - wx;\n\t\n\t    out[2] = zx - wy;\n\t    out[5] = zy + wx;\n\t    out[8] = 1 - xx - yy;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n\t*\n\t* @param {mat3} out mat3 receiving operation result\n\t* @param {mat4} a Mat4 to derive the normal matrix from\n\t*\n\t* @returns {mat3} out\n\t*/\n\tmat3.normalFromMat4 = function (out, a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\t\n\t        b00 = a00 * a11 - a01 * a10,\n\t        b01 = a00 * a12 - a02 * a10,\n\t        b02 = a00 * a13 - a03 * a10,\n\t        b03 = a01 * a12 - a02 * a11,\n\t        b04 = a01 * a13 - a03 * a11,\n\t        b05 = a02 * a13 - a03 * a12,\n\t        b06 = a20 * a31 - a21 * a30,\n\t        b07 = a20 * a32 - a22 * a30,\n\t        b08 = a20 * a33 - a23 * a30,\n\t        b09 = a21 * a32 - a22 * a31,\n\t        b10 = a21 * a33 - a23 * a31,\n\t        b11 = a22 * a33 - a23 * a32,\n\t\n\t        // Calculate the determinant\n\t        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t\n\t    if (!det) { \n\t        return null; \n\t    }\n\t    det = 1.0 / det;\n\t\n\t    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\t\n\t    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\t\n\t    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns a string representation of a mat3\n\t *\n\t * @param {mat3} mat matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tmat3.str = function (a) {\n\t    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n\t                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + \n\t                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n\t};\n\t\n\t/**\n\t * Returns Frobenius norm of a mat3\n\t *\n\t * @param {mat3} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tmat3.frob = function (a) {\n\t    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n\t};\n\t\n\t\n\tmodule.exports = mat3;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(1);\n\t\n\t/**\n\t * @class 3 Dimensional Vector\n\t * @name vec3\n\t */\n\tvar vec3 = {};\n\t\n\t/**\n\t * Creates a new, empty vec3\n\t *\n\t * @returns {vec3} a new 3D vector\n\t */\n\tvec3.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(3);\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec3 initialized with values from an existing vector\n\t *\n\t * @param {vec3} a vector to clone\n\t * @returns {vec3} a new 3D vector\n\t */\n\tvec3.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(3);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec3 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @returns {vec3} a new 3D vector\n\t */\n\tvec3.fromValues = function(x, y, z) {\n\t    var out = new glMatrix.ARRAY_TYPE(3);\n\t    out[0] = x;\n\t    out[1] = y;\n\t    out[2] = z;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one vec3 to another\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the source vector\n\t * @returns {vec3} out\n\t */\n\tvec3.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set the components of a vec3 to the given values\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @returns {vec3} out\n\t */\n\tvec3.set = function(out, x, y, z) {\n\t    out[0] = x;\n\t    out[1] = y;\n\t    out[2] = z;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.add = function(out, a, b) {\n\t    out[0] = a[0] + b[0];\n\t    out[1] = a[1] + b[1];\n\t    out[2] = a[2] + b[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.subtract = function(out, a, b) {\n\t    out[0] = a[0] - b[0];\n\t    out[1] = a[1] - b[1];\n\t    out[2] = a[2] - b[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.subtract}\n\t * @function\n\t */\n\tvec3.sub = vec3.subtract;\n\t\n\t/**\n\t * Multiplies two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.multiply = function(out, a, b) {\n\t    out[0] = a[0] * b[0];\n\t    out[1] = a[1] * b[1];\n\t    out[2] = a[2] * b[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.multiply}\n\t * @function\n\t */\n\tvec3.mul = vec3.multiply;\n\t\n\t/**\n\t * Divides two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.divide = function(out, a, b) {\n\t    out[0] = a[0] / b[0];\n\t    out[1] = a[1] / b[1];\n\t    out[2] = a[2] / b[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.divide}\n\t * @function\n\t */\n\tvec3.div = vec3.divide;\n\t\n\t/**\n\t * Returns the minimum of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.min = function(out, a, b) {\n\t    out[0] = Math.min(a[0], b[0]);\n\t    out[1] = Math.min(a[1], b[1]);\n\t    out[2] = Math.min(a[2], b[2]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the maximum of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.max = function(out, a, b) {\n\t    out[0] = Math.max(a[0], b[0]);\n\t    out[1] = Math.max(a[1], b[1]);\n\t    out[2] = Math.max(a[2], b[2]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales a vec3 by a scalar number\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec3} out\n\t */\n\tvec3.scale = function(out, a, b) {\n\t    out[0] = a[0] * b;\n\t    out[1] = a[1] * b;\n\t    out[2] = a[2] * b;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec3's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec3} out\n\t */\n\tvec3.scaleAndAdd = function(out, a, b, scale) {\n\t    out[0] = a[0] + (b[0] * scale);\n\t    out[1] = a[1] + (b[1] * scale);\n\t    out[2] = a[2] + (b[2] * scale);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tvec3.distance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1],\n\t        z = b[2] - a[2];\n\t    return Math.sqrt(x*x + y*y + z*z);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.distance}\n\t * @function\n\t */\n\tvec3.dist = vec3.distance;\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tvec3.squaredDistance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1],\n\t        z = b[2] - a[2];\n\t    return x*x + y*y + z*z;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.squaredDistance}\n\t * @function\n\t */\n\tvec3.sqrDist = vec3.squaredDistance;\n\t\n\t/**\n\t * Calculates the length of a vec3\n\t *\n\t * @param {vec3} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tvec3.length = function (a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2];\n\t    return Math.sqrt(x*x + y*y + z*z);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.length}\n\t * @function\n\t */\n\tvec3.len = vec3.length;\n\t\n\t/**\n\t * Calculates the squared length of a vec3\n\t *\n\t * @param {vec3} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tvec3.squaredLength = function (a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2];\n\t    return x*x + y*y + z*z;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec3.squaredLength}\n\t * @function\n\t */\n\tvec3.sqrLen = vec3.squaredLength;\n\t\n\t/**\n\t * Negates the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to negate\n\t * @returns {vec3} out\n\t */\n\tvec3.negate = function(out, a) {\n\t    out[0] = -a[0];\n\t    out[1] = -a[1];\n\t    out[2] = -a[2];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the inverse of the components of a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to invert\n\t * @returns {vec3} out\n\t */\n\tvec3.inverse = function(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  out[2] = 1.0 / a[2];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Normalize a vec3\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a vector to normalize\n\t * @returns {vec3} out\n\t */\n\tvec3.normalize = function(out, a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2];\n\t    var len = x*x + y*y + z*z;\n\t    if (len > 0) {\n\t        //TODO: evaluate use of glm_invsqrt here?\n\t        len = 1 / Math.sqrt(len);\n\t        out[0] = a[0] * len;\n\t        out[1] = a[1] * len;\n\t        out[2] = a[2] * len;\n\t    }\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two vec3's\n\t *\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tvec3.dot = function (a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t};\n\t\n\t/**\n\t * Computes the cross product of two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec3.cross = function(out, a, b) {\n\t    var ax = a[0], ay = a[1], az = a[2],\n\t        bx = b[0], by = b[1], bz = b[2];\n\t\n\t    out[0] = ay * bz - az * by;\n\t    out[1] = az * bx - ax * bz;\n\t    out[2] = ax * by - ay * bx;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Performs a linear interpolation between two vec3's\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tvec3.lerp = function (out, a, b, t) {\n\t    var ax = a[0],\n\t        ay = a[1],\n\t        az = a[2];\n\t    out[0] = ax + t * (b[0] - ax);\n\t    out[1] = ay + t * (b[1] - ay);\n\t    out[2] = az + t * (b[2] - az);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Performs a hermite interpolation with two control points\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {vec3} c the third operand\n\t * @param {vec3} d the fourth operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tvec3.hermite = function (out, a, b, c, d, t) {\n\t  var factorTimes2 = t * t,\n\t      factor1 = factorTimes2 * (2 * t - 3) + 1,\n\t      factor2 = factorTimes2 * (t - 2) + t,\n\t      factor3 = factorTimes2 * (t - 1),\n\t      factor4 = factorTimes2 * (3 - 2 * t);\n\t  \n\t  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n\t  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n\t  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\t  \n\t  return out;\n\t};\n\t\n\t/**\n\t * Performs a bezier interpolation with two control points\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the first operand\n\t * @param {vec3} b the second operand\n\t * @param {vec3} c the third operand\n\t * @param {vec3} d the fourth operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec3} out\n\t */\n\tvec3.bezier = function (out, a, b, c, d, t) {\n\t  var inverseFactor = 1 - t,\n\t      inverseFactorTimesTwo = inverseFactor * inverseFactor,\n\t      factorTimes2 = t * t,\n\t      factor1 = inverseFactorTimesTwo * inverseFactor,\n\t      factor2 = 3 * t * inverseFactorTimesTwo,\n\t      factor3 = 3 * factorTimes2 * inverseFactor,\n\t      factor4 = factorTimes2 * t;\n\t  \n\t  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n\t  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n\t  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\t  \n\t  return out;\n\t};\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec3} out\n\t */\n\tvec3.random = function (out, scale) {\n\t    scale = scale || 1.0;\n\t\n\t    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n\t    var z = (glMatrix.RANDOM() * 2.0) - 1.0;\n\t    var zScale = Math.sqrt(1.0-z*z) * scale;\n\t\n\t    out[0] = Math.cos(r) * zScale;\n\t    out[1] = Math.sin(r) * zScale;\n\t    out[2] = z * scale;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec3 with a mat4.\n\t * 4th vector component is implicitly '1'\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec3} out\n\t */\n\tvec3.transformMat4 = function(out, a, m) {\n\t    var x = a[0], y = a[1], z = a[2],\n\t        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n\t    w = w || 1.0;\n\t    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n\t    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n\t    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec3 with a mat3.\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {mat4} m the 3x3 matrix to transform with\n\t * @returns {vec3} out\n\t */\n\tvec3.transformMat3 = function(out, a, m) {\n\t    var x = a[0], y = a[1], z = a[2];\n\t    out[0] = x * m[0] + y * m[3] + z * m[6];\n\t    out[1] = x * m[1] + y * m[4] + z * m[7];\n\t    out[2] = x * m[2] + y * m[5] + z * m[8];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec3 with a quat\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec3} a the vector to transform\n\t * @param {quat} q quaternion to transform with\n\t * @returns {vec3} out\n\t */\n\tvec3.transformQuat = function(out, a, q) {\n\t    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\t\n\t    var x = a[0], y = a[1], z = a[2],\n\t        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\t\n\t        // calculate quat * vec\n\t        ix = qw * x + qy * z - qz * y,\n\t        iy = qw * y + qz * x - qx * z,\n\t        iz = qw * z + qx * y - qy * x,\n\t        iw = -qx * x - qy * y - qz * z;\n\t\n\t    // calculate result * inverse quat\n\t    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotate a 3D vector around the x-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tvec3.rotateX = function(out, a, b, c){\n\t   var p = [], r=[];\n\t\t  //Translate point to the origin\n\t\t  p[0] = a[0] - b[0];\n\t\t  p[1] = a[1] - b[1];\n\t  \tp[2] = a[2] - b[2];\n\t\n\t\t  //perform rotation\n\t\t  r[0] = p[0];\n\t\t  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n\t\t  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\t\n\t\t  //translate to correct position\n\t\t  out[0] = r[0] + b[0];\n\t\t  out[1] = r[1] + b[1];\n\t\t  out[2] = r[2] + b[2];\n\t\n\t  \treturn out;\n\t};\n\t\n\t/**\n\t * Rotate a 3D vector around the y-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tvec3.rotateY = function(out, a, b, c){\n\t  \tvar p = [], r=[];\n\t  \t//Translate point to the origin\n\t  \tp[0] = a[0] - b[0];\n\t  \tp[1] = a[1] - b[1];\n\t  \tp[2] = a[2] - b[2];\n\t  \n\t  \t//perform rotation\n\t  \tr[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n\t  \tr[1] = p[1];\n\t  \tr[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n\t  \n\t  \t//translate to correct position\n\t  \tout[0] = r[0] + b[0];\n\t  \tout[1] = r[1] + b[1];\n\t  \tout[2] = r[2] + b[2];\n\t  \n\t  \treturn out;\n\t};\n\t\n\t/**\n\t * Rotate a 3D vector around the z-axis\n\t * @param {vec3} out The receiving vec3\n\t * @param {vec3} a The vec3 point to rotate\n\t * @param {vec3} b The origin of the rotation\n\t * @param {Number} c The angle of rotation\n\t * @returns {vec3} out\n\t */\n\tvec3.rotateZ = function(out, a, b, c){\n\t  \tvar p = [], r=[];\n\t  \t//Translate point to the origin\n\t  \tp[0] = a[0] - b[0];\n\t  \tp[1] = a[1] - b[1];\n\t  \tp[2] = a[2] - b[2];\n\t  \n\t  \t//perform rotation\n\t  \tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n\t  \tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n\t  \tr[2] = p[2];\n\t  \n\t  \t//translate to correct position\n\t  \tout[0] = r[0] + b[0];\n\t  \tout[1] = r[1] + b[1];\n\t  \tout[2] = r[2] + b[2];\n\t  \n\t  \treturn out;\n\t};\n\t\n\t/**\n\t * Perform some operation over an array of vec3s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvec3.forEach = (function() {\n\t    var vec = vec3.create();\n\t\n\t    return function(a, stride, offset, count, fn, arg) {\n\t        var i, l;\n\t        if(!stride) {\n\t            stride = 3;\n\t        }\n\t\n\t        if(!offset) {\n\t            offset = 0;\n\t        }\n\t        \n\t        if(count) {\n\t            l = Math.min((count * stride) + offset, a.length);\n\t        } else {\n\t            l = a.length;\n\t        }\n\t\n\t        for(i = offset; i < l; i += stride) {\n\t            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n\t            fn(vec, vec, arg);\n\t            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n\t        }\n\t        \n\t        return a;\n\t    };\n\t})();\n\t\n\t/**\n\t * Get the angle between two 3D vectors\n\t * @param {vec3} a The first operand\n\t * @param {vec3} b The second operand\n\t * @returns {Number} The angle in radians\n\t */\n\tvec3.angle = function(a, b) {\n\t   \n\t    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n\t    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n\t \n\t    vec3.normalize(tempA, tempA);\n\t    vec3.normalize(tempB, tempB);\n\t \n\t    var cosine = vec3.dot(tempA, tempB);\n\t\n\t    if(cosine > 1.0){\n\t        return 0;\n\t    } else {\n\t        return Math.acos(cosine);\n\t    }     \n\t};\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec3} vec vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tvec3.str = function (a) {\n\t    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n\t};\n\t\n\tmodule.exports = vec3;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(1);\n\t\n\t/**\n\t * @class 4 Dimensional Vector\n\t * @name vec4\n\t */\n\tvar vec4 = {};\n\t\n\t/**\n\t * Creates a new, empty vec4\n\t *\n\t * @returns {vec4} a new 4D vector\n\t */\n\tvec4.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec4 initialized with values from an existing vector\n\t *\n\t * @param {vec4} a vector to clone\n\t * @returns {vec4} a new 4D vector\n\t */\n\tvec4.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec4 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {vec4} a new 4D vector\n\t */\n\tvec4.fromValues = function(x, y, z, w) {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = x;\n\t    out[1] = y;\n\t    out[2] = z;\n\t    out[3] = w;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one vec4 to another\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the source vector\n\t * @returns {vec4} out\n\t */\n\tvec4.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set the components of a vec4 to the given values\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {vec4} out\n\t */\n\tvec4.set = function(out, x, y, z, w) {\n\t    out[0] = x;\n\t    out[1] = y;\n\t    out[2] = z;\n\t    out[3] = w;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.add = function(out, a, b) {\n\t    out[0] = a[0] + b[0];\n\t    out[1] = a[1] + b[1];\n\t    out[2] = a[2] + b[2];\n\t    out[3] = a[3] + b[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.subtract = function(out, a, b) {\n\t    out[0] = a[0] - b[0];\n\t    out[1] = a[1] - b[1];\n\t    out[2] = a[2] - b[2];\n\t    out[3] = a[3] - b[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.subtract}\n\t * @function\n\t */\n\tvec4.sub = vec4.subtract;\n\t\n\t/**\n\t * Multiplies two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.multiply = function(out, a, b) {\n\t    out[0] = a[0] * b[0];\n\t    out[1] = a[1] * b[1];\n\t    out[2] = a[2] * b[2];\n\t    out[3] = a[3] * b[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.multiply}\n\t * @function\n\t */\n\tvec4.mul = vec4.multiply;\n\t\n\t/**\n\t * Divides two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.divide = function(out, a, b) {\n\t    out[0] = a[0] / b[0];\n\t    out[1] = a[1] / b[1];\n\t    out[2] = a[2] / b[2];\n\t    out[3] = a[3] / b[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.divide}\n\t * @function\n\t */\n\tvec4.div = vec4.divide;\n\t\n\t/**\n\t * Returns the minimum of two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.min = function(out, a, b) {\n\t    out[0] = Math.min(a[0], b[0]);\n\t    out[1] = Math.min(a[1], b[1]);\n\t    out[2] = Math.min(a[2], b[2]);\n\t    out[3] = Math.min(a[3], b[3]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the maximum of two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {vec4} out\n\t */\n\tvec4.max = function(out, a, b) {\n\t    out[0] = Math.max(a[0], b[0]);\n\t    out[1] = Math.max(a[1], b[1]);\n\t    out[2] = Math.max(a[2], b[2]);\n\t    out[3] = Math.max(a[3], b[3]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales a vec4 by a scalar number\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec4} out\n\t */\n\tvec4.scale = function(out, a, b) {\n\t    out[0] = a[0] * b;\n\t    out[1] = a[1] * b;\n\t    out[2] = a[2] * b;\n\t    out[3] = a[3] * b;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec4's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec4} out\n\t */\n\tvec4.scaleAndAdd = function(out, a, b, scale) {\n\t    out[0] = a[0] + (b[0] * scale);\n\t    out[1] = a[1] + (b[1] * scale);\n\t    out[2] = a[2] + (b[2] * scale);\n\t    out[3] = a[3] + (b[3] * scale);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tvec4.distance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1],\n\t        z = b[2] - a[2],\n\t        w = b[3] - a[3];\n\t    return Math.sqrt(x*x + y*y + z*z + w*w);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.distance}\n\t * @function\n\t */\n\tvec4.dist = vec4.distance;\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tvec4.squaredDistance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1],\n\t        z = b[2] - a[2],\n\t        w = b[3] - a[3];\n\t    return x*x + y*y + z*z + w*w;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.squaredDistance}\n\t * @function\n\t */\n\tvec4.sqrDist = vec4.squaredDistance;\n\t\n\t/**\n\t * Calculates the length of a vec4\n\t *\n\t * @param {vec4} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tvec4.length = function (a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2],\n\t        w = a[3];\n\t    return Math.sqrt(x*x + y*y + z*z + w*w);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.length}\n\t * @function\n\t */\n\tvec4.len = vec4.length;\n\t\n\t/**\n\t * Calculates the squared length of a vec4\n\t *\n\t * @param {vec4} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tvec4.squaredLength = function (a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2],\n\t        w = a[3];\n\t    return x*x + y*y + z*z + w*w;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec4.squaredLength}\n\t * @function\n\t */\n\tvec4.sqrLen = vec4.squaredLength;\n\t\n\t/**\n\t * Negates the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to negate\n\t * @returns {vec4} out\n\t */\n\tvec4.negate = function(out, a) {\n\t    out[0] = -a[0];\n\t    out[1] = -a[1];\n\t    out[2] = -a[2];\n\t    out[3] = -a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the inverse of the components of a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to invert\n\t * @returns {vec4} out\n\t */\n\tvec4.inverse = function(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  out[2] = 1.0 / a[2];\n\t  out[3] = 1.0 / a[3];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Normalize a vec4\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a vector to normalize\n\t * @returns {vec4} out\n\t */\n\tvec4.normalize = function(out, a) {\n\t    var x = a[0],\n\t        y = a[1],\n\t        z = a[2],\n\t        w = a[3];\n\t    var len = x*x + y*y + z*z + w*w;\n\t    if (len > 0) {\n\t        len = 1 / Math.sqrt(len);\n\t        out[0] = x * len;\n\t        out[1] = y * len;\n\t        out[2] = z * len;\n\t        out[3] = w * len;\n\t    }\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two vec4's\n\t *\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tvec4.dot = function (a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t};\n\t\n\t/**\n\t * Performs a linear interpolation between two vec4's\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the first operand\n\t * @param {vec4} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec4} out\n\t */\n\tvec4.lerp = function (out, a, b, t) {\n\t    var ax = a[0],\n\t        ay = a[1],\n\t        az = a[2],\n\t        aw = a[3];\n\t    out[0] = ax + t * (b[0] - ax);\n\t    out[1] = ay + t * (b[1] - ay);\n\t    out[2] = az + t * (b[2] - az);\n\t    out[3] = aw + t * (b[3] - aw);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec4} out\n\t */\n\tvec4.random = function (out, scale) {\n\t    scale = scale || 1.0;\n\t\n\t    //TODO: This is a pretty awful way of doing this. Find something better.\n\t    out[0] = glMatrix.RANDOM();\n\t    out[1] = glMatrix.RANDOM();\n\t    out[2] = glMatrix.RANDOM();\n\t    out[3] = glMatrix.RANDOM();\n\t    vec4.normalize(out, out);\n\t    vec4.scale(out, out, scale);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec4 with a mat4.\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec4} out\n\t */\n\tvec4.transformMat4 = function(out, a, m) {\n\t    var x = a[0], y = a[1], z = a[2], w = a[3];\n\t    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n\t    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n\t    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n\t    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec4 with a quat\n\t *\n\t * @param {vec4} out the receiving vector\n\t * @param {vec4} a the vector to transform\n\t * @param {quat} q quaternion to transform with\n\t * @returns {vec4} out\n\t */\n\tvec4.transformQuat = function(out, a, q) {\n\t    var x = a[0], y = a[1], z = a[2],\n\t        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\t\n\t        // calculate quat * vec\n\t        ix = qw * x + qy * z - qz * y,\n\t        iy = qw * y + qz * x - qx * z,\n\t        iz = qw * z + qx * y - qy * x,\n\t        iw = -qx * x - qy * y - qz * z;\n\t\n\t    // calculate result * inverse quat\n\t    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Perform some operation over an array of vec4s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvec4.forEach = (function() {\n\t    var vec = vec4.create();\n\t\n\t    return function(a, stride, offset, count, fn, arg) {\n\t        var i, l;\n\t        if(!stride) {\n\t            stride = 4;\n\t        }\n\t\n\t        if(!offset) {\n\t            offset = 0;\n\t        }\n\t        \n\t        if(count) {\n\t            l = Math.min((count * stride) + offset, a.length);\n\t        } else {\n\t            l = a.length;\n\t        }\n\t\n\t        for(i = offset; i < l; i += stride) {\n\t            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n\t            fn(vec, vec, arg);\n\t            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n\t        }\n\t        \n\t        return a;\n\t    };\n\t})();\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec4} vec vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tvec4.str = function (a) {\n\t    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t};\n\t\n\tmodule.exports = vec4;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\texports['default'] = getVr;\n\t\n\tfunction getVr() {\n\t    if (navigator.getVRDevices) {\n\t        return navigator.getVRDevices().then(getHmdAndSensor);\n\t    } else {\n\t        return Promise.resolve({\n\t            hmd: null,\n\t            sensor: null\n\t        });\n\t    }\n\t}\n\t\n\tfunction getHmdAndSensor(vrDevices) {\n\t\n\t    var hmd = null;\n\t    var sensor = null;\n\t\n\t    for (var i = 0; i < vrDevices.length; ++i) {\n\t        if (vrDevices[i] instanceof HMDVRDevice) {\n\t            hmd = vrDevices[i];\n\t            break;\n\t        }\n\t    }\n\t\n\t    if (!hmd) {\n\t        return Promise.resolve({\n\t            hmd: null,\n\t            sensor: null\n\t        });\n\t    }\n\t\n\t    // Then, find that HMD's position sensor\n\t    for (i = 0; i < vrDevices.length; ++i) {\n\t        if (vrDevices[i] instanceof PositionSensorVRDevice && vrDevices[i].hardwareUnitId === hmd.hardwareUnitId) {\n\t            sensor = vrDevices[i];\n\t            break;\n\t        }\n\t    }\n\t\n\t    if (!sensor) {\n\t        return Promise.reject('Found an HMD, but didn\\'t find its orientation sensor?');\n\t    }\n\t\n\t    return {\n\t        hmd: hmd,\n\t        sensor: sensor\n\t    };\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports[\"default\"] = goFullScreen;\n\t\n\tfunction goFullScreen(canvas, devices, fullScreen) {\n\t    if (fullScreen) {\n\t        if (canvas.mozRequestFullScreen) {\n\t            canvas.mozRequestFullScreen({\n\t                vrDisplay: devices.hmd\n\t            }); // Firefox\n\t        } else if (canvas.webkitRequestFullscreen) {\n\t                canvas.webkitRequestFullscreen({\n\t                    vrDisplay: devices.hmd\n\t                }); // Chrome and Safari\n\t            } else if (canvas.requestFullScreen) {\n\t                    canvas.requestFullscreen();\n\t                }\n\t    }\n\t}\n\t\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\texports['default'] = initialiseManualControls;\n\t\n\tfunction initialiseManualControls(keys, onRotate) {\n\t    var manualControls = {};\n\t    manualControls[keys.left.toLowerCase()] = {\n\t        index: 1,\n\t        sign: 1,\n\t        active: 0\n\t    };\n\t    manualControls[keys.right.toLowerCase()] = {\n\t        index: 1,\n\t        sign: -1,\n\t        active: 0\n\t    };\n\t    manualControls[keys.up.toLowerCase()] = {\n\t        index: 0,\n\t        sign: 1,\n\t        active: 0\n\t    };\n\t    manualControls[keys.down.toLowerCase()] = {\n\t        index: 0,\n\t        sign: -1,\n\t        active: 0\n\t    };\n\t    manualControls[keys.rotateLeft.toLowerCase()] = {\n\t        index: 2,\n\t        sign: 1,\n\t        active: 0\n\t    };\n\t    manualControls[keys.rotateRight.toLowerCase()] = {\n\t        index: 2,\n\t        sign: -1,\n\t        active: 0\n\t    };\n\t\n\t    enableKeyControls();\n\t\n\t    function enableKeyControls() {\n\t        function key(event, sign) {\n\t            var control = manualControls[String.fromCharCode(event.keyCode).toLowerCase()];\n\t            if (!control) {\n\t                return;\n\t            }\n\t            if (sign === 1 && control.active || sign === -1 && !control.active) {\n\t                return;\n\t            }\n\t            control.active = sign === 1;\n\t            onRotate(control.index, sign * control.sign);\n\t            //webGl.rotate(control.index, sign * control.sign);\n\t        }\n\t\n\t        document.addEventListener('keydown', function (event) {\n\t            key(event, 1);\n\t        }, false);\n\t        document.addEventListener('keyup', function (event) {\n\t            key(event, -1);\n\t        }, false);\n\t    }\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar matrix = __webpack_require__(2);\n\t\n\t// It seems to be impossible to synchronously detect whether we have an orientation sensor.\n\t// Even Chromium on the desktop has a 'deviceorientation' event, and it will fire once with\n\t// all nulls.\n\t\n\tmodule.exports = PhoneVR;\n\t\n\tfunction PhoneVR() {\n\t    this.deviceAlpha = null;\n\t    this.deviceGamma = null;\n\t    this.deviceBeta = null;\n\t\n\t    if (window) {\n\t        window.addEventListener('deviceorientation', (function (orientation) {\n\t            this.deviceAlpha = orientation.alpha;\n\t            this.deviceGamma = orientation.gamma;\n\t            this.deviceBeta = orientation.beta;\n\t        }).bind(this));\n\t    }\n\t}\n\t\n\tPhoneVR.prototype.orientationIsAvailable = function () {\n\t    return this.deviceAlpha !== null;\n\t};\n\t\n\tPhoneVR.prototype.rotationQuat = function () {\n\t    if (!this.orientationIsAvailable()) {\n\t        return matrix.quat.create(1, 0, 0, 0);\n\t    }\n\t\n\t    var degtorad = Math.PI / 180; // Degree-to-Radian conversion\n\t    var z = this.deviceAlpha * degtorad / 2;\n\t    var x = this.deviceBeta * degtorad / 2;\n\t    var y = this.deviceGamma * degtorad / 2;\n\t    var cX = Math.cos(x);\n\t    var cY = Math.cos(y);\n\t    var cZ = Math.cos(z);\n\t    var sX = Math.sin(x);\n\t    var sY = Math.sin(y);\n\t    var sZ = Math.sin(z);\n\t\n\t    // ZXY quaternion construction.\n\t    var w = cX * cY * cZ - sX * sY * sZ;\n\t    x = sX * cY * cZ - cX * sY * sZ;\n\t    y = cX * sY * cZ + sX * cY * sZ;\n\t    z = cX * cY * sZ + sX * sY * cZ;\n\t\n\t    var deviceQuaternion = matrix.quat.fromValues(x, y, z, w);\n\t\n\t    // Correct for the screen orientation.\n\t    var screenOrientation = getScreenOrientation() * degtorad / 2;\n\t    var screenTransform = [0, 0, -Math.sin(screenOrientation), Math.cos(screenOrientation)];\n\t\n\t    var deviceRotation = matrix.quat.create();\n\t    matrix.quat.multiply(deviceRotation, deviceQuaternion, screenTransform);\n\t\n\t    // deviceRotation is the quaternion encoding of the transformation\n\t    // from camera coordinates to world coordinates.  The problem is that\n\t    // our shader uses conventional OpenGL coordinates\n\t    // (+x = right, +y = up, +z = backward), but the DeviceOrientation\n\t    // spec uses different coordinates (+x = East, +y = North, +z = up).\n\t    // To fix the mismatch, we need to fix this.  We'll arbitrarily choose\n\t    // North to correspond to -z (the default camera direction).\n\t    var r22 = Math.sqrt(0.5);\n\t    matrix.quat.multiply(deviceRotation, matrix.quat.fromValues(-r22, 0, 0, r22), deviceRotation);\n\t\n\t    return deviceRotation;\n\t};\n\t\n\tfunction getScreenOrientation() {\n\t    if (!window) {\n\t        return 0;\n\t    }\n\t    switch (window.screen.orientation || window.screen.mozOrientation) {\n\t        case 'landscape-primary':\n\t            return 90;\n\t        case 'landscape-secondary':\n\t            return -90;\n\t        case 'portrait-secondary':\n\t            return 180;\n\t        case 'portrait-primary':\n\t            return 0;\n\t    }\n\t    if (window.orientation !== undefined) {\n\t        return window.orientation;\n\t    }\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\texports['default'] = selectLocalVideo;\n\t\n\tfunction selectLocalVideo() {\n\t    return new Promise(function (resolve, reject) {\n\t        if (!document) {\n\t            return reject('This is not a web browser');\n\t        }\n\t\n\t        var input = document.createElement('input');\n\t        input.type = 'file';\n\t        input.accept = 'video/*';\n\t\n\t        input.addEventListener('change', function () {\n\t            var files = input.files;\n\t            if (!files.length) {\n\t                // The user didn't select anything.  Sad.\n\t                console.log('no selection');\n\t                return reject('File selection canceled');\n\t            }\n\t\n\t            var extension = files[0].name.split('.').pop();\n\t            var fileUrl = URL.createObjectURL(files[0]);\n\t            console.log('Loading local file ', files[0].name, ' at URL ', fileUrl, ' with extension ', extension);\n\t            resolve({\n\t                url: fileUrl,\n\t                type: 'video/' + extension\n\t            });\n\t        });\n\t\n\t        input.click();\n\t    });\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* jshint -W069 */\n\t\n\t'use strict';\n\t\n\tvar glMatrix = __webpack_require__(2);\n\tvar settings = __webpack_require__(13);\n\tvar Shader = __webpack_require__(14);\n\tif (false) {\n\t    var Stats = require('stats.js');\n\t}\n\t\n\tmodule.exports = function (vrDevice, phoneDevice, video, canvas, width) {\n\t    var positionsBuffer, verticesIndexBuffer, texture;\n\t    var shader;\n\t    var gl;\n\t    var stats;\n\t\n\t    var manualRotateRate = new Float32Array([0, 0, 0]);\n\t    var frameId;\n\t    var frame, previousFrame;\n\t\n\t    return new Promise(function (resolve, reject) {\n\t        gl = initWebGL(canvas);\n\t        if (gl) {\n\t            gl.clearColor(0.0, 0.0, 0.0, 0.0);\n\t            gl.clearDepth(1.0);\n\t            gl.disable(gl.DEPTH_TEST);\n\t            initStats();\n\t            initBuffers(gl);\n\t            initTextures(gl);\n\t            resolve({\n\t                draw: function draw() {\n\t                    if (frameId) {\n\t                        cancelAnimationFrame(frameId);\n\t                    }\n\t                    frameId = requestAnimationFrame(buildDrawScene(video, canvas, gl, width));\n\t                    return frameId;\n\t                },\n\t                stop: function stop() {\n\t                    if (frameId) {\n\t                        cancelAnimationFrame(frameId);\n\t                        frameId = null;\n\t                    }\n\t                },\n\t                rotate: function rotate(axis, value) {\n\t                    manualRotateRate[axis] += value;\n\t                }\n\t            });\n\t        } else {\n\t            reject('Unable to initialize WebGL. Your browser may not support it.');\n\t        }\n\t    });\n\t\n\t    function initStats() {\n\t        if (Stats) {\n\t            stats = new Stats();\n\t            stats.setMode(0);\n\t            stats.domElement.style.position = 'absolute';\n\t            stats.domElement.style.right = '50px';\n\t            stats.domElement.style.bottom = '50px';\n\t            canvas.ownerDocument.body.appendChild(stats.domElement);\n\t        }\n\t    }\n\t\n\t    function initWebGL() {\n\t        var gl = null;\n\t        try {\n\t            gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n\t        } catch (e) {}\n\t\n\t        if (!gl) {\n\t            return null;\n\t        }\n\t\n\t        shader = new Shader({\n\t            fragmentShaderName: 'shader-fs',\n\t            vertexShaderName: 'shader-vs',\n\t            attributes: ['aVertexPosition'],\n\t            uniforms: ['uSampler', 'eye', 'projection', 'proj_inv']\n\t        }, gl);\n\t\n\t        return gl;\n\t    }\n\t\n\t    function initBuffers() {\n\t        positionsBuffer = gl.createBuffer();\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, positionsBuffer);\n\t        var positions = [-1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0];\n\t        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\t\n\t        verticesIndexBuffer = gl.createBuffer();\n\t        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, verticesIndexBuffer);\n\t        var vertexIndices = [0, 1, 2, 0, 2, 3];\n\t        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vertexIndices), gl.STATIC_DRAW);\n\t    }\n\t\n\t    function initTextures() {\n\t        texture = gl.createTexture();\n\t        gl.bindTexture(gl.TEXTURE_2D, texture);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t        gl.bindTexture(gl.TEXTURE_2D, null);\n\t    }\n\t\n\t    function updateTexture() {\n\t        gl.bindTexture(gl.TEXTURE_2D, texture);\n\t        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, video);\n\t        gl.bindTexture(gl.TEXTURE_2D, null);\n\t    }\n\t\n\t    /**\n\t     * Drawing the scene\n\t     */\n\t    function drawOneEye(eye, projectionMatrix) {\n\t        gl.useProgram(shader.program);\n\t\n\t        gl.bindBuffer(gl.ARRAY_BUFFER, positionsBuffer);\n\t        gl.vertexAttribPointer(shader.attributes['aVertexPosition'], 2, gl.FLOAT, false, 0, 0);\n\t\n\t        // Specify the texture to map onto the faces.\n\t        gl.activeTexture(gl.TEXTURE0);\n\t        gl.bindTexture(gl.TEXTURE_2D, texture);\n\t        gl.uniform1i(shader.uniforms['uSampler'], 0);\n\t\n\t        gl.uniform1f(shader.uniforms['eye'], eye);\n\t        gl.uniform1f(shader.uniforms['projection'], settings.projection);\n\t\n\t        var rotation = glMatrix.mat4.create();\n\t        var totalRotation = glMatrix.quat.create();\n\t\n\t        if (vrDevice.sensor !== null) {\n\t            var state = vrDevice.sensor.getState();\n\t            if (state !== null && state.orientation !== null && typeof state.orientation !== 'undefined' && state.orientation.x !== 0 && state.orientation.y !== 0 && state.orientation.z !== 0 && state.orientation.w !== 0) {\n\t                var sensorOrientation = new Float32Array([state.orientation.x, state.orientation.y, state.orientation.z, state.orientation.w]);\n\t                glMatrix.quat.multiply(totalRotation, settings.manualRotation, sensorOrientation);\n\t            } else {\n\t                totalRotation = settings.manualRotation;\n\t            }\n\t            glMatrix.mat4.fromQuat(rotation, totalRotation);\n\t        } else {\n\t            glMatrix.quat.multiply(totalRotation, settings.manualRotation, phoneDevice.rotationQuat());\n\t            glMatrix.mat4.fromQuat(rotation, totalRotation);\n\t        }\n\t\n\t        var projectionInverse = glMatrix.mat4.create();\n\t        glMatrix.mat4.invert(projectionInverse, projectionMatrix);\n\t        var inv = glMatrix.mat4.create();\n\t        glMatrix.mat4.multiply(inv, rotation, projectionInverse);\n\t\n\t        gl.uniformMatrix4fv(shader.uniforms['proj_inv'], false, inv);\n\t\n\t        if (eye === 0) {\n\t            // left eye\n\t            gl.viewport(0, 0, canvas.width / 2, canvas.height);\n\t        } else {\n\t            // right eye\n\t            gl.viewport(canvas.width / 2, 0, canvas.width / 2, canvas.height);\n\t        }\n\t\n\t        // Draw\n\t        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, verticesIndexBuffer);\n\t        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n\t    }\n\t\n\t    function buildDrawScene() {\n\t        return function drawScene(frameTime) {\n\t            if (stats) {\n\t                stats.begin();\n\t            }\n\t            frame = frameTime;\n\t\n\t            setCanvasSize(gl, vrDevice, canvas, width);\n\t\n\t            updateTexture(gl, video);\n\t\n\t            if (previousFrame) {\n\t                // Apply manual controls.\n\t                var interval = (frame - previousFrame) * 0.001;\n\t\n\t                var update = glMatrix.quat.fromValues(manualRotateRate[0] * interval, manualRotateRate[1] * interval, manualRotateRate[2] * interval, 1.0);\n\t                glMatrix.quat.normalize(update, update);\n\t                glMatrix.quat.multiply(settings.manualRotation, settings.manualRotation, update);\n\t            }\n\t\n\t            var perspectiveMatrix = glMatrix.mat4.create();\n\t            if (vrDevice.hmd) {\n\t                var leftParams = vrDevice.hmd.getEyeParameters('left');\n\t                var rightParams = vrDevice.hmd.getEyeParameters('right');\n\t                perspectiveMatrix = mat4PerspectiveFromVRFieldOfView(leftParams.recommendedFieldOfView, 0.1, 10);\n\t                drawOneEye(0, perspectiveMatrix);\n\t                perspectiveMatrix = mat4PerspectiveFromVRFieldOfView(rightParams.recommendedFieldOfView, 0.1, 10);\n\t                drawOneEye(1, perspectiveMatrix);\n\t            } else {\n\t                var ratio = canvas.width / 2 / canvas.height;\n\t                glMatrix.mat4.perspective(perspectiveMatrix, Math.PI / 2, ratio, 0.1, 10);\n\t                drawOneEye(0, perspectiveMatrix);\n\t                drawOneEye(1, perspectiveMatrix);\n\t            }\n\t\n\t            if (stats) {\n\t                stats.end();\n\t            }\n\t\n\t            frameId = requestAnimationFrame(drawScene);\n\t            previousFrame = frame;\n\t        };\n\t    }\n\t\n\t    function setCanvasSize() {\n\t        if (!window) {\n\t            return;\n\t        }\n\t        var w = window.innerWidth,\n\t            h = window.innerHeight;\n\t\n\t        if (width) {\n\t            w = width;\n\t            h = width / (1980 / 1024);\n\t        }\n\t\n\t        setCustomCanvasSize(w, h);\n\t    }\n\t\n\t    function setCustomCanvasSize(width, height) {\n\t\n\t        if (typeof vrDevice.hmd !== 'undefined' && vrDevice.hmd !== null && typeof isFullscreen() !== 'undefined' && isFullscreen()) {\n\t\n\t            var rectHalf = vrDevice.hmd.getEyeParameters('right').renderRect;\n\t            canvas.width = rectHalf.width * 2;\n\t            canvas.height = rectHalf.height;\n\t\n\t            canvas.style.width = width + 'px';\n\t            canvas.style.height = height + 'px';\n\t        } else {\n\t            // query the various pixel ratios\n\t            var devicePixelRatio = window.devicePixelRatio || 1;\n\t            var backingStoreRatio = gl.webkitBackingStorePixelRatio || gl.mozBackingStorePixelRatio || gl.msBackingStorePixelRatio || gl.oBackingStorePixelRatio || gl.backingStorePixelRatio || 1;\n\t            var ratio = devicePixelRatio / backingStoreRatio;\n\t\n\t            if (canvas.width !== width * ratio || canvas.height !== height * ratio) {\n\t                canvas.width = width * ratio;\n\t                canvas.height = height * ratio;\n\t\n\t                canvas.style.width = width + 'px';\n\t                canvas.style.height = height + 'px';\n\t            }\n\t        }\n\t    }\n\t\n\t    function mat4PerspectiveFromVRFieldOfView(fov, zNear, zFar) {\n\t        var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n\t        var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n\t        var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n\t        var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n\t\n\t        var xScale = 2.0 / (leftTan + rightTan);\n\t        var yScale = 2.0 / (upTan + downTan);\n\t\n\t        var out = new Float32Array(16); // Appropriate format to pass to WebGL\n\t        out[0] = xScale;\n\t        out[4] = 0.0;\n\t        out[8] = -((leftTan - rightTan) * xScale * 0.5);\n\t        out[12] = 0.0;\n\t\n\t        out[1] = 0.0;\n\t        out[5] = yScale;\n\t        out[9] = (upTan - downTan) * yScale * 0.5;\n\t        out[13] = 0.0;\n\t\n\t        out[2] = 0.0;\n\t        out[6] = 0.0;\n\t        out[10] = zFar / (zNear - zFar);\n\t        out[14] = zFar * zNear / (zNear - zFar);\n\t\n\t        out[3] = 0.0;\n\t        out[7] = 0.0;\n\t        out[11] = -1.0;\n\t        out[15] = 0.0;\n\t\n\t        return out;\n\t    }\n\t\n\t    function isFullscreen() {\n\t        return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.webkitCurrentFullScreenElement;\n\t    }\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar gl = __webpack_require__(2);\n\t\n\tmodule.exports = {\n\t    projection: 0,\n\t    manualRotation: gl.quat.create(),\n\t    videoObjectURL: null\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar fragment = __webpack_require__(27);\n\tvar vertex = __webpack_require__(28);\n\t\n\tmodule.exports = function Shader(params, gl) {\n\t    this.params = params;\n\t    this.fragmentShader = getShader(fragment, 'fragment', gl);\n\t    this.vertexShader = getShader(vertex, 'vertex', gl);\n\t\n\t    this.program = gl.createProgram();\n\t    gl.attachShader(this.program, this.vertexShader);\n\t    gl.attachShader(this.program, this.fragmentShader);\n\t    gl.linkProgram(this.program);\n\t\n\t    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n\t        alert(\"Unable to initialize the shader program: \" + gl.getProgramInfoLog(this.program));\n\t    }\n\t\n\t    gl.useProgram(this.program);\n\t\n\t    this.attributes = {};\n\t    for (var i = 0; i < this.params.attributes.length; i++) {\n\t        var attributeName = this.params.attributes[i];\n\t        this.attributes[attributeName] = gl.getAttribLocation(this.program, attributeName);\n\t        gl.enableVertexAttribArray(this.attributes[attributeName]);\n\t    }\n\t\n\t    this.uniforms = {};\n\t    for (i = 0; i < this.params.uniforms.length; i++) {\n\t        var uniformName = this.params.uniforms[i];\n\t        this.uniforms[uniformName] = gl.getUniformLocation(this.program, uniformName);\n\t        gl.enableVertexAttribArray(this.attributes[uniformName]);\n\t    }\n\t};\n\t\n\tfunction getShader(source, type, gl) {\n\t    var result;\n\t\n\t    if (type === 'fragment') {\n\t        result = gl.createShader(gl.FRAGMENT_SHADER);\n\t    } else if (type === 'vertex') {\n\t        result = gl.createShader(gl.VERTEX_SHADER);\n\t    } else {\n\t        return null; // Unknown shader type\n\t    }\n\t\n\t    gl.shaderSource(result, source);\n\t    gl.compileShader(result);\n\t\n\t    if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n\t        alert(\"An error occurred compiling the shaders: \" + gl.getShaderInfoLog(result));\n\t        return null;\n\t    }\n\t\n\t    return result;\n\t}\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(16)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"div.VrPlayer{background-color:#000;font-family:HelveticaNeue-Light,Helvetica Neue Light,Helvetica Neue,Helvetica,Arial,Lucida Grande,sans-serif;font-weight:300;color:#fff;margin:0;padding:0;overflow:hidden;height:100%;width:100%;position:fixed;top:0;left:0}div.VrPlayer select{border:none;background:rgba(0,0,0,.6);color:hsla(0,0%,100%,.8);padding:2px;border-radius:3px}div.VrPlayer video{display:none}div.VrPlayer a{cursor:pointer;color:hsla(0,0%,100%,.8)}div.VrPlayer a:hover{color:hsla(0,0%,100%,.65);text-decoration:none}div.VrPlayer a:active{color:hsla(0,0%,100%,.8);text-shadow:2px 2px 3px hsla(0,0%,78%,.9)}div.VrPlayer{background-color:#000}div.VrPlayer .left{float:left;left:2%}div.VrPlayer .left,div.VrPlayer .right{width:50%;position:relative;top:43%;z-index:1}div.VrPlayer .right{float:right;right:2%}div.VrPlayer .glcanvas{position:absolute;top:0;bottom:0;right:0;left:0}div.VrPlayer .video-controls{color:#fff;position:fixed;bottom:0;left:0;right:0;padding:0 10px;opacity:.8;height:25px;background:#499bea;background:-webkit-gradient(left top,left bottom,color-stop(0,#499bea),color-stop(100%,#207ce5));background:-webkit-linear-gradient(top,#499bea 0,#207ce5 100%);background:linear-gradient(to bottom,#499bea 0,#207ce5 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#499bea',endColorstr='#207ce5',GradientType=0)}div.VrPlayer input.seek-bar{width:35%;float:left;height:25px;margin-top:0;border:none}div.VrPlayer input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #000;height:16px;width:16px;border-radius:8px;background:#fff;cursor:pointer;margin-top:-7px;box-shadow:1px 1px 1px #000,0 0 1px #0d0d0d}div.VrPlayer input[type=range]::-moz-range-thumb{box-shadow:1px 1px 1px #000,0 0 1px #0d0d0d;border:1px solid #000;height:16px;width:16px;border-radius:8px;background:#fff;cursor:pointer}div.VrPlayer input[type=range]::-ms-thumb{box-shadow:1px 1px 1px #000,0 0 1px #0d0d0d;border:1px solid #000;height:16px;width:16px;border-radius:8px;background:#fff;cursor:pointer}div.VrPlayer select{width:12%;max-width:300px;margin-right:5px}div.VrPlayer .icon{margin:5px 5px 0;width:20px;float:left}div.VrPlayer .rfloat{float:right;margin-top:5px}.large-play,.message,div.VrPlayer .title{text-align:center;margin:0 auto;display:block;color:hsla(0,0%,100%,.5)}div.VrPlayer span.brand{float:left;margin-left:20px;color:#000;font-variant:small-caps;font-size:16px;font-weight:700;margin-top:0}div.VrPlayer span.info{float:left;margin-left:20px;color:#000;font-size:13px;margin-top:3px}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(1);\n\t\n\t/**\n\t * @class 2x2 Matrix\n\t * @name mat2\n\t */\n\tvar mat2 = {};\n\t\n\t/**\n\t * Creates a new identity mat2\n\t *\n\t * @returns {mat2} a new 2x2 matrix\n\t */\n\tmat2.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new mat2 initialized with values from an existing matrix\n\t *\n\t * @param {mat2} a matrix to clone\n\t * @returns {mat2} a new 2x2 matrix\n\t */\n\tmat2.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one mat2 to another\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tmat2.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set a mat2 to the identity matrix\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @returns {mat2} out\n\t */\n\tmat2.identity = function(out) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transpose the values of a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tmat2.transpose = function(out, a) {\n\t    // If we are transposing ourselves we can skip a few steps but have to cache some values\n\t    if (out === a) {\n\t        var a1 = a[1];\n\t        out[1] = a[2];\n\t        out[2] = a1;\n\t    } else {\n\t        out[0] = a[0];\n\t        out[1] = a[2];\n\t        out[2] = a[1];\n\t        out[3] = a[3];\n\t    }\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Inverts a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tmat2.invert = function(out, a) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\t\n\t        // Calculate the determinant\n\t        det = a0 * a3 - a2 * a1;\n\t\n\t    if (!det) {\n\t        return null;\n\t    }\n\t    det = 1.0 / det;\n\t    \n\t    out[0] =  a3 * det;\n\t    out[1] = -a1 * det;\n\t    out[2] = -a2 * det;\n\t    out[3] =  a0 * det;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the adjugate of a mat2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the source matrix\n\t * @returns {mat2} out\n\t */\n\tmat2.adjoint = function(out, a) {\n\t    // Caching this value is nessecary if out == a\n\t    var a0 = a[0];\n\t    out[0] =  a[3];\n\t    out[1] = -a[1];\n\t    out[2] = -a[2];\n\t    out[3] =  a0;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the determinant of a mat2\n\t *\n\t * @param {mat2} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tmat2.determinant = function (a) {\n\t    return a[0] * a[3] - a[2] * a[1];\n\t};\n\t\n\t/**\n\t * Multiplies two mat2's\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the first operand\n\t * @param {mat2} b the second operand\n\t * @returns {mat2} out\n\t */\n\tmat2.multiply = function (out, a, b) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n\t    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n\t    out[0] = a0 * b0 + a2 * b1;\n\t    out[1] = a1 * b0 + a3 * b1;\n\t    out[2] = a0 * b2 + a2 * b3;\n\t    out[3] = a1 * b2 + a3 * b3;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link mat2.multiply}\n\t * @function\n\t */\n\tmat2.mul = mat2.multiply;\n\t\n\t/**\n\t * Rotates a mat2 by the given angle\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2} out\n\t */\n\tmat2.rotate = function (out, a, rad) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\t        s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    out[0] = a0 *  c + a2 * s;\n\t    out[1] = a1 *  c + a3 * s;\n\t    out[2] = a0 * -s + a2 * c;\n\t    out[3] = a1 * -s + a3 * c;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales the mat2 by the dimensions in the given vec2\n\t *\n\t * @param {mat2} out the receiving matrix\n\t * @param {mat2} a the matrix to rotate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat2} out\n\t **/\n\tmat2.scale = function(out, a, v) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\t        v0 = v[0], v1 = v[1];\n\t    out[0] = a0 * v0;\n\t    out[1] = a1 * v0;\n\t    out[2] = a2 * v1;\n\t    out[3] = a3 * v1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2.identity(dest);\n\t *     mat2.rotate(dest, dest, rad);\n\t *\n\t * @param {mat2} out mat2 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2} out\n\t */\n\tmat2.fromRotation = function(out, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    out[0] = c;\n\t    out[1] = s;\n\t    out[2] = -s;\n\t    out[3] = c;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2.identity(dest);\n\t *     mat2.scale(dest, dest, vec);\n\t *\n\t * @param {mat2} out mat2 receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat2} out\n\t */\n\tmat2.fromScaling = function(out, v) {\n\t    out[0] = v[0];\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = v[1];\n\t    return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a mat2\n\t *\n\t * @param {mat2} mat matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tmat2.str = function (a) {\n\t    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t};\n\t\n\t/**\n\t * Returns Frobenius norm of a mat2\n\t *\n\t * @param {mat2} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tmat2.frob = function (a) {\n\t    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n\t};\n\t\n\t/**\n\t * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n\t * @param {mat2} L the lower triangular matrix \n\t * @param {mat2} D the diagonal matrix \n\t * @param {mat2} U the upper triangular matrix \n\t * @param {mat2} a the input matrix to factorize\n\t */\n\t\n\tmat2.LDU = function (L, D, U, a) { \n\t    L[2] = a[2]/a[0]; \n\t    U[0] = a[0]; \n\t    U[1] = a[1]; \n\t    U[3] = a[3] - L[2] * U[1]; \n\t    return [L, D, U];       \n\t}; \n\t\n\t\n\tmodule.exports = mat2;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(1);\n\t\n\t/**\n\t * @class 2x3 Matrix\n\t * @name mat2d\n\t * \n\t * @description \n\t * A mat2d contains six elements defined as:\n\t * <pre>\n\t * [a, c, tx,\n\t *  b, d, ty]\n\t * </pre>\n\t * This is a short form for the 3x3 matrix:\n\t * <pre>\n\t * [a, c, tx,\n\t *  b, d, ty,\n\t *  0, 0, 1]\n\t * </pre>\n\t * The last row is ignored so the array is shorter and operations are faster.\n\t */\n\tvar mat2d = {};\n\t\n\t/**\n\t * Creates a new identity mat2d\n\t *\n\t * @returns {mat2d} a new 2x3 matrix\n\t */\n\tmat2d.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(6);\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    out[4] = 0;\n\t    out[5] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new mat2d initialized with values from an existing matrix\n\t *\n\t * @param {mat2d} a matrix to clone\n\t * @returns {mat2d} a new 2x3 matrix\n\t */\n\tmat2d.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(6);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one mat2d to another\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the source matrix\n\t * @returns {mat2d} out\n\t */\n\tmat2d.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set a mat2d to the identity matrix\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @returns {mat2d} out\n\t */\n\tmat2d.identity = function(out) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    out[4] = 0;\n\t    out[5] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Inverts a mat2d\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the source matrix\n\t * @returns {mat2d} out\n\t */\n\tmat2d.invert = function(out, a) {\n\t    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n\t        atx = a[4], aty = a[5];\n\t\n\t    var det = aa * ad - ab * ac;\n\t    if(!det){\n\t        return null;\n\t    }\n\t    det = 1.0 / det;\n\t\n\t    out[0] = ad * det;\n\t    out[1] = -ab * det;\n\t    out[2] = -ac * det;\n\t    out[3] = aa * det;\n\t    out[4] = (ac * aty - ad * atx) * det;\n\t    out[5] = (ab * atx - aa * aty) * det;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the determinant of a mat2d\n\t *\n\t * @param {mat2d} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tmat2d.determinant = function (a) {\n\t    return a[0] * a[3] - a[1] * a[2];\n\t};\n\t\n\t/**\n\t * Multiplies two mat2d's\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the first operand\n\t * @param {mat2d} b the second operand\n\t * @returns {mat2d} out\n\t */\n\tmat2d.multiply = function (out, a, b) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n\t        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n\t    out[0] = a0 * b0 + a2 * b1;\n\t    out[1] = a1 * b0 + a3 * b1;\n\t    out[2] = a0 * b2 + a2 * b3;\n\t    out[3] = a1 * b2 + a3 * b3;\n\t    out[4] = a0 * b4 + a2 * b5 + a4;\n\t    out[5] = a1 * b4 + a3 * b5 + a5;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link mat2d.multiply}\n\t * @function\n\t */\n\tmat2d.mul = mat2d.multiply;\n\t\n\t/**\n\t * Rotates a mat2d by the given angle\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2d} out\n\t */\n\tmat2d.rotate = function (out, a, rad) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n\t        s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    out[0] = a0 *  c + a2 * s;\n\t    out[1] = a1 *  c + a3 * s;\n\t    out[2] = a0 * -s + a2 * c;\n\t    out[3] = a1 * -s + a3 * c;\n\t    out[4] = a4;\n\t    out[5] = a5;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales the mat2d by the dimensions in the given vec2\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to translate\n\t * @param {vec2} v the vec2 to scale the matrix by\n\t * @returns {mat2d} out\n\t **/\n\tmat2d.scale = function(out, a, v) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n\t        v0 = v[0], v1 = v[1];\n\t    out[0] = a0 * v0;\n\t    out[1] = a1 * v0;\n\t    out[2] = a2 * v1;\n\t    out[3] = a3 * v1;\n\t    out[4] = a4;\n\t    out[5] = a5;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Translates the mat2d by the dimensions in the given vec2\n\t *\n\t * @param {mat2d} out the receiving matrix\n\t * @param {mat2d} a the matrix to translate\n\t * @param {vec2} v the vec2 to translate the matrix by\n\t * @returns {mat2d} out\n\t **/\n\tmat2d.translate = function(out, a, v) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n\t        v0 = v[0], v1 = v[1];\n\t    out[0] = a0;\n\t    out[1] = a1;\n\t    out[2] = a2;\n\t    out[3] = a3;\n\t    out[4] = a0 * v0 + a2 * v1 + a4;\n\t    out[5] = a1 * v0 + a3 * v1 + a5;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a given angle\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.rotate(dest, dest, rad);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat2d} out\n\t */\n\tmat2d.fromRotation = function(out, rad) {\n\t    var s = Math.sin(rad), c = Math.cos(rad);\n\t    out[0] = c;\n\t    out[1] = s;\n\t    out[2] = -s;\n\t    out[3] = c;\n\t    out[4] = 0;\n\t    out[5] = 0;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.scale(dest, dest, vec);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {vec2} v Scaling vector\n\t * @returns {mat2d} out\n\t */\n\tmat2d.fromScaling = function(out, v) {\n\t    out[0] = v[0];\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = v[1];\n\t    out[4] = 0;\n\t    out[5] = 0;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat2d.identity(dest);\n\t *     mat2d.translate(dest, dest, vec);\n\t *\n\t * @param {mat2d} out mat2d receiving operation result\n\t * @param {vec2} v Translation vector\n\t * @returns {mat2d} out\n\t */\n\tmat2d.fromTranslation = function(out, v) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    out[4] = v[0];\n\t    out[5] = v[1];\n\t    return out;\n\t}\n\t\n\t/**\n\t * Returns a string representation of a mat2d\n\t *\n\t * @param {mat2d} a matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tmat2d.str = function (a) {\n\t    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n\t                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n\t};\n\t\n\t/**\n\t * Returns Frobenius norm of a mat2d\n\t *\n\t * @param {mat2d} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tmat2d.frob = function (a) { \n\t    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n\t}; \n\t\n\tmodule.exports = mat2d;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(1);\n\t\n\t/**\n\t * @class 4x4 Matrix\n\t * @name mat4\n\t */\n\tvar mat4 = {};\n\t\n\t/**\n\t * Creates a new identity mat4\n\t *\n\t * @returns {mat4} a new 4x4 matrix\n\t */\n\tmat4.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(16);\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = 1;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 1;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new mat4 initialized with values from an existing matrix\n\t *\n\t * @param {mat4} a matrix to clone\n\t * @returns {mat4} a new 4x4 matrix\n\t */\n\tmat4.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(16);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[8] = a[8];\n\t    out[9] = a[9];\n\t    out[10] = a[10];\n\t    out[11] = a[11];\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one mat4 to another\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tmat4.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    out[2] = a[2];\n\t    out[3] = a[3];\n\t    out[4] = a[4];\n\t    out[5] = a[5];\n\t    out[6] = a[6];\n\t    out[7] = a[7];\n\t    out[8] = a[8];\n\t    out[9] = a[9];\n\t    out[10] = a[10];\n\t    out[11] = a[11];\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set a mat4 to the identity matrix\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @returns {mat4} out\n\t */\n\tmat4.identity = function(out) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = 1;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 1;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transpose the values of a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tmat4.transpose = function(out, a) {\n\t    // If we are transposing ourselves we can skip a few steps but have to cache some values\n\t    if (out === a) {\n\t        var a01 = a[1], a02 = a[2], a03 = a[3],\n\t            a12 = a[6], a13 = a[7],\n\t            a23 = a[11];\n\t\n\t        out[1] = a[4];\n\t        out[2] = a[8];\n\t        out[3] = a[12];\n\t        out[4] = a01;\n\t        out[6] = a[9];\n\t        out[7] = a[13];\n\t        out[8] = a02;\n\t        out[9] = a12;\n\t        out[11] = a[14];\n\t        out[12] = a03;\n\t        out[13] = a13;\n\t        out[14] = a23;\n\t    } else {\n\t        out[0] = a[0];\n\t        out[1] = a[4];\n\t        out[2] = a[8];\n\t        out[3] = a[12];\n\t        out[4] = a[1];\n\t        out[5] = a[5];\n\t        out[6] = a[9];\n\t        out[7] = a[13];\n\t        out[8] = a[2];\n\t        out[9] = a[6];\n\t        out[10] = a[10];\n\t        out[11] = a[14];\n\t        out[12] = a[3];\n\t        out[13] = a[7];\n\t        out[14] = a[11];\n\t        out[15] = a[15];\n\t    }\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Inverts a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tmat4.invert = function(out, a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\t\n\t        b00 = a00 * a11 - a01 * a10,\n\t        b01 = a00 * a12 - a02 * a10,\n\t        b02 = a00 * a13 - a03 * a10,\n\t        b03 = a01 * a12 - a02 * a11,\n\t        b04 = a01 * a13 - a03 * a11,\n\t        b05 = a02 * a13 - a03 * a12,\n\t        b06 = a20 * a31 - a21 * a30,\n\t        b07 = a20 * a32 - a22 * a30,\n\t        b08 = a20 * a33 - a23 * a30,\n\t        b09 = a21 * a32 - a22 * a31,\n\t        b10 = a21 * a33 - a23 * a31,\n\t        b11 = a22 * a33 - a23 * a32,\n\t\n\t        // Calculate the determinant\n\t        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t\n\t    if (!det) { \n\t        return null; \n\t    }\n\t    det = 1.0 / det;\n\t\n\t    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n\t    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n\t    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n\t    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n\t    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n\t    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n\t    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n\t    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n\t    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\t    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\t    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\t    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n\t    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n\t    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n\t    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n\t    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the adjugate of a mat4\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the source matrix\n\t * @returns {mat4} out\n\t */\n\tmat4.adjoint = function(out, a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\t\n\t    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n\t    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n\t    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n\t    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n\t    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n\t    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n\t    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n\t    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n\t    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n\t    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n\t    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n\t    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n\t    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n\t    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n\t    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n\t    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the determinant of a mat4\n\t *\n\t * @param {mat4} a the source matrix\n\t * @returns {Number} determinant of a\n\t */\n\tmat4.determinant = function (a) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\t\n\t        b00 = a00 * a11 - a01 * a10,\n\t        b01 = a00 * a12 - a02 * a10,\n\t        b02 = a00 * a13 - a03 * a10,\n\t        b03 = a01 * a12 - a02 * a11,\n\t        b04 = a01 * a13 - a03 * a11,\n\t        b05 = a02 * a13 - a03 * a12,\n\t        b06 = a20 * a31 - a21 * a30,\n\t        b07 = a20 * a32 - a22 * a30,\n\t        b08 = a20 * a33 - a23 * a30,\n\t        b09 = a21 * a32 - a22 * a31,\n\t        b10 = a21 * a33 - a23 * a31,\n\t        b11 = a22 * a33 - a23 * a32;\n\t\n\t    // Calculate the determinant\n\t    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\t};\n\t\n\t/**\n\t * Multiplies two mat4's\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the first operand\n\t * @param {mat4} b the second operand\n\t * @returns {mat4} out\n\t */\n\tmat4.multiply = function (out, a, b) {\n\t    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n\t        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n\t        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n\t        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\t\n\t    // Cache only the current line of the second matrix\n\t    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n\t    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t\n\t    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n\t    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t\n\t    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n\t    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t\n\t    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n\t    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n\t    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n\t    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n\t    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link mat4.multiply}\n\t * @function\n\t */\n\tmat4.mul = mat4.multiply;\n\t\n\t/**\n\t * Translate a mat4 by the given vector\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to translate\n\t * @param {vec3} v vector to translate by\n\t * @returns {mat4} out\n\t */\n\tmat4.translate = function (out, a, v) {\n\t    var x = v[0], y = v[1], z = v[2],\n\t        a00, a01, a02, a03,\n\t        a10, a11, a12, a13,\n\t        a20, a21, a22, a23;\n\t\n\t    if (a === out) {\n\t        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n\t        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n\t        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n\t        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n\t    } else {\n\t        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n\t        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n\t        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\t\n\t        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n\t        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n\t        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\t\n\t        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n\t        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n\t        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n\t        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n\t    }\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales the mat4 by the dimensions in the given vec3\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to scale\n\t * @param {vec3} v the vec3 to scale the matrix by\n\t * @returns {mat4} out\n\t **/\n\tmat4.scale = function(out, a, v) {\n\t    var x = v[0], y = v[1], z = v[2];\n\t\n\t    out[0] = a[0] * x;\n\t    out[1] = a[1] * x;\n\t    out[2] = a[2] * x;\n\t    out[3] = a[3] * x;\n\t    out[4] = a[4] * y;\n\t    out[5] = a[5] * y;\n\t    out[6] = a[6] * y;\n\t    out[7] = a[7] * y;\n\t    out[8] = a[8] * z;\n\t    out[9] = a[9] * z;\n\t    out[10] = a[10] * z;\n\t    out[11] = a[11] * z;\n\t    out[12] = a[12];\n\t    out[13] = a[13];\n\t    out[14] = a[14];\n\t    out[15] = a[15];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a mat4 by the given angle around the given axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @param {vec3} axis the axis to rotate around\n\t * @returns {mat4} out\n\t */\n\tmat4.rotate = function (out, a, rad, axis) {\n\t    var x = axis[0], y = axis[1], z = axis[2],\n\t        len = Math.sqrt(x * x + y * y + z * z),\n\t        s, c, t,\n\t        a00, a01, a02, a03,\n\t        a10, a11, a12, a13,\n\t        a20, a21, a22, a23,\n\t        b00, b01, b02,\n\t        b10, b11, b12,\n\t        b20, b21, b22;\n\t\n\t    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\t    \n\t    len = 1 / len;\n\t    x *= len;\n\t    y *= len;\n\t    z *= len;\n\t\n\t    s = Math.sin(rad);\n\t    c = Math.cos(rad);\n\t    t = 1 - c;\n\t\n\t    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n\t    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n\t    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\t\n\t    // Construct the elements of the rotation matrix\n\t    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n\t    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n\t    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\t\n\t    // Perform rotation-specific matrix multiplication\n\t    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n\t    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n\t    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n\t    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n\t    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n\t    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n\t    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n\t    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n\t    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n\t    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n\t    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n\t    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\t\n\t    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n\t        out[12] = a[12];\n\t        out[13] = a[13];\n\t        out[14] = a[14];\n\t        out[15] = a[15];\n\t    }\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the X axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.rotateX = function (out, a, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad),\n\t        a10 = a[4],\n\t        a11 = a[5],\n\t        a12 = a[6],\n\t        a13 = a[7],\n\t        a20 = a[8],\n\t        a21 = a[9],\n\t        a22 = a[10],\n\t        a23 = a[11];\n\t\n\t    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n\t        out[0]  = a[0];\n\t        out[1]  = a[1];\n\t        out[2]  = a[2];\n\t        out[3]  = a[3];\n\t        out[12] = a[12];\n\t        out[13] = a[13];\n\t        out[14] = a[14];\n\t        out[15] = a[15];\n\t    }\n\t\n\t    // Perform axis-specific matrix multiplication\n\t    out[4] = a10 * c + a20 * s;\n\t    out[5] = a11 * c + a21 * s;\n\t    out[6] = a12 * c + a22 * s;\n\t    out[7] = a13 * c + a23 * s;\n\t    out[8] = a20 * c - a10 * s;\n\t    out[9] = a21 * c - a11 * s;\n\t    out[10] = a22 * c - a12 * s;\n\t    out[11] = a23 * c - a13 * s;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the Y axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.rotateY = function (out, a, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad),\n\t        a00 = a[0],\n\t        a01 = a[1],\n\t        a02 = a[2],\n\t        a03 = a[3],\n\t        a20 = a[8],\n\t        a21 = a[9],\n\t        a22 = a[10],\n\t        a23 = a[11];\n\t\n\t    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n\t        out[4]  = a[4];\n\t        out[5]  = a[5];\n\t        out[6]  = a[6];\n\t        out[7]  = a[7];\n\t        out[12] = a[12];\n\t        out[13] = a[13];\n\t        out[14] = a[14];\n\t        out[15] = a[15];\n\t    }\n\t\n\t    // Perform axis-specific matrix multiplication\n\t    out[0] = a00 * c - a20 * s;\n\t    out[1] = a01 * c - a21 * s;\n\t    out[2] = a02 * c - a22 * s;\n\t    out[3] = a03 * c - a23 * s;\n\t    out[8] = a00 * s + a20 * c;\n\t    out[9] = a01 * s + a21 * c;\n\t    out[10] = a02 * s + a22 * c;\n\t    out[11] = a03 * s + a23 * c;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a matrix by the given angle around the Z axis\n\t *\n\t * @param {mat4} out the receiving matrix\n\t * @param {mat4} a the matrix to rotate\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.rotateZ = function (out, a, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad),\n\t        a00 = a[0],\n\t        a01 = a[1],\n\t        a02 = a[2],\n\t        a03 = a[3],\n\t        a10 = a[4],\n\t        a11 = a[5],\n\t        a12 = a[6],\n\t        a13 = a[7];\n\t\n\t    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n\t        out[8]  = a[8];\n\t        out[9]  = a[9];\n\t        out[10] = a[10];\n\t        out[11] = a[11];\n\t        out[12] = a[12];\n\t        out[13] = a[13];\n\t        out[14] = a[14];\n\t        out[15] = a[15];\n\t    }\n\t\n\t    // Perform axis-specific matrix multiplication\n\t    out[0] = a00 * c + a10 * s;\n\t    out[1] = a01 * c + a11 * s;\n\t    out[2] = a02 * c + a12 * s;\n\t    out[3] = a03 * c + a13 * s;\n\t    out[4] = a10 * c - a00 * s;\n\t    out[5] = a11 * c - a01 * s;\n\t    out[6] = a12 * c - a02 * s;\n\t    out[7] = a13 * c - a03 * s;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, dest, vec);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {vec3} v Translation vector\n\t * @returns {mat4} out\n\t */\n\tmat4.fromTranslation = function(out, v) {\n\t    out[0] = 1;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = 1;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 1;\n\t    out[11] = 0;\n\t    out[12] = v[0];\n\t    out[13] = v[1];\n\t    out[14] = v[2];\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a vector scaling\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.scale(dest, dest, vec);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {vec3} v Scaling vector\n\t * @returns {mat4} out\n\t */\n\tmat4.fromScaling = function(out, v) {\n\t    out[0] = v[0];\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = v[1];\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = v[2];\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a given angle around a given axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotate(dest, dest, rad, axis);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @param {vec3} axis the axis to rotate around\n\t * @returns {mat4} out\n\t */\n\tmat4.fromRotation = function(out, rad, axis) {\n\t    var x = axis[0], y = axis[1], z = axis[2],\n\t        len = Math.sqrt(x * x + y * y + z * z),\n\t        s, c, t;\n\t    \n\t    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n\t    \n\t    len = 1 / len;\n\t    x *= len;\n\t    y *= len;\n\t    z *= len;\n\t    \n\t    s = Math.sin(rad);\n\t    c = Math.cos(rad);\n\t    t = 1 - c;\n\t    \n\t    // Perform rotation-specific matrix multiplication\n\t    out[0] = x * x * t + c;\n\t    out[1] = y * x * t + z * s;\n\t    out[2] = z * x * t - y * s;\n\t    out[3] = 0;\n\t    out[4] = x * y * t - z * s;\n\t    out[5] = y * y * t + c;\n\t    out[6] = z * y * t + x * s;\n\t    out[7] = 0;\n\t    out[8] = x * z * t + y * s;\n\t    out[9] = y * z * t - x * s;\n\t    out[10] = z * z * t + c;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the X axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateX(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.fromXRotation = function(out, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    \n\t    // Perform axis-specific matrix multiplication\n\t    out[0]  = 1;\n\t    out[1]  = 0;\n\t    out[2]  = 0;\n\t    out[3]  = 0;\n\t    out[4] = 0;\n\t    out[5] = c;\n\t    out[6] = s;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = -s;\n\t    out[10] = c;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the Y axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateY(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.fromYRotation = function(out, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    \n\t    // Perform axis-specific matrix multiplication\n\t    out[0]  = c;\n\t    out[1]  = 0;\n\t    out[2]  = -s;\n\t    out[3]  = 0;\n\t    out[4] = 0;\n\t    out[5] = 1;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = s;\n\t    out[9] = 0;\n\t    out[10] = c;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from the given angle around the Z axis\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.rotateZ(dest, dest, rad);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {Number} rad the angle to rotate the matrix by\n\t * @returns {mat4} out\n\t */\n\tmat4.fromZRotation = function(out, rad) {\n\t    var s = Math.sin(rad),\n\t        c = Math.cos(rad);\n\t    \n\t    // Perform axis-specific matrix multiplication\n\t    out[0]  = c;\n\t    out[1]  = s;\n\t    out[2]  = 0;\n\t    out[3]  = 0;\n\t    out[4] = -s;\n\t    out[5] = c;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 1;\n\t    out[11] = 0;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation and vector translation\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     var quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @returns {mat4} out\n\t */\n\tmat4.fromRotationTranslation = function (out, q, v) {\n\t    // Quaternion math\n\t    var x = q[0], y = q[1], z = q[2], w = q[3],\n\t        x2 = x + x,\n\t        y2 = y + y,\n\t        z2 = z + z,\n\t\n\t        xx = x * x2,\n\t        xy = x * y2,\n\t        xz = x * z2,\n\t        yy = y * y2,\n\t        yz = y * z2,\n\t        zz = z * z2,\n\t        wx = w * x2,\n\t        wy = w * y2,\n\t        wz = w * z2;\n\t\n\t    out[0] = 1 - (yy + zz);\n\t    out[1] = xy + wz;\n\t    out[2] = xz - wy;\n\t    out[3] = 0;\n\t    out[4] = xy - wz;\n\t    out[5] = 1 - (xx + zz);\n\t    out[6] = yz + wx;\n\t    out[7] = 0;\n\t    out[8] = xz + wy;\n\t    out[9] = yz - wx;\n\t    out[10] = 1 - (xx + yy);\n\t    out[11] = 0;\n\t    out[12] = v[0];\n\t    out[13] = v[1];\n\t    out[14] = v[2];\n\t    out[15] = 1;\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation, vector translation and vector scale\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     var quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *     mat4.scale(dest, scale)\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @param {vec3} s Scaling vector\n\t * @returns {mat4} out\n\t */\n\tmat4.fromRotationTranslationScale = function (out, q, v, s) {\n\t    // Quaternion math\n\t    var x = q[0], y = q[1], z = q[2], w = q[3],\n\t        x2 = x + x,\n\t        y2 = y + y,\n\t        z2 = z + z,\n\t\n\t        xx = x * x2,\n\t        xy = x * y2,\n\t        xz = x * z2,\n\t        yy = y * y2,\n\t        yz = y * z2,\n\t        zz = z * z2,\n\t        wx = w * x2,\n\t        wy = w * y2,\n\t        wz = w * z2,\n\t        sx = s[0],\n\t        sy = s[1],\n\t        sz = s[2];\n\t\n\t    out[0] = (1 - (yy + zz)) * sx;\n\t    out[1] = (xy + wz) * sx;\n\t    out[2] = (xz - wy) * sx;\n\t    out[3] = 0;\n\t    out[4] = (xy - wz) * sy;\n\t    out[5] = (1 - (xx + zz)) * sy;\n\t    out[6] = (yz + wx) * sy;\n\t    out[7] = 0;\n\t    out[8] = (xz + wy) * sz;\n\t    out[9] = (yz - wx) * sz;\n\t    out[10] = (1 - (xx + yy)) * sz;\n\t    out[11] = 0;\n\t    out[12] = v[0];\n\t    out[13] = v[1];\n\t    out[14] = v[2];\n\t    out[15] = 1;\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n\t * This is equivalent to (but much faster than):\n\t *\n\t *     mat4.identity(dest);\n\t *     mat4.translate(dest, vec);\n\t *     mat4.translate(dest, origin);\n\t *     var quatMat = mat4.create();\n\t *     quat4.toMat4(quat, quatMat);\n\t *     mat4.multiply(dest, quatMat);\n\t *     mat4.scale(dest, scale)\n\t *     mat4.translate(dest, negativeOrigin);\n\t *\n\t * @param {mat4} out mat4 receiving operation result\n\t * @param {quat4} q Rotation quaternion\n\t * @param {vec3} v Translation vector\n\t * @param {vec3} s Scaling vector\n\t * @param {vec3} o The origin vector around which to scale and rotate\n\t * @returns {mat4} out\n\t */\n\tmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n\t  // Quaternion math\n\t  var x = q[0], y = q[1], z = q[2], w = q[3],\n\t      x2 = x + x,\n\t      y2 = y + y,\n\t      z2 = z + z,\n\t\n\t      xx = x * x2,\n\t      xy = x * y2,\n\t      xz = x * z2,\n\t      yy = y * y2,\n\t      yz = y * z2,\n\t      zz = z * z2,\n\t      wx = w * x2,\n\t      wy = w * y2,\n\t      wz = w * z2,\n\t      \n\t      sx = s[0],\n\t      sy = s[1],\n\t      sz = s[2],\n\t\n\t      ox = o[0],\n\t      oy = o[1],\n\t      oz = o[2];\n\t      \n\t  out[0] = (1 - (yy + zz)) * sx;\n\t  out[1] = (xy + wz) * sx;\n\t  out[2] = (xz - wy) * sx;\n\t  out[3] = 0;\n\t  out[4] = (xy - wz) * sy;\n\t  out[5] = (1 - (xx + zz)) * sy;\n\t  out[6] = (yz + wx) * sy;\n\t  out[7] = 0;\n\t  out[8] = (xz + wy) * sz;\n\t  out[9] = (yz - wx) * sz;\n\t  out[10] = (1 - (xx + yy)) * sz;\n\t  out[11] = 0;\n\t  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n\t  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n\t  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n\t  out[15] = 1;\n\t        \n\t  return out;\n\t};\n\t\n\tmat4.fromQuat = function (out, q) {\n\t    var x = q[0], y = q[1], z = q[2], w = q[3],\n\t        x2 = x + x,\n\t        y2 = y + y,\n\t        z2 = z + z,\n\t\n\t        xx = x * x2,\n\t        yx = y * x2,\n\t        yy = y * y2,\n\t        zx = z * x2,\n\t        zy = z * y2,\n\t        zz = z * z2,\n\t        wx = w * x2,\n\t        wy = w * y2,\n\t        wz = w * z2;\n\t\n\t    out[0] = 1 - yy - zz;\n\t    out[1] = yx + wz;\n\t    out[2] = zx - wy;\n\t    out[3] = 0;\n\t\n\t    out[4] = yx - wz;\n\t    out[5] = 1 - xx - zz;\n\t    out[6] = zy + wx;\n\t    out[7] = 0;\n\t\n\t    out[8] = zx + wy;\n\t    out[9] = zy - wx;\n\t    out[10] = 1 - xx - yy;\n\t    out[11] = 0;\n\t\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = 0;\n\t    out[15] = 1;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a frustum matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {Number} left Left bound of the frustum\n\t * @param {Number} right Right bound of the frustum\n\t * @param {Number} bottom Bottom bound of the frustum\n\t * @param {Number} top Top bound of the frustum\n\t * @param {Number} near Near bound of the frustum\n\t * @param {Number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tmat4.frustum = function (out, left, right, bottom, top, near, far) {\n\t    var rl = 1 / (right - left),\n\t        tb = 1 / (top - bottom),\n\t        nf = 1 / (near - far);\n\t    out[0] = (near * 2) * rl;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = (near * 2) * tb;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = (right + left) * rl;\n\t    out[9] = (top + bottom) * tb;\n\t    out[10] = (far + near) * nf;\n\t    out[11] = -1;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = (far * near * 2) * nf;\n\t    out[15] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a perspective projection matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {number} fovy Vertical field of view in radians\n\t * @param {number} aspect Aspect ratio. typically viewport width/height\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tmat4.perspective = function (out, fovy, aspect, near, far) {\n\t    var f = 1.0 / Math.tan(fovy / 2),\n\t        nf = 1 / (near - far);\n\t    out[0] = f / aspect;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = f;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = (far + near) * nf;\n\t    out[11] = -1;\n\t    out[12] = 0;\n\t    out[13] = 0;\n\t    out[14] = (2 * far * near) * nf;\n\t    out[15] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a perspective projection matrix with the given field of view.\n\t * This is primarily useful for generating projection matrices to be used\n\t * with the still experiemental WebVR API.\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n\t    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n\t        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n\t        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n\t        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n\t        xScale = 2.0 / (leftTan + rightTan),\n\t        yScale = 2.0 / (upTan + downTan);\n\t\n\t    out[0] = xScale;\n\t    out[1] = 0.0;\n\t    out[2] = 0.0;\n\t    out[3] = 0.0;\n\t    out[4] = 0.0;\n\t    out[5] = yScale;\n\t    out[6] = 0.0;\n\t    out[7] = 0.0;\n\t    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n\t    out[9] = ((upTan - downTan) * yScale * 0.5);\n\t    out[10] = far / (near - far);\n\t    out[11] = -1.0;\n\t    out[12] = 0.0;\n\t    out[13] = 0.0;\n\t    out[14] = (far * near) / (near - far);\n\t    out[15] = 0.0;\n\t    return out;\n\t}\n\t\n\t/**\n\t * Generates a orthogonal projection matrix with the given bounds\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {number} left Left bound of the frustum\n\t * @param {number} right Right bound of the frustum\n\t * @param {number} bottom Bottom bound of the frustum\n\t * @param {number} top Top bound of the frustum\n\t * @param {number} near Near bound of the frustum\n\t * @param {number} far Far bound of the frustum\n\t * @returns {mat4} out\n\t */\n\tmat4.ortho = function (out, left, right, bottom, top, near, far) {\n\t    var lr = 1 / (left - right),\n\t        bt = 1 / (bottom - top),\n\t        nf = 1 / (near - far);\n\t    out[0] = -2 * lr;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 0;\n\t    out[4] = 0;\n\t    out[5] = -2 * bt;\n\t    out[6] = 0;\n\t    out[7] = 0;\n\t    out[8] = 0;\n\t    out[9] = 0;\n\t    out[10] = 2 * nf;\n\t    out[11] = 0;\n\t    out[12] = (left + right) * lr;\n\t    out[13] = (top + bottom) * bt;\n\t    out[14] = (far + near) * nf;\n\t    out[15] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a look-at matrix with the given eye position, focal point, and up axis\n\t *\n\t * @param {mat4} out mat4 frustum matrix will be written into\n\t * @param {vec3} eye Position of the viewer\n\t * @param {vec3} center Point the viewer is looking at\n\t * @param {vec3} up vec3 pointing up\n\t * @returns {mat4} out\n\t */\n\tmat4.lookAt = function (out, eye, center, up) {\n\t    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n\t        eyex = eye[0],\n\t        eyey = eye[1],\n\t        eyez = eye[2],\n\t        upx = up[0],\n\t        upy = up[1],\n\t        upz = up[2],\n\t        centerx = center[0],\n\t        centery = center[1],\n\t        centerz = center[2];\n\t\n\t    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n\t        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n\t        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n\t        return mat4.identity(out);\n\t    }\n\t\n\t    z0 = eyex - centerx;\n\t    z1 = eyey - centery;\n\t    z2 = eyez - centerz;\n\t\n\t    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n\t    z0 *= len;\n\t    z1 *= len;\n\t    z2 *= len;\n\t\n\t    x0 = upy * z2 - upz * z1;\n\t    x1 = upz * z0 - upx * z2;\n\t    x2 = upx * z1 - upy * z0;\n\t    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\t    if (!len) {\n\t        x0 = 0;\n\t        x1 = 0;\n\t        x2 = 0;\n\t    } else {\n\t        len = 1 / len;\n\t        x0 *= len;\n\t        x1 *= len;\n\t        x2 *= len;\n\t    }\n\t\n\t    y0 = z1 * x2 - z2 * x1;\n\t    y1 = z2 * x0 - z0 * x2;\n\t    y2 = z0 * x1 - z1 * x0;\n\t\n\t    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\t    if (!len) {\n\t        y0 = 0;\n\t        y1 = 0;\n\t        y2 = 0;\n\t    } else {\n\t        len = 1 / len;\n\t        y0 *= len;\n\t        y1 *= len;\n\t        y2 *= len;\n\t    }\n\t\n\t    out[0] = x0;\n\t    out[1] = y0;\n\t    out[2] = z0;\n\t    out[3] = 0;\n\t    out[4] = x1;\n\t    out[5] = y1;\n\t    out[6] = z1;\n\t    out[7] = 0;\n\t    out[8] = x2;\n\t    out[9] = y2;\n\t    out[10] = z2;\n\t    out[11] = 0;\n\t    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n\t    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n\t    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n\t    out[15] = 1;\n\t\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns a string representation of a mat4\n\t *\n\t * @param {mat4} mat matrix to represent as a string\n\t * @returns {String} string representation of the matrix\n\t */\n\tmat4.str = function (a) {\n\t    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n\t                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n\t                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \n\t                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n\t};\n\t\n\t/**\n\t * Returns Frobenius norm of a mat4\n\t *\n\t * @param {mat4} a the matrix to calculate Frobenius norm of\n\t * @returns {Number} Frobenius norm\n\t */\n\tmat4.frob = function (a) {\n\t    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n\t};\n\t\n\t\n\tmodule.exports = mat4;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(1);\n\tvar mat3 = __webpack_require__(4);\n\tvar vec3 = __webpack_require__(5);\n\tvar vec4 = __webpack_require__(6);\n\t\n\t/**\n\t * @class Quaternion\n\t * @name quat\n\t */\n\tvar quat = {};\n\t\n\t/**\n\t * Creates a new identity quat\n\t *\n\t * @returns {quat} a new quaternion\n\t */\n\tquat.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(4);\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Sets a quaternion to represent the shortest rotation from one\n\t * vector to another.\n\t *\n\t * Both vectors are assumed to be unit length.\n\t *\n\t * @param {quat} out the receiving quaternion.\n\t * @param {vec3} a the initial vector\n\t * @param {vec3} b the destination vector\n\t * @returns {quat} out\n\t */\n\tquat.rotationTo = (function() {\n\t    var tmpvec3 = vec3.create();\n\t    var xUnitVec3 = vec3.fromValues(1,0,0);\n\t    var yUnitVec3 = vec3.fromValues(0,1,0);\n\t\n\t    return function(out, a, b) {\n\t        var dot = vec3.dot(a, b);\n\t        if (dot < -0.999999) {\n\t            vec3.cross(tmpvec3, xUnitVec3, a);\n\t            if (vec3.length(tmpvec3) < 0.000001)\n\t                vec3.cross(tmpvec3, yUnitVec3, a);\n\t            vec3.normalize(tmpvec3, tmpvec3);\n\t            quat.setAxisAngle(out, tmpvec3, Math.PI);\n\t            return out;\n\t        } else if (dot > 0.999999) {\n\t            out[0] = 0;\n\t            out[1] = 0;\n\t            out[2] = 0;\n\t            out[3] = 1;\n\t            return out;\n\t        } else {\n\t            vec3.cross(tmpvec3, a, b);\n\t            out[0] = tmpvec3[0];\n\t            out[1] = tmpvec3[1];\n\t            out[2] = tmpvec3[2];\n\t            out[3] = 1 + dot;\n\t            return quat.normalize(out, out);\n\t        }\n\t    };\n\t})();\n\t\n\t/**\n\t * Sets the specified quaternion with values corresponding to the given\n\t * axes. Each axis is a vec3 and is expected to be unit length and\n\t * perpendicular to all other specified axes.\n\t *\n\t * @param {vec3} view  the vector representing the viewing direction\n\t * @param {vec3} right the vector representing the local \"right\" direction\n\t * @param {vec3} up    the vector representing the local \"up\" direction\n\t * @returns {quat} out\n\t */\n\tquat.setAxes = (function() {\n\t    var matr = mat3.create();\n\t\n\t    return function(out, view, right, up) {\n\t        matr[0] = right[0];\n\t        matr[3] = right[1];\n\t        matr[6] = right[2];\n\t\n\t        matr[1] = up[0];\n\t        matr[4] = up[1];\n\t        matr[7] = up[2];\n\t\n\t        matr[2] = -view[0];\n\t        matr[5] = -view[1];\n\t        matr[8] = -view[2];\n\t\n\t        return quat.normalize(out, quat.fromMat3(out, matr));\n\t    };\n\t})();\n\t\n\t/**\n\t * Creates a new quat initialized with values from an existing quaternion\n\t *\n\t * @param {quat} a quaternion to clone\n\t * @returns {quat} a new quaternion\n\t * @function\n\t */\n\tquat.clone = vec4.clone;\n\t\n\t/**\n\t * Creates a new quat initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {quat} a new quaternion\n\t * @function\n\t */\n\tquat.fromValues = vec4.fromValues;\n\t\n\t/**\n\t * Copy the values from one quat to another\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the source quaternion\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.copy = vec4.copy;\n\t\n\t/**\n\t * Set the components of a quat to the given values\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @param {Number} z Z component\n\t * @param {Number} w W component\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.set = vec4.set;\n\t\n\t/**\n\t * Set a quat to the identity quaternion\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @returns {quat} out\n\t */\n\tquat.identity = function(out) {\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t    out[2] = 0;\n\t    out[3] = 1;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Sets a quat from the given angle and rotation axis,\n\t * then returns it.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {vec3} axis the axis around which to rotate\n\t * @param {Number} rad the angle in radians\n\t * @returns {quat} out\n\t **/\n\tquat.setAxisAngle = function(out, axis, rad) {\n\t    rad = rad * 0.5;\n\t    var s = Math.sin(rad);\n\t    out[0] = s * axis[0];\n\t    out[1] = s * axis[1];\n\t    out[2] = s * axis[2];\n\t    out[3] = Math.cos(rad);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.add = vec4.add;\n\t\n\t/**\n\t * Multiplies two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {quat} out\n\t */\n\tquat.multiply = function(out, a, b) {\n\t    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\t\n\t    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n\t    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n\t    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n\t    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link quat.multiply}\n\t * @function\n\t */\n\tquat.mul = quat.multiply;\n\t\n\t/**\n\t * Scales a quat by a scalar number\n\t *\n\t * @param {quat} out the receiving vector\n\t * @param {quat} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.scale = vec4.scale;\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the X axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tquat.rotateX = function (out, a, rad) {\n\t    rad *= 0.5; \n\t\n\t    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t        bx = Math.sin(rad), bw = Math.cos(rad);\n\t\n\t    out[0] = ax * bw + aw * bx;\n\t    out[1] = ay * bw + az * bx;\n\t    out[2] = az * bw - ay * bx;\n\t    out[3] = aw * bw - ax * bx;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the Y axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tquat.rotateY = function (out, a, rad) {\n\t    rad *= 0.5; \n\t\n\t    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t        by = Math.sin(rad), bw = Math.cos(rad);\n\t\n\t    out[0] = ax * bw - az * by;\n\t    out[1] = ay * bw + aw * by;\n\t    out[2] = az * bw + ax * by;\n\t    out[3] = aw * bw - ay * by;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Rotates a quaternion by the given angle about the Z axis\n\t *\n\t * @param {quat} out quat receiving operation result\n\t * @param {quat} a quat to rotate\n\t * @param {number} rad angle (in radians) to rotate\n\t * @returns {quat} out\n\t */\n\tquat.rotateZ = function (out, a, rad) {\n\t    rad *= 0.5; \n\t\n\t    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t        bz = Math.sin(rad), bw = Math.cos(rad);\n\t\n\t    out[0] = ax * bw + ay * bz;\n\t    out[1] = ay * bw - ax * bz;\n\t    out[2] = az * bw + aw * bz;\n\t    out[3] = aw * bw - az * bz;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the W component of a quat from the X, Y, and Z components.\n\t * Assumes that quaternion is 1 unit in length.\n\t * Any existing W component will be ignored.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate W component of\n\t * @returns {quat} out\n\t */\n\tquat.calculateW = function (out, a) {\n\t    var x = a[0], y = a[1], z = a[2];\n\t\n\t    out[0] = x;\n\t    out[1] = y;\n\t    out[2] = z;\n\t    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two quat's\n\t *\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @returns {Number} dot product of a and b\n\t * @function\n\t */\n\tquat.dot = vec4.dot;\n\t\n\t/**\n\t * Performs a linear interpolation between two quat's\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.lerp = vec4.lerp;\n\t\n\t/**\n\t * Performs a spherical linear interpolation between two quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {quat} out\n\t */\n\tquat.slerp = function (out, a, b, t) {\n\t    // benchmarks:\n\t    //    http://jsperf.com/quaternion-slerp-implementations\n\t\n\t    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n\t        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\t\n\t    var        omega, cosom, sinom, scale0, scale1;\n\t\n\t    // calc cosine\n\t    cosom = ax * bx + ay * by + az * bz + aw * bw;\n\t    // adjust signs (if necessary)\n\t    if ( cosom < 0.0 ) {\n\t        cosom = -cosom;\n\t        bx = - bx;\n\t        by = - by;\n\t        bz = - bz;\n\t        bw = - bw;\n\t    }\n\t    // calculate coefficients\n\t    if ( (1.0 - cosom) > 0.000001 ) {\n\t        // standard case (slerp)\n\t        omega  = Math.acos(cosom);\n\t        sinom  = Math.sin(omega);\n\t        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n\t        scale1 = Math.sin(t * omega) / sinom;\n\t    } else {        \n\t        // \"from\" and \"to\" quaternions are very close \n\t        //  ... so we can do a linear interpolation\n\t        scale0 = 1.0 - t;\n\t        scale1 = t;\n\t    }\n\t    // calculate final values\n\t    out[0] = scale0 * ax + scale1 * bx;\n\t    out[1] = scale0 * ay + scale1 * by;\n\t    out[2] = scale0 * az + scale1 * bz;\n\t    out[3] = scale0 * aw + scale1 * bw;\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Performs a spherical linear interpolation with two control points\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a the first operand\n\t * @param {quat} b the second operand\n\t * @param {quat} c the third operand\n\t * @param {quat} d the fourth operand\n\t * @param {Number} t interpolation amount\n\t * @returns {quat} out\n\t */\n\tquat.sqlerp = (function () {\n\t  var temp1 = quat.create();\n\t  var temp2 = quat.create();\n\t  \n\t  return function (out, a, b, c, d, t) {\n\t    quat.slerp(temp1, a, d, t);\n\t    quat.slerp(temp2, b, c, t);\n\t    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n\t    \n\t    return out;\n\t  };\n\t}());\n\t\n\t/**\n\t * Calculates the inverse of a quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate inverse of\n\t * @returns {quat} out\n\t */\n\tquat.invert = function(out, a) {\n\t    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\t        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n\t        invDot = dot ? 1.0/dot : 0;\n\t    \n\t    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\t\n\t    out[0] = -a0*invDot;\n\t    out[1] = -a1*invDot;\n\t    out[2] = -a2*invDot;\n\t    out[3] = a3*invDot;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the conjugate of a quat\n\t * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quat to calculate conjugate of\n\t * @returns {quat} out\n\t */\n\tquat.conjugate = function (out, a) {\n\t    out[0] = -a[0];\n\t    out[1] = -a[1];\n\t    out[2] = -a[2];\n\t    out[3] = a[3];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the length of a quat\n\t *\n\t * @param {quat} a vector to calculate length of\n\t * @returns {Number} length of a\n\t * @function\n\t */\n\tquat.length = vec4.length;\n\t\n\t/**\n\t * Alias for {@link quat.length}\n\t * @function\n\t */\n\tquat.len = quat.length;\n\t\n\t/**\n\t * Calculates the squared length of a quat\n\t *\n\t * @param {quat} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t * @function\n\t */\n\tquat.squaredLength = vec4.squaredLength;\n\t\n\t/**\n\t * Alias for {@link quat.squaredLength}\n\t * @function\n\t */\n\tquat.sqrLen = quat.squaredLength;\n\t\n\t/**\n\t * Normalize a quat\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {quat} a quaternion to normalize\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.normalize = vec4.normalize;\n\t\n\t/**\n\t * Creates a quaternion from the given 3x3 rotation matrix.\n\t *\n\t * NOTE: The resultant quaternion is not normalized, so you should be sure\n\t * to renormalize the quaternion yourself where necessary.\n\t *\n\t * @param {quat} out the receiving quaternion\n\t * @param {mat3} m rotation matrix\n\t * @returns {quat} out\n\t * @function\n\t */\n\tquat.fromMat3 = function(out, m) {\n\t    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n\t    // article \"Quaternion Calculus and Fast Animation\".\n\t    var fTrace = m[0] + m[4] + m[8];\n\t    var fRoot;\n\t\n\t    if ( fTrace > 0.0 ) {\n\t        // |w| > 1/2, may as well choose w > 1/2\n\t        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n\t        out[3] = 0.5 * fRoot;\n\t        fRoot = 0.5/fRoot;  // 1/(4w)\n\t        out[0] = (m[5]-m[7])*fRoot;\n\t        out[1] = (m[6]-m[2])*fRoot;\n\t        out[2] = (m[1]-m[3])*fRoot;\n\t    } else {\n\t        // |w| <= 1/2\n\t        var i = 0;\n\t        if ( m[4] > m[0] )\n\t          i = 1;\n\t        if ( m[8] > m[i*3+i] )\n\t          i = 2;\n\t        var j = (i+1)%3;\n\t        var k = (i+2)%3;\n\t        \n\t        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n\t        out[i] = 0.5 * fRoot;\n\t        fRoot = 0.5 / fRoot;\n\t        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n\t        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n\t        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n\t    }\n\t    \n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns a string representation of a quatenion\n\t *\n\t * @param {quat} vec vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tquat.str = function (a) {\n\t    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n\t};\n\t\n\tmodule.exports = quat;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\tof this software and associated documentation files (the \"Software\"), to deal\n\tin the Software without restriction, including without limitation the rights\n\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\tcopies of the Software, and to permit persons to whom the Software is\n\tfurnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in\n\tall copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\tTHE SOFTWARE. */\n\t\n\tvar glMatrix = __webpack_require__(1);\n\t\n\t/**\n\t * @class 2 Dimensional Vector\n\t * @name vec2\n\t */\n\tvar vec2 = {};\n\t\n\t/**\n\t * Creates a new, empty vec2\n\t *\n\t * @returns {vec2} a new 2D vector\n\t */\n\tvec2.create = function() {\n\t    var out = new glMatrix.ARRAY_TYPE(2);\n\t    out[0] = 0;\n\t    out[1] = 0;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec2 initialized with values from an existing vector\n\t *\n\t * @param {vec2} a vector to clone\n\t * @returns {vec2} a new 2D vector\n\t */\n\tvec2.clone = function(a) {\n\t    var out = new glMatrix.ARRAY_TYPE(2);\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Creates a new vec2 initialized with the given values\n\t *\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @returns {vec2} a new 2D vector\n\t */\n\tvec2.fromValues = function(x, y) {\n\t    var out = new glMatrix.ARRAY_TYPE(2);\n\t    out[0] = x;\n\t    out[1] = y;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Copy the values from one vec2 to another\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the source vector\n\t * @returns {vec2} out\n\t */\n\tvec2.copy = function(out, a) {\n\t    out[0] = a[0];\n\t    out[1] = a[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Set the components of a vec2 to the given values\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {Number} x X component\n\t * @param {Number} y Y component\n\t * @returns {vec2} out\n\t */\n\tvec2.set = function(out, x, y) {\n\t    out[0] = x;\n\t    out[1] = y;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.add = function(out, a, b) {\n\t    out[0] = a[0] + b[0];\n\t    out[1] = a[1] + b[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Subtracts vector b from vector a\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.subtract = function(out, a, b) {\n\t    out[0] = a[0] - b[0];\n\t    out[1] = a[1] - b[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.subtract}\n\t * @function\n\t */\n\tvec2.sub = vec2.subtract;\n\t\n\t/**\n\t * Multiplies two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.multiply = function(out, a, b) {\n\t    out[0] = a[0] * b[0];\n\t    out[1] = a[1] * b[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.multiply}\n\t * @function\n\t */\n\tvec2.mul = vec2.multiply;\n\t\n\t/**\n\t * Divides two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.divide = function(out, a, b) {\n\t    out[0] = a[0] / b[0];\n\t    out[1] = a[1] / b[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.divide}\n\t * @function\n\t */\n\tvec2.div = vec2.divide;\n\t\n\t/**\n\t * Returns the minimum of two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.min = function(out, a, b) {\n\t    out[0] = Math.min(a[0], b[0]);\n\t    out[1] = Math.min(a[1], b[1]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the maximum of two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec2} out\n\t */\n\tvec2.max = function(out, a, b) {\n\t    out[0] = Math.max(a[0], b[0]);\n\t    out[1] = Math.max(a[1], b[1]);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Scales a vec2 by a scalar number\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to scale\n\t * @param {Number} b amount to scale the vector by\n\t * @returns {vec2} out\n\t */\n\tvec2.scale = function(out, a, b) {\n\t    out[0] = a[0] * b;\n\t    out[1] = a[1] * b;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Adds two vec2's after scaling the second operand by a scalar value\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @param {Number} scale the amount to scale b by before adding\n\t * @returns {vec2} out\n\t */\n\tvec2.scaleAndAdd = function(out, a, b, scale) {\n\t    out[0] = a[0] + (b[0] * scale);\n\t    out[1] = a[1] + (b[1] * scale);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the euclidian distance between two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} distance between a and b\n\t */\n\tvec2.distance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1];\n\t    return Math.sqrt(x*x + y*y);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.distance}\n\t * @function\n\t */\n\tvec2.dist = vec2.distance;\n\t\n\t/**\n\t * Calculates the squared euclidian distance between two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} squared distance between a and b\n\t */\n\tvec2.squaredDistance = function(a, b) {\n\t    var x = b[0] - a[0],\n\t        y = b[1] - a[1];\n\t    return x*x + y*y;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.squaredDistance}\n\t * @function\n\t */\n\tvec2.sqrDist = vec2.squaredDistance;\n\t\n\t/**\n\t * Calculates the length of a vec2\n\t *\n\t * @param {vec2} a vector to calculate length of\n\t * @returns {Number} length of a\n\t */\n\tvec2.length = function (a) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    return Math.sqrt(x*x + y*y);\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.length}\n\t * @function\n\t */\n\tvec2.len = vec2.length;\n\t\n\t/**\n\t * Calculates the squared length of a vec2\n\t *\n\t * @param {vec2} a vector to calculate squared length of\n\t * @returns {Number} squared length of a\n\t */\n\tvec2.squaredLength = function (a) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    return x*x + y*y;\n\t};\n\t\n\t/**\n\t * Alias for {@link vec2.squaredLength}\n\t * @function\n\t */\n\tvec2.sqrLen = vec2.squaredLength;\n\t\n\t/**\n\t * Negates the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to negate\n\t * @returns {vec2} out\n\t */\n\tvec2.negate = function(out, a) {\n\t    out[0] = -a[0];\n\t    out[1] = -a[1];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Returns the inverse of the components of a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to invert\n\t * @returns {vec2} out\n\t */\n\tvec2.inverse = function(out, a) {\n\t  out[0] = 1.0 / a[0];\n\t  out[1] = 1.0 / a[1];\n\t  return out;\n\t};\n\t\n\t/**\n\t * Normalize a vec2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a vector to normalize\n\t * @returns {vec2} out\n\t */\n\tvec2.normalize = function(out, a) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    var len = x*x + y*y;\n\t    if (len > 0) {\n\t        //TODO: evaluate use of glm_invsqrt here?\n\t        len = 1 / Math.sqrt(len);\n\t        out[0] = a[0] * len;\n\t        out[1] = a[1] * len;\n\t    }\n\t    return out;\n\t};\n\t\n\t/**\n\t * Calculates the dot product of two vec2's\n\t *\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {Number} dot product of a and b\n\t */\n\tvec2.dot = function (a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t};\n\t\n\t/**\n\t * Computes the cross product of two vec2's\n\t * Note that the cross product must by definition produce a 3D vector\n\t *\n\t * @param {vec3} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @returns {vec3} out\n\t */\n\tvec2.cross = function(out, a, b) {\n\t    var z = a[0] * b[1] - a[1] * b[0];\n\t    out[0] = out[1] = 0;\n\t    out[2] = z;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Performs a linear interpolation between two vec2's\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the first operand\n\t * @param {vec2} b the second operand\n\t * @param {Number} t interpolation amount between the two inputs\n\t * @returns {vec2} out\n\t */\n\tvec2.lerp = function (out, a, b, t) {\n\t    var ax = a[0],\n\t        ay = a[1];\n\t    out[0] = ax + t * (b[0] - ax);\n\t    out[1] = ay + t * (b[1] - ay);\n\t    return out;\n\t};\n\t\n\t/**\n\t * Generates a random vector with the given scale\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n\t * @returns {vec2} out\n\t */\n\tvec2.random = function (out, scale) {\n\t    scale = scale || 1.0;\n\t    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n\t    out[0] = Math.cos(r) * scale;\n\t    out[1] = Math.sin(r) * scale;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat2\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat2} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tvec2.transformMat2 = function(out, a, m) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    out[0] = m[0] * x + m[2] * y;\n\t    out[1] = m[1] * x + m[3] * y;\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat2d\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat2d} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tvec2.transformMat2d = function(out, a, m) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    out[0] = m[0] * x + m[2] * y + m[4];\n\t    out[1] = m[1] * x + m[3] * y + m[5];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat3\n\t * 3rd vector component is implicitly '1'\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat3} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tvec2.transformMat3 = function(out, a, m) {\n\t    var x = a[0],\n\t        y = a[1];\n\t    out[0] = m[0] * x + m[3] * y + m[6];\n\t    out[1] = m[1] * x + m[4] * y + m[7];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Transforms the vec2 with a mat4\n\t * 3rd vector component is implicitly '0'\n\t * 4th vector component is implicitly '1'\n\t *\n\t * @param {vec2} out the receiving vector\n\t * @param {vec2} a the vector to transform\n\t * @param {mat4} m matrix to transform with\n\t * @returns {vec2} out\n\t */\n\tvec2.transformMat4 = function(out, a, m) {\n\t    var x = a[0], \n\t        y = a[1];\n\t    out[0] = m[0] * x + m[4] * y + m[12];\n\t    out[1] = m[1] * x + m[5] * y + m[13];\n\t    return out;\n\t};\n\t\n\t/**\n\t * Perform some operation over an array of vec2s.\n\t *\n\t * @param {Array} a the array of vectors to iterate over\n\t * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n\t * @param {Number} offset Number of elements to skip at the beginning of the array\n\t * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n\t * @param {Function} fn Function to call for each vector in the array\n\t * @param {Object} [arg] additional argument to pass to fn\n\t * @returns {Array} a\n\t * @function\n\t */\n\tvec2.forEach = (function() {\n\t    var vec = vec2.create();\n\t\n\t    return function(a, stride, offset, count, fn, arg) {\n\t        var i, l;\n\t        if(!stride) {\n\t            stride = 2;\n\t        }\n\t\n\t        if(!offset) {\n\t            offset = 0;\n\t        }\n\t        \n\t        if(count) {\n\t            l = Math.min((count * stride) + offset, a.length);\n\t        } else {\n\t            l = a.length;\n\t        }\n\t\n\t        for(i = offset; i < l; i += stride) {\n\t            vec[0] = a[i]; vec[1] = a[i+1];\n\t            fn(vec, vec, arg);\n\t            a[i] = vec[0]; a[i+1] = vec[1];\n\t        }\n\t        \n\t        return a;\n\t    };\n\t})();\n\t\n\t/**\n\t * Returns a string representation of a vector\n\t *\n\t * @param {vec2} vec vector to represent as a string\n\t * @returns {String} string representation of the vector\n\t */\n\tvec2.str = function (a) {\n\t    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n\t};\n\t\n\tmodule.exports = vec2;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _helpersSelectLocalVideo = __webpack_require__(11);\n\t\n\tvar _helpersSelectLocalVideo2 = _interopRequireDefault(_helpersSelectLocalVideo);\n\t\n\tvar noop = function noop() {};\n\t\n\tvar Controls = (function (_React$Component) {\n\t    _inherits(Controls, _React$Component);\n\t\n\t    function Controls() {\n\t        _classCallCheck(this, Controls);\n\t\n\t        _get(Object.getPrototypeOf(Controls.prototype), 'constructor', this).apply(this, arguments);\n\t    }\n\t\n\t    _createClass(Controls, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            var playClassName = this.props.isPlaying ? 'fa fa-pause icon' : 'fa fa-play icon';\n\t            var muteClassName = this.props.isMute ? 'fa fa-volume-off icon' : 'fa fa-volume-up icon';\n\t            // <a className=\"open-remote fa fa-external-link icon\" title=\"Open Remote\"></a>\n\t            return _react2['default'].createElement(\n\t                'div',\n\t                { className: 'video-controls' },\n\t                _react2['default'].createElement('a', { className: playClassName, title: 'Play', onClick: this.playPause.bind(this) }),\n\t                _react2['default'].createElement('input', { type: 'range', className: 'seek-bar', value: this.props.position, onChange: this.positionChange.bind(this), ref: 'seekBar' }),\n\t                _react2['default'].createElement('a', { className: muteClassName, title: 'Mute', onClick: this.mute.bind(this) }),\n\t                _react2['default'].createElement(\n\t                    'span',\n\t                    { className: 'brand' },\n\t                    this.props.brand\n\t                ),\n\t                _react2['default'].createElement(\n\t                    'span',\n\t                    { className: 'info' },\n\t                    this.props.title\n\t                ),\n\t                _react2['default'].createElement('span', { className: 'timingInfo' }),\n\t                _react2['default'].createElement('a', { className: 'full-screen fa fa-expand icon rfloat', title: 'Full Screen', onClick: this.fullScreen.bind(this) }),\n\t                _react2['default'].createElement('a', { className: 'select-local-file fa fa-folder-open icon rfloat', title: 'Select File', onClick: this.selectLocalFile.bind(this) })\n\t            );\n\t        }\n\t    }, {\n\t        key: 'playPause',\n\t        value: function playPause() {\n\t            this.props.onPlayPause();\n\t        }\n\t    }, {\n\t        key: 'mute',\n\t        value: function mute() {\n\t            this.props.onMute();\n\t        }\n\t    }, {\n\t        key: 'fullScreen',\n\t        value: function fullScreen() {\n\t            this.props.onFullScreen();\n\t        }\n\t    }, {\n\t        key: 'positionChange',\n\t        value: function positionChange() {\n\t            this.props.onPositionChange(+this.refs.seekBar.value);\n\t        }\n\t    }, {\n\t        key: 'selectLocalFile',\n\t        value: function selectLocalFile() {\n\t            var _this = this;\n\t\n\t            (0, _helpersSelectLocalVideo2['default'])().then(function (videoFile) {\n\t                _this.props.onLocalVideoSelected(videoFile);\n\t            })['catch'](function (error) {\n\t                console.error(error);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return Controls;\n\t})(_react2['default'].Component);\n\t\n\tControls.propTypes = {\n\t    isPlaying: _react.PropTypes.bool,\n\t    onPlayPause: _react.PropTypes.func,\n\t    isMute: _react.PropTypes.bool,\n\t    onMute: _react.PropTypes.func,\n\t    isFullscreen: _react.PropTypes.bool,\n\t    onFullScreen: _react.PropTypes.func,\n\t    position: _react.PropTypes.number,\n\t    onPositionChange: _react.PropTypes.func,\n\t    onLocalVideoSelected: _react.PropTypes.func,\n\t\n\t    brand: _react.PropTypes.string,\n\t    title: _react.PropTypes.string\n\t};\n\t\n\tControls.defaultProps = {\n\t    isPlaying: false,\n\t    onPlayPause: noop,\n\t    isMute: false,\n\t    onMute: noop,\n\t    isFullscreen: false,\n\t    onFullScreen: noop,\n\t    position: 0,\n\t    onPositionChange: noop,\n\t    onLocalVideoSelected: noop,\n\t    brand: '',\n\t    title: ''\n\t};\n\t\n\texports['default'] = Controls;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _helpersGetVrDevices = __webpack_require__(7);\n\t\n\tvar _helpersGetVrDevices2 = _interopRequireDefault(_helpersGetVrDevices);\n\t\n\tvar _helpersPhonevr = __webpack_require__(10);\n\t\n\tvar _helpersPhonevr2 = _interopRequireDefault(_helpersPhonevr);\n\t\n\tvar _webgl = __webpack_require__(12);\n\t\n\tvar _webgl2 = _interopRequireDefault(_webgl);\n\t\n\tvar _helpersManualControls = __webpack_require__(9);\n\t\n\tvar _helpersManualControls2 = _interopRequireDefault(_helpersManualControls);\n\t\n\tvar _helpersGoFullScreen = __webpack_require__(8);\n\t\n\tvar _helpersGoFullScreen2 = _interopRequireDefault(_helpersGoFullScreen);\n\t\n\tvar noop = function noop() {};\n\t\n\tvar Video = (function (_React$Component) {\n\t    _inherits(Video, _React$Component);\n\t\n\t    function Video(props) {\n\t        _classCallCheck(this, Video);\n\t\n\t        _get(Object.getPrototypeOf(Video.prototype), 'constructor', this).call(this, props);\n\t\n\t        this.state = {\n\t            webGl: null,\n\t            devices: null,\n\t            needReload: false\n\t        };\n\t    }\n\t\n\t    _createClass(Video, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            return _react2['default'].createElement(\n\t                'div',\n\t                null,\n\t                _react2['default'].createElement(\n\t                    'canvas',\n\t                    { className: 'glcanvas', ref: 'canvas' },\n\t                    'Your browser doesn\\'t appear to support the HTML5 ',\n\t                    _react2['default'].createElement(\n\t                        'code',\n\t                        null,\n\t                        '<canvas>'\n\t                    ),\n\t                    ' element.'\n\t                ),\n\t                _react2['default'].createElement(\n\t                    'video',\n\t                    { preload: 'false', className: 'video', loop: 'true', 'webkit-playsinline': true, ref: 'video', style: { height: 200 } },\n\t                    this.props.sources.map(function (s) {\n\t                        return _react2['default'].createElement('source', { src: s.url, type: s.type, key: s.url });\n\t                    })\n\t                )\n\t            );\n\t        }\n\t    }, {\n\t        key: 'componentWillMount',\n\t        value: function componentWillMount() {}\n\t    }, {\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            var _this = this;\n\t\n\t            var devices = undefined;\n\t            var phone = new _helpersPhonevr2['default']();\n\t\n\t            (0, _helpersGetVrDevices2['default'])().then(function (devs) {\n\t                console.log('devices: ', devs);\n\t                devices = devs;\n\t                _this.setState({ devices: devices });\n\t            }).then(function () {\n\t                return (0, _webgl2['default'])(devices, phone, _this.refs.video, _this.refs.canvas);\n\t            }).then(function (gl) {\n\t                _this.setState({ webGl: gl });\n\t                (0, _helpersManualControls2['default'])(_this.props.keys, function (rotation, sign) {\n\t                    gl.rotate(rotation, sign);\n\t                });\n\t            });\n\t\n\t            var video = this.refs.video;\n\t\n\t            video.addEventListener('timeupdate', function () {\n\t                if (!video.paused) {\n\t                    if (video.duration > 0) {\n\t                        var value = video.currentTime / video.duration * 100;\n\t                        _this.props.onPositionChange(value);\n\t                    } else {\n\t                        _this.props.onPositionChange(0);\n\t                    }\n\t                }\n\t            });\n\t\n\t            document.addEventListener('fullscreenchange', function (event) {\n\t                if (this.props.isFullscreen !== document.fullscreenEnabled && document.fullScreenElement === this.refs.canvas) {\n\t                    this.props.onFullscreen(document.fullscreenEnabled);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'componentWillReceiveProps',\n\t        value: function componentWillReceiveProps(newProps) {\n\t            if (this.props.sources != newProps.sources) {\n\t                this.updateSources();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'componentDidUpdate',\n\t        value: function componentDidUpdate() {\n\t            if (this.state.needReload) {\n\t                console.log('Reloading video');\n\t                var video = this.refs.video;\n\t                var webGl = this.state.webGl;\n\t                video.load();\n\t                webGl.draw();\n\t                this.setState({ needReload: false });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'componentWillUnmount',\n\t        value: function componentWillUnmount() {\n\t            var webGl = this.state.webGl;\n\t            if (webGl) {\n\t                webGl.stop();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'playPause',\n\t        value: function playPause() {\n\t            var video = this.refs.video;\n\t            var webGl = this.state.webGl;\n\t            if (video.paused) {\n\t                video.play();\n\t                webGl.draw();\n\t            } else {\n\t                video.pause();\n\t            }\n\t            this.props.onPlayPause(!video.paused);\n\t        }\n\t    }, {\n\t        key: 'toggleMute',\n\t        value: function toggleMute() {\n\t            var video = this.refs.video;\n\t            video.muted = !video.muted;\n\t            this.props.onMute(video.muted);\n\t        }\n\t    }, {\n\t        key: 'goFullScreen',\n\t        value: function goFullScreen() {\n\t            var canvas = this.refs.canvas;\n\t            var devices = this.state.devices;\n\t            (0, _helpersGoFullScreen2['default'])(canvas, devices, true);\n\t        }\n\t    }, {\n\t        key: 'setPosition',\n\t        value: function setPosition(percentage) {\n\t            var video = this.refs.video;\n\t            var time = video.duration * percentage / 100;\n\t            video.currentTime = time;\n\t            this.props.onPositionChange(percentage);\n\t        }\n\t    }, {\n\t        key: 'zeroSensor',\n\t        value: function zeroSensor() {\n\t            var devices = this.state.devices;\n\t            if (devices.sensor) {\n\t                devices.sensor.zeroSensor();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'updateSources',\n\t        value: function updateSources() {\n\t            var video = this.refs.video;\n\t            var webGl = this.state.webGl;\n\t            video.pause();\n\t            webGl.stop();\n\t            this.props.onPlayPause(!video.paused);\n\t            this.props.onPositionChange(0);\n\t            this.setState({ needReload: true });\n\t        }\n\t    }]);\n\t\n\t    return Video;\n\t})(_react2['default'].Component);\n\t\n\tVideo.propTypes = {\n\t    sources: _react.PropTypes.array.isRequired,\n\t    onFullscreen: _react.PropTypes.func,\n\t    onPositionChange: _react.PropTypes.func,\n\t    onPlayPause: _react.PropTypes.func,\n\t    onMute: _react.PropTypes.func,\n\t    keys: _react.PropTypes.object\n\t};\n\t\n\tVideo.defaultProps = {\n\t    sources: [],\n\t    onFullscreen: noop,\n\t    onPositionChange: noop,\n\t    onPlayPause: noop,\n\t    onMute: noop,\n\t    keys: {\n\t        left: 'A',\n\t        right: 'D',\n\t        up: 'W',\n\t        down: 'S',\n\t        rotateLeft: 'Q',\n\t        rotateRight: 'E',\n\t        fullScreen: 'F',\n\t        zeroSensor: 'Z',\n\t        playPause: ' '\n\t    }\n\t};\n\t\n\texports['default'] = Video;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\t__webpack_require__(26);\n\t\n\tvar _Controls = __webpack_require__(22);\n\t\n\tvar _Controls2 = _interopRequireDefault(_Controls);\n\t\n\tvar _Video = __webpack_require__(23);\n\t\n\tvar _Video2 = _interopRequireDefault(_Video);\n\t\n\tvar VrPlayer = (function (_React$Component) {\n\t    _inherits(VrPlayer, _React$Component);\n\t\n\t    function VrPlayer(props) {\n\t        _classCallCheck(this, VrPlayer);\n\t\n\t        _get(Object.getPrototypeOf(VrPlayer.prototype), 'constructor', this).call(this, props);\n\t        this.state = {\n\t            isPlaying: false,\n\t            isMute: false,\n\t            isFullscreen: false,\n\t            position: 0,\n\t            sources: []\n\t        };\n\t    }\n\t\n\t    _createClass(VrPlayer, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            var _this = this;\n\t\n\t            return _react2['default'].createElement(\n\t                'div',\n\t                { className: 'VrPlayer' },\n\t                _react2['default'].createElement(_Video2['default'], { ref: 'video',\n\t                    sources: this.state.sources,\n\t                    onFullScreen: this.fullScreen.bind(this),\n\t                    onPositionChange: function (p) {\n\t                        return _this.setState({ position: p });\n\t                    },\n\t                    onPlayPause: this.playPause.bind(this),\n\t                    onMute: this.mute.bind(this),\n\t                    keys: this.props.keys }),\n\t                _react2['default'].createElement(_Controls2['default'], { isPlaying: this.state.isPlaying,\n\t                    onPlayPause: this.togglePlayPause.bind(this),\n\t                    isMute: this.state.isMute,\n\t                    onMute: this.toggleMute.bind(this),\n\t                    isFullscreen: this.state.isFullscreen,\n\t                    onFullScreen: this.toggleFullScreen.bind(this),\n\t                    position: this.state.position,\n\t                    onPositionChange: this.changePosition.bind(this),\n\t                    onLocalVideoSelected: this.localVideoSelected.bind(this),\n\t                    brand: this.props.brand,\n\t                    title: this.props.title\n\t                })\n\t            );\n\t        }\n\t    }, {\n\t        key: 'playPause',\n\t        value: function playPause(playing) {\n\t            this.setState({ isPlaying: playing });\n\t        }\n\t    }, {\n\t        key: 'togglePlayPause',\n\t        value: function togglePlayPause() {\n\t            this.refs.video.playPause();\n\t        }\n\t    }, {\n\t        key: 'mute',\n\t        value: function mute(muted) {\n\t            this.setState({ isMute: muted });\n\t        }\n\t    }, {\n\t        key: 'toggleMute',\n\t        value: function toggleMute() {\n\t            this.refs.video.toggleMute();\n\t        }\n\t    }, {\n\t        key: 'fullScreen',\n\t        value: function fullScreen(isFullscreen) {\n\t            this.setState({ isFullscreen: isFullscreen });\n\t        }\n\t    }, {\n\t        key: 'toggleFullScreen',\n\t        value: function toggleFullScreen() {\n\t            this.refs.video.goFullScreen();\n\t        }\n\t    }, {\n\t        key: 'changePosition',\n\t        value: function changePosition(percentage) {\n\t            this.refs.video.setPosition(percentage);\n\t        }\n\t    }, {\n\t        key: 'localVideoSelected',\n\t        value: function localVideoSelected(videoSource) {\n\t            this.setState({ sources: [videoSource] });\n\t        }\n\t    }, {\n\t        key: 'zeroSensor',\n\t        value: function zeroSensor() {\n\t            this.refs.video.zeroSensor();\n\t        }\n\t    }, {\n\t        key: 'componentWillMount',\n\t        value: function componentWillMount() {\n\t            this.setState({ sources: this.props.sources });\n\t        }\n\t    }, {\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            var _this2 = this;\n\t\n\t            var keys = this.props.keys;\n\t            if (window) {\n\t                window.addEventListener('keypress', function (event) {\n\t                    switch (String.fromCharCode(event.charCode)) {\n\t                        case keys.fullScreen.toLowerCase():\n\t                            _this2.toggleFullScreen();\n\t                            break;\n\t                        case keys.zeroSensor.toLowerCase():\n\t                            _this2.zeroSensor();\n\t                            break;\n\t                        case keys.playPause.toLowerCase():\n\t                            _this2.togglePlayPause();\n\t                            break;\n\t                    }\n\t                }, true);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'componentWillReceiveProps',\n\t        value: function componentWillReceiveProps(newProps) {\n\t            if (this.props.sources !== newProps.sources) {\n\t                this.setState({ sources: newProps.sources });\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return VrPlayer;\n\t})(_react2['default'].Component);\n\t\n\tVrPlayer.propTypes = {\n\t    sources: _react.PropTypes.array.isRequired,\n\t    title: _react.PropTypes.string,\n\t    brand: _react.PropTypes.string,\n\t    keys: _react.PropTypes.object\n\t};\n\t\n\tVrPlayer.defaultProps = {\n\t    sources: [],\n\t    title: '',\n\t    brand: '',\n\t    keys: {\n\t        left: 'A',\n\t        right: 'D',\n\t        up: 'W',\n\t        down: 'S',\n\t        rotateLeft: 'Q',\n\t        rotateRight: 'E',\n\t        fullScreen: 'F',\n\t        zeroSensor: 'Z',\n\t        playPause: ' '\n\t    }\n\t};\n\t\n\texports['default'] = VrPlayer;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(15);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(25)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./VrPlayer.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./VrPlayer.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"varying mediump vec3 vDirection;\\nuniform mediump float eye;\\nuniform mediump float projection;\\n\\nuniform sampler2D uSampler;\\n\\n#define PI 3.1415926535897932384626433832795\\n\\nmediump vec4 directionToColor(mediump vec3 direction, mediump float eye, mediump float projection) {\\n  mediump float theta = atan(direction.x, -1.0 * direction.z);\\n  mediump float phi = atan(direction.y, length(direction.xz));\\n\\n  if (abs(direction.x) < 1e-4 * abs(direction.z))\\n    theta = 0.5*PI * (1.0 - sign(-1.0 * direction.z));\\n  if (abs(direction.y) < 1e-4 * length(direction.xz))\\n    phi = 0.0;\\n\\n  if (projection == 0.) {\\n    return texture2D(uSampler, vec2(mod(theta / (2.0*PI), 1.0), phi / PI + 0.5));\\n  } else {\\n    eye = 1. - eye;\\n    return texture2D(uSampler, vec2(mod(theta / (2.0*PI), 1.0), ((phi / PI + 0.5) + eye)/ 2.));\\n  }\\n}\\n\\nvoid main(void) {\\n  gl_FragColor = directionToColor(vDirection, eye, projection);\\n}\\n\"\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"attribute mediump vec2 aVertexPosition;\\n\\nuniform mediump mat4 proj_inv;\\n\\nvarying mediump vec3 vDirection;\\n\\nvoid main(void) {\\n  gl_Position = vec4(aVertexPosition, 1.0, 1.0);\\n  mediump vec4 projective_direction = proj_inv * gl_Position;\\n  vDirection = projective_direction.xyz / projective_direction.w;\\n}\\n\"\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-vr-player.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1ed5668301b5f327c38a\n **/","import VrPlayer from './VrPlayer';\nexport default VrPlayer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/index.js\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * @class Common utilities\n * @name glMatrix\n */\nvar glMatrix = {};\n\n// Constants\nglMatrix.EPSILON = 0.000001;\nglMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nglMatrix.RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nglMatrix.setMatrixArrayType = function(type) {\n    GLMAT_ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n* Convert Degree To Radian\n*\n* @param {Number} Angle in Degrees\n*/\nglMatrix.toRadian = function(a){\n     return a * degree;\n}\n\nmodule.exports = glMatrix;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/common.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.3.0\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\nexports.glMatrix = require(\"./gl-matrix/common.js\");\nexports.mat2 = require(\"./gl-matrix/mat2.js\");\nexports.mat2d = require(\"./gl-matrix/mat2d.js\");\nexports.mat3 = require(\"./gl-matrix/mat3.js\");\nexports.mat4 = require(\"./gl-matrix/mat4.js\");\nexports.quat = require(\"./gl-matrix/quat.js\");\nexports.vec2 = require(\"./gl-matrix/vec2.js\");\nexports.vec3 = require(\"./gl-matrix/vec3.js\");\nexports.vec4 = require(\"./gl-matrix/vec4.js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 3\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3x3 Matrix\n * @name mat3\n */\nvar mat3 = {};\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nmat3.fromMat4 = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n};\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nmat3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(9);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nmat3.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b01 = a22 * a11 - a12 * a21,\n        b11 = -a22 * a10 + a12 * a20,\n        b21 = a21 * a10 - a11 * a20,\n\n        // Calculate the determinant\n        det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nmat3.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    out[0] = (a11 * a22 - a12 * a21);\n    out[1] = (a02 * a21 - a01 * a22);\n    out[2] = (a01 * a12 - a02 * a11);\n    out[3] = (a12 * a20 - a10 * a22);\n    out[4] = (a00 * a22 - a02 * a20);\n    out[5] = (a02 * a10 - a00 * a12);\n    out[6] = (a10 * a21 - a11 * a20);\n    out[7] = (a01 * a20 - a00 * a21);\n    out[8] = (a00 * a11 - a01 * a10);\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nmat3.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nmat3.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        b00 = b[0], b01 = b[1], b02 = b[2],\n        b10 = b[3], b11 = b[4], b12 = b[5],\n        b20 = b[6], b21 = b[7], b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n};\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nmat3.mul = mat3.multiply;\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nmat3.translate = function(out, a, v) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n        x = v[0], y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n};\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.rotate = function (out, a, rad) {\n    var a00 = a[0], a01 = a[1], a02 = a[2],\n        a10 = a[3], a11 = a[4], a12 = a[5],\n        a20 = a[6], a21 = a[7], a22 = a[8],\n\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nmat3.scale = function(out, a, v) {\n    var x = v[0], y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nmat3.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = v[0];\n    out[7] = v[1];\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nmat3.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n\n    out[0] = c;\n    out[1] = s;\n    out[2] = 0;\n\n    out[3] = -s;\n    out[4] = c;\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nmat3.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n\n    out[3] = 0;\n    out[4] = v[1];\n    out[5] = 0;\n\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nmat3.fromMat2d = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = 0;\n\n    out[3] = a[2];\n    out[4] = a[3];\n    out[5] = 0;\n\n    out[6] = a[4];\n    out[7] = a[5];\n    out[8] = 1;\n    return out;\n};\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nmat3.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n};\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nmat3.normalFromMat4 = function (out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat3.str = function (a) {\n    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + \n                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat3.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))\n};\n\n\nmodule.exports = mat3;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat3.js\n ** module id = 4\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 3 Dimensional Vector\n * @name vec3\n */\nvar vec3 = {};\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nvec3.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\nvec3.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nvec3.fromValues = function(x, y, z) {\n    var out = new glMatrix.ARRAY_TYPE(3);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nvec3.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n};\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nvec3.set = function(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvec3.sub = vec3.subtract;\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvec3.mul = vec3.multiply;\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n};\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvec3.div = vec3.divide;\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    return out;\n};\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nvec3.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n};\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nvec3.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nvec3.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvec3.dist = vec3.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec3.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvec3.sqrDist = vec3.squaredDistance;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec3.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return Math.sqrt(x*x + y*y + z*z);\n};\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvec3.len = vec3.length;\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec3.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    return x*x + y*y + z*z;\n};\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvec3.sqrLen = vec3.squaredLength;\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nvec3.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nvec3.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nvec3.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2];\n    var len = x*x + y*y + z*z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n        out[2] = a[2] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec3.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nvec3.cross = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2],\n        bx = b[0], by = b[1], bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n};\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.hermite = function (out, a, b, c, d, t) {\n  var factorTimes2 = t * t,\n      factor1 = factorTimes2 * (2 * t - 3) + 1,\n      factor2 = factorTimes2 * (t - 2) + t,\n      factor3 = factorTimes2 * (t - 1),\n      factor4 = factorTimes2 * (3 - 2 * t);\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nvec3.bezier = function (out, a, b, c, d, t) {\n  var inverseFactor = 1 - t,\n      inverseFactorTimesTwo = inverseFactor * inverseFactor,\n      factorTimes2 = t * t,\n      factor1 = inverseFactorTimesTwo * inverseFactor,\n      factor2 = 3 * t * inverseFactorTimesTwo,\n      factor3 = 3 * factorTimes2 * inverseFactor,\n      factor4 = factorTimes2 * t;\n  \n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  \n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nvec3.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    var z = (glMatrix.RANDOM() * 2.0) - 1.0;\n    var zScale = Math.sqrt(1.0-z*z) * scale;\n\n    out[0] = Math.cos(r) * zScale;\n    out[1] = Math.sin(r) * zScale;\n    out[2] = z * scale;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2],\n        w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n};\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nvec3.transformMat3 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n};\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nvec3.transformQuat = function(out, a, q) {\n    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return out;\n};\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateX = function(out, a, b, c){\n   var p = [], r=[];\n\t  //Translate point to the origin\n\t  p[0] = a[0] - b[0];\n\t  p[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n\n\t  //perform rotation\n\t  r[0] = p[0];\n\t  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);\n\t  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);\n\n\t  //translate to correct position\n\t  out[0] = r[0] + b[0];\n\t  out[1] = r[1] + b[1];\n\t  out[2] = r[2] + b[2];\n\n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateY = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);\n  \tr[1] = p[1];\n  \tr[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nvec3.rotateZ = function(out, a, b, c){\n  \tvar p = [], r=[];\n  \t//Translate point to the origin\n  \tp[0] = a[0] - b[0];\n  \tp[1] = a[1] - b[1];\n  \tp[2] = a[2] - b[2];\n  \n  \t//perform rotation\n  \tr[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);\n  \tr[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);\n  \tr[2] = p[2];\n  \n  \t//translate to correct position\n  \tout[0] = r[0] + b[0];\n  \tout[1] = r[1] + b[1];\n  \tout[2] = r[2] + b[2];\n  \n  \treturn out;\n};\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec3.forEach = (function() {\n    var vec = vec3.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 3;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nvec3.angle = function(a, b) {\n   \n    var tempA = vec3.fromValues(a[0], a[1], a[2]);\n    var tempB = vec3.fromValues(b[0], b[1], b[2]);\n \n    vec3.normalize(tempA, tempA);\n    vec3.normalize(tempB, tempB);\n \n    var cosine = vec3.dot(tempA, tempB);\n\n    if(cosine > 1.0){\n        return 0;\n    } else {\n        return Math.acos(cosine);\n    }     \n};\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec3.str = function (a) {\n    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n};\n\nmodule.exports = vec3;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec3.js\n ** module id = 5\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4 Dimensional Vector\n * @name vec4\n */\nvar vec4 = {};\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nvec4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\nvec4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nvec4.fromValues = function(x, y, z, w) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nvec4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nvec4.set = function(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n};\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvec4.sub = vec4.subtract;\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    out[3] = a[3] * b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvec4.mul = vec4.multiply;\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    out[3] = a[3] / b[3];\n    return out;\n};\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvec4.div = vec4.divide;\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    out[2] = Math.min(a[2], b[2]);\n    out[3] = Math.min(a[3], b[3]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nvec4.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    out[2] = Math.max(a[2], b[2]);\n    out[3] = Math.max(a[3], b[3]);\n    return out;\n};\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nvec4.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n};\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nvec4.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    out[2] = a[2] + (b[2] * scale);\n    out[3] = a[3] + (b[3] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nvec4.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvec4.dist = vec4.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec4.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1],\n        z = b[2] - a[2],\n        w = b[3] - a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvec4.sqrDist = vec4.squaredDistance;\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec4.length = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return Math.sqrt(x*x + y*y + z*z + w*w);\n};\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvec4.len = vec4.length;\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec4.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    return x*x + y*y + z*z + w*w;\n};\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvec4.sqrLen = vec4.squaredLength;\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nvec4.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = -a[3];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nvec4.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nvec4.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1],\n        z = a[2],\n        w = a[3];\n    var len = x*x + y*y + z*z + w*w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n        out[0] = x * len;\n        out[1] = y * len;\n        out[2] = z * len;\n        out[3] = w * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec4.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nvec4.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nvec4.random = function (out, scale) {\n    scale = scale || 1.0;\n\n    //TODO: This is a pretty awful way of doing this. Find something better.\n    out[0] = glMatrix.RANDOM();\n    out[1] = glMatrix.RANDOM();\n    out[2] = glMatrix.RANDOM();\n    out[3] = glMatrix.RANDOM();\n    vec4.normalize(out, out);\n    vec4.scale(out, out, scale);\n    return out;\n};\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nvec4.transformMat4 = function(out, a, m) {\n    var x = a[0], y = a[1], z = a[2], w = a[3];\n    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n    return out;\n};\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nvec4.transformQuat = function(out, a, q) {\n    var x = a[0], y = a[1], z = a[2],\n        qx = q[0], qy = q[1], qz = q[2], qw = q[3],\n\n        // calculate quat * vec\n        ix = qw * x + qy * z - qz * y,\n        iy = qw * y + qz * x - qx * z,\n        iz = qw * z + qx * y - qy * x,\n        iw = -qx * x - qy * y - qz * z;\n\n    // calculate result * inverse quat\n    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec4.forEach = (function() {\n    var vec = vec4.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 4;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec4.str = function (a) {\n    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\nmodule.exports = vec4;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec4.js\n ** module id = 6\n ** module chunks = 0\n **/","export default function getVr() {\n    if (navigator.getVRDevices) {\n        return navigator.getVRDevices()\n            .then(getHmdAndSensor);\n    } else {\n        return Promise.resolve({\n            hmd: null,\n            sensor: null\n        });\n    }\n}\n\nfunction getHmdAndSensor(vrDevices) {\n\n    var hmd = null;\n    var sensor = null;\n\n    for (var i = 0; i < vrDevices.length; ++i) {\n        if (vrDevices[i] instanceof HMDVRDevice) {\n            hmd = vrDevices[i];\n            break;\n        }\n    }\n\n    if (!hmd) {\n        return Promise.resolve({\n            hmd: null,\n            sensor: null\n        });\n    }\n\n    // Then, find that HMD's position sensor\n    for (i = 0; i < vrDevices.length; ++i) {\n        if (vrDevices[i] instanceof PositionSensorVRDevice &&\n            vrDevices[i].hardwareUnitId === hmd.hardwareUnitId) {\n            sensor = vrDevices[i];\n            break;\n        }\n    }\n\n    if (!sensor) {\n        return Promise.reject('Found an HMD, but didn\\'t find its orientation sensor?');\n    }\n\n    return {\n        hmd: hmd,\n        sensor: sensor\n    };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/helpers/get-vr-devices.js\n **/","export default function goFullScreen(canvas, devices, fullScreen) {\n    if (fullScreen) {\n        if (canvas.mozRequestFullScreen) {\n            canvas.mozRequestFullScreen({\n                vrDisplay: devices.hmd\n            }); // Firefox\n        } else if (canvas.webkitRequestFullscreen) {\n            canvas.webkitRequestFullscreen({\n                vrDisplay: devices.hmd\n            }); // Chrome and Safari\n        } else if (canvas.requestFullScreen) {\n            canvas.requestFullscreen();\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/helpers/goFullScreen.js\n **/","export default function initialiseManualControls(keys, onRotate) {\n    const manualControls = {};\n    manualControls[keys.left.toLowerCase()] = {\n        index: 1,\n        sign: 1,\n        active: 0\n    };\n    manualControls[keys.right.toLowerCase()] = {\n        index: 1,\n        sign: -1,\n        active: 0\n    };\n    manualControls[keys.up.toLowerCase()] = {\n        index: 0,\n        sign: 1,\n        active: 0\n    };\n    manualControls[keys.down.toLowerCase()] = {\n        index: 0,\n        sign: -1,\n        active: 0\n    };\n    manualControls[keys.rotateLeft.toLowerCase()] = {\n        index: 2,\n        sign: 1,\n        active: 0\n    };\n    manualControls[keys.rotateRight.toLowerCase()] = {\n        index: 2,\n        sign: -1,\n        active: 0\n    };\n\n    enableKeyControls();\n\n    function enableKeyControls() {\n        function key(event, sign) {\n            var control = manualControls[String.fromCharCode(event.keyCode).toLowerCase()];\n            if (!control) {\n                return;\n            }\n            if (sign === 1 && control.active || sign === -1 && !control.active) {\n                return;\n            }\n            control.active = (sign === 1);\n            onRotate(control.index, sign * control.sign);\n            //webGl.rotate(control.index, sign * control.sign);\n        }\n\n        document.addEventListener('keydown', event => { key(event, 1); }, false);\n        document.addEventListener('keyup', event => { key(event, -1); }, false);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/helpers/manual-controls.js\n **/","var matrix = require('gl-matrix');\n\n// It seems to be impossible to synchronously detect whether we have an orientation sensor.\n// Even Chromium on the desktop has a 'deviceorientation' event, and it will fire once with\n// all nulls.\n\nmodule.exports = PhoneVR;\n\nfunction PhoneVR() {\n    this.deviceAlpha = null;\n    this.deviceGamma = null;\n    this.deviceBeta = null;\n\n    if (window){\n        window.addEventListener('deviceorientation', function (orientation) {\n            this.deviceAlpha = orientation.alpha;\n            this.deviceGamma = orientation.gamma;\n            this.deviceBeta = orientation.beta;\n        }.bind(this));\n    }\n}\n\nPhoneVR.prototype.orientationIsAvailable = function () {\n    return this.deviceAlpha !== null;\n};\n\nPhoneVR.prototype.rotationQuat = function () {\n    if (!this.orientationIsAvailable()) {\n        return matrix.quat.create(1, 0, 0, 0);\n    }\n\n    var degtorad = Math.PI / 180; // Degree-to-Radian conversion\n    var z = this.deviceAlpha * degtorad / 2;\n    var x = this.deviceBeta * degtorad / 2;\n    var y = this.deviceGamma * degtorad / 2;\n    var cX = Math.cos(x);\n    var cY = Math.cos(y);\n    var cZ = Math.cos(z);\n    var sX = Math.sin(x);\n    var sY = Math.sin(y);\n    var sZ = Math.sin(z);\n\n    // ZXY quaternion construction.\n    var w = cX * cY * cZ - sX * sY * sZ;\n    x = sX * cY * cZ - cX * sY * sZ;\n    y = cX * sY * cZ + sX * cY * sZ;\n    z = cX * cY * sZ + sX * sY * cZ;\n\n    var deviceQuaternion = matrix.quat.fromValues(x, y, z, w);\n\n    // Correct for the screen orientation.\n    var screenOrientation = (getScreenOrientation() * degtorad) / 2;\n    var screenTransform = [0, 0, -Math.sin(screenOrientation), Math.cos(screenOrientation)];\n\n    var deviceRotation = matrix.quat.create();\n    matrix.quat.multiply(deviceRotation, deviceQuaternion, screenTransform);\n\n    // deviceRotation is the quaternion encoding of the transformation\n    // from camera coordinates to world coordinates.  The problem is that\n    // our shader uses conventional OpenGL coordinates\n    // (+x = right, +y = up, +z = backward), but the DeviceOrientation\n    // spec uses different coordinates (+x = East, +y = North, +z = up).\n    // To fix the mismatch, we need to fix this.  We'll arbitrarily choose\n    // North to correspond to -z (the default camera direction).\n    var r22 = Math.sqrt(0.5);\n    matrix.quat.multiply(deviceRotation, matrix.quat.fromValues(-r22, 0, 0, r22), deviceRotation);\n\n    return deviceRotation;\n};\n\nfunction getScreenOrientation() {\n    if (!window){\n        return 0;\n    }\n    switch (window.screen.orientation || window.screen.mozOrientation) {\n        case 'landscape-primary':\n            return 90;\n        case 'landscape-secondary':\n            return -90;\n        case 'portrait-secondary':\n            return 180;\n        case 'portrait-primary':\n            return 0;\n    }\n    if (window.orientation !== undefined) {\n        return window.orientation;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/helpers/phonevr.js\n **/","export default function selectLocalVideo() {\n    return new Promise((resolve, reject) => {\n        if (!document) {\n            return reject('This is not a web browser');\n        }\n\n        var input = document.createElement('input');\n        input.type = 'file';\n        input.accept = 'video/*';\n\n        input.addEventListener('change', function () {\n            var files = input.files;\n            if (!files.length) {\n                // The user didn't select anything.  Sad.\n                console.log('no selection');\n                return reject('File selection canceled');\n            }\n\n            var extension = files[0].name.split('.').pop();\n            var fileUrl = URL.createObjectURL(files[0]);\n            console.log('Loading local file ', files[0].name, ' at URL ', fileUrl, ' with extension ', extension);\n            resolve({\n                url: fileUrl,\n                type: 'video/'+extension\n            });\n        });\n\n        input.click();\n    });\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/helpers/select-local-video.js\n **/","/* jshint -W069 */\n\nvar glMatrix = require('gl-matrix');\nvar settings = require('./settings');\nvar Shader = require('./shader');\nif (__DEVELOPMENT__) {\n    var Stats = require('stats.js');\n}\n\nmodule.exports = function (vrDevice, phoneDevice, video, canvas, width) {\n    var positionsBuffer, verticesIndexBuffer, texture;\n    var shader;\n    var gl;\n    var stats;\n\n    var manualRotateRate = new Float32Array([0, 0, 0]);\n    var frameId;\n    var frame, previousFrame;\n\n    return new Promise(function (resolve, reject) {\n        gl = initWebGL(canvas);\n        if (gl) {\n            gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            gl.clearDepth(1.0);\n            gl.disable(gl.DEPTH_TEST);\n            initStats();\n            initBuffers(gl);\n            initTextures(gl);\n            resolve({\n                draw: function () {\n                    if (frameId) {\n                        cancelAnimationFrame(frameId);\n                    }\n                    frameId = requestAnimationFrame(buildDrawScene(video, canvas, gl, width));\n                    return frameId;\n                },\n                stop: function () {\n                    if (frameId) {\n                        cancelAnimationFrame(frameId);\n                        frameId = null;\n                    }\n                },\n                rotate: function (axis, value) {\n                    manualRotateRate[axis] += value;\n                }\n            });\n        } else {\n            reject('Unable to initialize WebGL. Your browser may not support it.');\n        }\n    });\n\n    function initStats() {\n        if (Stats) {\n            stats = new Stats();\n            stats.setMode(0);\n            stats.domElement.style.position = 'absolute';\n            stats.domElement.style.right = '50px';\n            stats.domElement.style.bottom = '50px';\n            canvas.ownerDocument.body.appendChild(stats.domElement);\n        }\n    }\n\n    function initWebGL() {\n        var gl = null;\n        try {\n            gl = canvas.getContext(\"webgl\") || canvas.getContext(\"experimental-webgl\");\n        } catch (e) {}\n\n        if (!gl) {\n            return null;\n        }\n\n        shader = new Shader({\n            fragmentShaderName: 'shader-fs',\n            vertexShaderName: 'shader-vs',\n            attributes: ['aVertexPosition'],\n            uniforms: ['uSampler', 'eye', 'projection', 'proj_inv'],\n        }, gl);\n\n        return gl;\n    }\n\n    function initBuffers() {\n        positionsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionsBuffer);\n        var positions = [\n            -1.0, -1.0,\n            1.0, -1.0,\n            1.0, 1.0,\n            -1.0, 1.0,\n        ];\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n        verticesIndexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, verticesIndexBuffer);\n        var vertexIndices = [\n            0, 1, 2, 0, 2, 3,\n        ];\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,\n            new Uint16Array(vertexIndices), gl.STATIC_DRAW);\n    }\n\n    function initTextures() {\n        texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n\n    function updateTexture() {\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB,\n            gl.UNSIGNED_BYTE, video);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n\n    /**\n     * Drawing the scene\n     */\n    function drawOneEye(eye, projectionMatrix) {\n        gl.useProgram(shader.program);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionsBuffer);\n        gl.vertexAttribPointer(shader.attributes['aVertexPosition'], 2, gl.FLOAT, false, 0, 0);\n\n        // Specify the texture to map onto the faces.\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.uniform1i(shader.uniforms['uSampler'], 0);\n\n        gl.uniform1f(shader.uniforms['eye'], eye);\n        gl.uniform1f(shader.uniforms['projection'], settings.projection);\n\n        var rotation = glMatrix.mat4.create();\n        var totalRotation = glMatrix.quat.create();\n\n        if (vrDevice.sensor !== null) {\n            var state = vrDevice.sensor.getState();\n            if (state !== null && state.orientation !== null && typeof state.orientation !== 'undefined' &&\n                state.orientation.x !== 0 &&\n                state.orientation.y !== 0 &&\n                state.orientation.z !== 0 &&\n                state.orientation.w !== 0) {\n                var sensorOrientation = new Float32Array([state.orientation.x, state.orientation.y, state.orientation.z, state.orientation.w]);\n                glMatrix.quat.multiply(totalRotation, settings.manualRotation, sensorOrientation);\n            } else {\n                totalRotation = settings.manualRotation;\n            }\n            glMatrix.mat4.fromQuat(rotation, totalRotation);\n        } else {\n            glMatrix.quat.multiply(totalRotation, settings.manualRotation, phoneDevice.rotationQuat());\n            glMatrix.mat4.fromQuat(rotation, totalRotation);\n        }\n\n        var projectionInverse = glMatrix.mat4.create();\n        glMatrix.mat4.invert(projectionInverse, projectionMatrix);\n        var inv = glMatrix.mat4.create();\n        glMatrix.mat4.multiply(inv, rotation, projectionInverse);\n\n        gl.uniformMatrix4fv(shader.uniforms['proj_inv'], false, inv);\n\n        if (eye === 0) { // left eye\n            gl.viewport(0, 0, canvas.width / 2, canvas.height);\n        } else { // right eye\n            gl.viewport(canvas.width / 2, 0, canvas.width / 2, canvas.height);\n        }\n\n        // Draw\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, verticesIndexBuffer);\n        gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n    }\n\n    function buildDrawScene() {\n        return function drawScene(frameTime) {\n            if (stats) {\n                stats.begin();\n            }\n            frame = frameTime;\n\n            setCanvasSize(gl, vrDevice, canvas, width);\n\n            updateTexture(gl, video);\n\n            if (previousFrame) {\n                // Apply manual controls.\n                var interval = (frame - previousFrame) * 0.001;\n\n                var update = glMatrix.quat.fromValues(manualRotateRate[0] * interval,\n                    manualRotateRate[1] * interval,\n                    manualRotateRate[2] * interval, 1.0);\n                glMatrix.quat.normalize(update, update);\n                glMatrix.quat.multiply(settings.manualRotation, settings.manualRotation, update);\n            }\n\n            var perspectiveMatrix = glMatrix.mat4.create();\n            if (vrDevice.hmd) {\n                var leftParams = vrDevice.hmd.getEyeParameters('left');\n                var rightParams = vrDevice.hmd.getEyeParameters('right');\n                perspectiveMatrix = mat4PerspectiveFromVRFieldOfView(leftParams.recommendedFieldOfView, 0.1, 10);\n                drawOneEye(0, perspectiveMatrix);\n                perspectiveMatrix = mat4PerspectiveFromVRFieldOfView(rightParams.recommendedFieldOfView, 0.1, 10);\n                drawOneEye(1, perspectiveMatrix);\n            } else {\n                var ratio = (canvas.width / 2) / canvas.height;\n                glMatrix.mat4.perspective(perspectiveMatrix, Math.PI / 2, ratio, 0.1, 10);\n                drawOneEye(0, perspectiveMatrix);\n                drawOneEye(1, perspectiveMatrix);\n            }\n\n            if (stats) {\n                stats.end();\n            }\n\n            frameId = requestAnimationFrame(drawScene);\n            previousFrame = frame;\n        };\n    }\n\n    function setCanvasSize() {\n        if (!window){\n            return;\n        }\n        var w = window.innerWidth,\n            h = window.innerHeight;\n\n        if (width) {\n            w = width;\n            h = width / (1980 / 1024);\n        }\n\n        setCustomCanvasSize(w, h);\n    }\n\n    function setCustomCanvasSize(width, height) {\n\n        if (typeof vrDevice.hmd !== 'undefined' && vrDevice.hmd !== null && typeof isFullscreen() !== 'undefined' && isFullscreen()) {\n\n            var rectHalf = vrDevice.hmd.getEyeParameters('right').renderRect;\n            canvas.width = rectHalf.width * 2;\n            canvas.height = rectHalf.height;\n\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        } else {\n            // query the various pixel ratios\n            var devicePixelRatio = window.devicePixelRatio || 1;\n            var backingStoreRatio = gl.webkitBackingStorePixelRatio ||\n                gl.mozBackingStorePixelRatio ||\n                gl.msBackingStorePixelRatio ||\n                gl.oBackingStorePixelRatio ||\n                gl.backingStorePixelRatio || 1;\n            var ratio = devicePixelRatio / backingStoreRatio;\n\n            if (canvas.width !== width * ratio || canvas.height !== height * ratio) {\n                canvas.width = width * ratio;\n                canvas.height = height * ratio;\n\n                canvas.style.width = width + 'px';\n                canvas.style.height = height + 'px';\n            }\n        }\n    }\n\n    function mat4PerspectiveFromVRFieldOfView(fov, zNear, zFar) {\n        var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n        var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n        var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n        var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n\n        var xScale = 2.0 / (leftTan + rightTan);\n        var yScale = 2.0 / (upTan + downTan);\n\n        var out = new Float32Array(16); // Appropriate format to pass to WebGL\n        out[0] = xScale;\n        out[4] = 0.0;\n        out[8] = -((leftTan - rightTan) * xScale * 0.5);\n        out[12] = 0.0;\n\n        out[1] = 0.0;\n        out[5] = yScale;\n        out[9] = ((upTan - downTan) * yScale * 0.5);\n        out[13] = 0.0;\n\n        out[2] = 0.0;\n        out[6] = 0.0;\n        out[10] = zFar / (zNear - zFar);\n        out[14] = (zFar * zNear) / (zNear - zFar);\n\n        out[3] = 0.0;\n        out[7] = 0.0;\n        out[11] = -1.0;\n        out[15] = 0.0;\n\n        return out;\n    }\n\n    function isFullscreen() {\n        return document.fullscreenElement ||\n            document.webkitFullscreenElement ||\n            document.mozFullScreenElement ||\n            document.webkitCurrentFullScreenElement;\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/webgl/index.js\n **/","var gl = require('gl-matrix');\n\nmodule.exports = {\n    projection: 0,\n    manualRotation: gl.quat.create(),\n    videoObjectURL: null\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/webgl/settings.js\n **/","var fragment = require('./fragment.glsl');\nvar vertex = require('./vertex.glsl');\n\nmodule.exports = function Shader(params, gl) {\n    this.params = params;\n    this.fragmentShader = getShader(fragment, 'fragment', gl);\n    this.vertexShader = getShader(vertex, 'vertex', gl);\n\n    this.program = gl.createProgram();\n    gl.attachShader(this.program, this.vertexShader);\n    gl.attachShader(this.program, this.fragmentShader);\n    gl.linkProgram(this.program);\n\n    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n        alert(\"Unable to initialize the shader program: \" + gl.getProgramInfoLog(this.program));\n    }\n\n    gl.useProgram(this.program);\n\n    this.attributes = {};\n    for (var i = 0; i < this.params.attributes.length; i++) {\n        var attributeName = this.params.attributes[i];\n        this.attributes[attributeName] = gl.getAttribLocation(this.program, attributeName);\n        gl.enableVertexAttribArray(this.attributes[attributeName]);\n    }\n\n    this.uniforms = {};\n    for (i = 0; i < this.params.uniforms.length; i++) {\n        var uniformName = this.params.uniforms[i];\n        this.uniforms[uniformName] = gl.getUniformLocation(this.program, uniformName);\n        gl.enableVertexAttribArray(this.attributes[uniformName]);\n    }\n};\n\nfunction getShader(source, type, gl) {\n    var result;\n\n    if (type === 'fragment') {\n        result = gl.createShader(gl.FRAGMENT_SHADER);\n    } else if (type === 'vertex') {\n        result = gl.createShader(gl.VERTEX_SHADER);\n    } else {\n        return null; // Unknown shader type\n    }\n\n    gl.shaderSource(result, source);\n    gl.compileShader(result);\n\n    if (!gl.getShaderParameter(result, gl.COMPILE_STATUS)) {\n        alert(\"An error occurred compiling the shaders: \" + gl.getShaderInfoLog(result));\n        return null;\n    }\n\n    return result;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./source/webgl/shader.js\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"div.VrPlayer{background-color:#000;font-family:HelveticaNeue-Light,Helvetica Neue Light,Helvetica Neue,Helvetica,Arial,Lucida Grande,sans-serif;font-weight:300;color:#fff;margin:0;padding:0;overflow:hidden;height:100%;width:100%;position:fixed;top:0;left:0}div.VrPlayer select{border:none;background:rgba(0,0,0,.6);color:hsla(0,0%,100%,.8);padding:2px;border-radius:3px}div.VrPlayer video{display:none}div.VrPlayer a{cursor:pointer;color:hsla(0,0%,100%,.8)}div.VrPlayer a:hover{color:hsla(0,0%,100%,.65);text-decoration:none}div.VrPlayer a:active{color:hsla(0,0%,100%,.8);text-shadow:2px 2px 3px hsla(0,0%,78%,.9)}div.VrPlayer{background-color:#000}div.VrPlayer .left{float:left;left:2%}div.VrPlayer .left,div.VrPlayer .right{width:50%;position:relative;top:43%;z-index:1}div.VrPlayer .right{float:right;right:2%}div.VrPlayer .glcanvas{position:absolute;top:0;bottom:0;right:0;left:0}div.VrPlayer .video-controls{color:#fff;position:fixed;bottom:0;left:0;right:0;padding:0 10px;opacity:.8;height:25px;background:#499bea;background:-webkit-gradient(left top,left bottom,color-stop(0,#499bea),color-stop(100%,#207ce5));background:-webkit-linear-gradient(top,#499bea 0,#207ce5 100%);background:linear-gradient(to bottom,#499bea 0,#207ce5 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#499bea',endColorstr='#207ce5',GradientType=0)}div.VrPlayer input.seek-bar{width:35%;float:left;height:25px;margin-top:0;border:none}div.VrPlayer input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;border:1px solid #000;height:16px;width:16px;border-radius:8px;background:#fff;cursor:pointer;margin-top:-7px;box-shadow:1px 1px 1px #000,0 0 1px #0d0d0d}div.VrPlayer input[type=range]::-moz-range-thumb{box-shadow:1px 1px 1px #000,0 0 1px #0d0d0d;border:1px solid #000;height:16px;width:16px;border-radius:8px;background:#fff;cursor:pointer}div.VrPlayer input[type=range]::-ms-thumb{box-shadow:1px 1px 1px #000,0 0 1px #0d0d0d;border:1px solid #000;height:16px;width:16px;border-radius:8px;background:#fff;cursor:pointer}div.VrPlayer select{width:12%;max-width:300px;margin-right:5px}div.VrPlayer .icon{margin:5px 5px 0;width:20px;float:left}div.VrPlayer .rfloat{float:right;margin-top:5px}.large-play,.message,div.VrPlayer .title{text-align:center;margin:0 auto;display:block;color:hsla(0,0%,100%,.5)}div.VrPlayer span.brand{float:left;margin-left:20px;color:#000;font-variant:small-caps;font-size:16px;font-weight:700;margin-top:0}div.VrPlayer span.info{float:left;margin-left:20px;color:#000;font-size:13px;margin-top:3px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./source/VrPlayer.css\n ** module id = 15\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 16\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x2 Matrix\n * @name mat2\n */\nvar mat2 = {};\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\nmat2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nmat2.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a1 = a[1];\n        out[1] = a[2];\n        out[2] = a1;\n    } else {\n        out[0] = a[0];\n        out[1] = a[2];\n        out[2] = a[1];\n        out[3] = a[3];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n\n        // Calculate the determinant\n        det = a0 * a3 - a2 * a1;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n    \n    out[0] =  a3 * det;\n    out[1] = -a1 * det;\n    out[2] = -a2 * det;\n    out[3] =  a0 * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nmat2.adjoint = function(out, a) {\n    // Caching this value is nessecary if out == a\n    var a0 = a[0];\n    out[0] =  a[3];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] =  a0;\n\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2.determinant = function (a) {\n    return a[0] * a[3] - a[2] * a[1];\n};\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nmat2.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];\n    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    return out;\n};\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nmat2.mul = mat2.multiply;\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    return out;\n};\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nmat2.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nmat2.fromRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nmat2.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2.str = function (a) {\n    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))\n};\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix \n * @param {mat2} D the diagonal matrix \n * @param {mat2} U the upper triangular matrix \n * @param {mat2} a the input matrix to factorize\n */\n\nmat2.LDU = function (L, D, U, a) { \n    L[2] = a[2]/a[0]; \n    U[0] = a[0]; \n    U[1] = a[1]; \n    U[3] = a[3] - L[2] * U[1]; \n    return [L, D, U];       \n}; \n\n\nmodule.exports = mat2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat2.js\n ** module id = 17\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2x3 Matrix\n * @name mat2d\n * \n * @description \n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\nvar mat2d = {};\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\nmat2d.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(6);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    return out;\n};\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nmat2d.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n};\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nmat2d.invert = function(out, a) {\n    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],\n        atx = a[4], aty = a[5];\n\n    var det = aa * ad - ab * ac;\n    if(!det){\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = ad * det;\n    out[1] = -ab * det;\n    out[2] = -ac * det;\n    out[3] = aa * det;\n    out[4] = (ac * aty - ad * atx) * det;\n    out[5] = (ab * atx - aa * aty) * det;\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nmat2d.determinant = function (a) {\n    return a[0] * a[3] - a[1] * a[2];\n};\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nmat2d.multiply = function (out, a, b) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];\n    out[0] = a0 * b0 + a2 * b1;\n    out[1] = a1 * b0 + a3 * b1;\n    out[2] = a0 * b2 + a2 * b3;\n    out[3] = a1 * b2 + a3 * b3;\n    out[4] = a0 * b4 + a2 * b5 + a4;\n    out[5] = a1 * b4 + a3 * b5 + a5;\n    return out;\n};\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nmat2d.mul = mat2d.multiply;\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.rotate = function (out, a, rad) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n    out[0] = a0 *  c + a2 * s;\n    out[1] = a1 *  c + a3 * s;\n    out[2] = a0 * -s + a2 * c;\n    out[3] = a1 * -s + a3 * c;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nmat2d.scale = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0 * v0;\n    out[1] = a1 * v0;\n    out[2] = a2 * v1;\n    out[3] = a3 * v1;\n    out[4] = a4;\n    out[5] = a5;\n    return out;\n};\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nmat2d.translate = function(out, a, v) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],\n        v0 = v[0], v1 = v[1];\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = a0 * v0 + a2 * v1 + a4;\n    out[5] = a1 * v0 + a3 * v1 + a5;\n    return out;\n};\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nmat2d.fromRotation = function(out, rad) {\n    var s = Math.sin(rad), c = Math.cos(rad);\n    out[0] = c;\n    out[1] = s;\n    out[2] = -s;\n    out[3] = c;\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nmat2d.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = v[1];\n    out[4] = 0;\n    out[5] = 0;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nmat2d.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    out[4] = v[0];\n    out[5] = v[1];\n    return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat2d.str = function (a) {\n    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + \n                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat2d.frob = function (a) { \n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))\n}; \n\nmodule.exports = mat2d;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat2d.js\n ** module id = 18\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 4x4 Matrix\n * @name mat4\n */\nvar mat4 = {};\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\nmat4.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(16);\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nmat4.identity = function(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.transpose = function(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        var a01 = a[1], a02 = a[2], a03 = a[3],\n            a12 = a[6], a13 = a[7],\n            a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n    \n    return out;\n};\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.invert = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32,\n\n        // Calculate the determinant\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) { \n        return null; \n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n};\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nmat4.adjoint = function(out, a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\n    return out;\n};\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nmat4.determinant = function (a) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\n\n        b00 = a00 * a11 - a01 * a10,\n        b01 = a00 * a12 - a02 * a10,\n        b02 = a00 * a13 - a03 * a10,\n        b03 = a01 * a12 - a02 * a11,\n        b04 = a01 * a13 - a03 * a11,\n        b05 = a02 * a13 - a03 * a12,\n        b06 = a20 * a31 - a21 * a30,\n        b07 = a20 * a32 - a22 * a30,\n        b08 = a20 * a33 - a23 * a30,\n        b09 = a21 * a32 - a22 * a31,\n        b10 = a21 * a33 - a23 * a31,\n        b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};\n\n/**\n * Multiplies two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nmat4.multiply = function (out, a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\n    return out;\n};\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nmat4.mul = mat4.multiply;\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nmat4.translate = function (out, a, v) {\n    var x = v[0], y = v[1], z = v[2],\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n};\n\n/**\n * Scales the mat4 by the dimensions in the given vec3\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nmat4.scale = function(out, a, v) {\n    var x = v[0], y = v[1], z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n};\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.rotate = function (out, a, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t,\n        a00, a01, a02, a03,\n        a10, a11, a12, a13,\n        a20, a21, a22, a23,\n        b00, b01, b02,\n        b10, b11, b12,\n        b20, b21, b22;\n\n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateX = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[0]  = a[0];\n        out[1]  = a[1];\n        out[2]  = a[2];\n        out[3]  = a[3];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[4] = a10 * c + a20 * s;\n    out[5] = a11 * c + a21 * s;\n    out[6] = a12 * c + a22 * s;\n    out[7] = a13 * c + a23 * s;\n    out[8] = a20 * c - a10 * s;\n    out[9] = a21 * c - a11 * s;\n    out[10] = a22 * c - a12 * s;\n    out[11] = a23 * c - a13 * s;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateY = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\n        out[4]  = a[4];\n        out[5]  = a[5];\n        out[6]  = a[6];\n        out[7]  = a[7];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c - a20 * s;\n    out[1] = a01 * c - a21 * s;\n    out[2] = a02 * c - a22 * s;\n    out[3] = a03 * c - a23 * s;\n    out[8] = a00 * s + a20 * c;\n    out[9] = a01 * s + a21 * c;\n    out[10] = a02 * s + a22 * c;\n    out[11] = a03 * s + a23 * c;\n    return out;\n};\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.rotateZ = function (out, a, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad),\n        a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3],\n        a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\n        out[8]  = a[8];\n        out[9]  = a[9];\n        out[10] = a[10];\n        out[11] = a[11];\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n\n    // Perform axis-specific matrix multiplication\n    out[0] = a00 * c + a10 * s;\n    out[1] = a01 * c + a11 * s;\n    out[2] = a02 * c + a12 * s;\n    out[3] = a03 * c + a13 * s;\n    out[4] = a10 * c - a00 * s;\n    out[5] = a11 * c - a01 * s;\n    out[6] = a12 * c - a02 * s;\n    out[7] = a13 * c - a03 * s;\n    return out;\n};\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromTranslation = function(out, v) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nmat4.fromScaling = function(out, v) {\n    out[0] = v[0];\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = v[1];\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = v[2];\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nmat4.fromRotation = function(out, rad, axis) {\n    var x = axis[0], y = axis[1], z = axis[2],\n        len = Math.sqrt(x * x + y * y + z * z),\n        s, c, t;\n    \n    if (Math.abs(len) < glMatrix.EPSILON) { return null; }\n    \n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n    \n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n    \n    // Perform rotation-specific matrix multiplication\n    out[0] = x * x * t + c;\n    out[1] = y * x * t + z * s;\n    out[2] = z * x * t - y * s;\n    out[3] = 0;\n    out[4] = x * y * t - z * s;\n    out[5] = y * y * t + c;\n    out[6] = z * y * t + x * s;\n    out[7] = 0;\n    out[8] = x * z * t + y * s;\n    out[9] = y * z * t - x * s;\n    out[10] = z * z * t + c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromXRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = 1;\n    out[1]  = 0;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = c;\n    out[6] = s;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = -s;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromYRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = 0;\n    out[2]  = -s;\n    out[3]  = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = s;\n    out[9] = 0;\n    out[10] = c;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nmat4.fromZRotation = function(out, rad) {\n    var s = Math.sin(rad),\n        c = Math.cos(rad);\n    \n    // Perform axis-specific matrix multiplication\n    out[0]  = c;\n    out[1]  = s;\n    out[2]  = 0;\n    out[3]  = 0;\n    out[4] = -s;\n    out[5] = c;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslation = function (out, q, v) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - (yy + zz);\n    out[1] = xy + wz;\n    out[2] = xz - wy;\n    out[3] = 0;\n    out[4] = xy - wz;\n    out[5] = 1 - (xx + zz);\n    out[6] = yz + wx;\n    out[7] = 0;\n    out[8] = xz + wy;\n    out[9] = yz - wx;\n    out[10] = 1 - (xx + yy);\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScale = function (out, q, v, s) {\n    // Quaternion math\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        xy = x * y2,\n        xz = x * z2,\n        yy = y * y2,\n        yz = y * z2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2,\n        sx = s[0],\n        sy = s[1],\n        sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n    \n    return out;\n};\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     var quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nmat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0], y = q[1], z = q[2], w = q[3],\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2,\n      \n      sx = s[0],\n      sy = s[1],\n      sz = s[2],\n\n      ox = o[0],\n      oy = o[1],\n      oz = o[2];\n      \n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n        \n  return out;\n};\n\nmat4.fromQuat = function (out, q) {\n    var x = q[0], y = q[1], z = q[2], w = q[3],\n        x2 = x + x,\n        y2 = y + y,\n        z2 = z + z,\n\n        xx = x * x2,\n        yx = y * x2,\n        yy = y * y2,\n        zx = z * x2,\n        zy = z * y2,\n        zz = z * z2,\n        wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.frustum = function (out, left, right, bottom, top, near, far) {\n    var rl = 1 / (right - left),\n        tb = 1 / (top - bottom),\n        nf = 1 / (near - far);\n    out[0] = (near * 2) * rl;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = (near * 2) * tb;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = (right + left) * rl;\n    out[9] = (top + bottom) * tb;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (far * near * 2) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspective = function (out, fovy, aspect, near, far) {\n    var f = 1.0 / Math.tan(fovy / 2),\n        nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = (2 * far * near) * nf;\n    out[15] = 0;\n    return out;\n};\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.perspectiveFromFieldOfView = function (out, fov, near, far) {\n    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\n        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\n        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\n        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\n        xScale = 2.0 / (leftTan + rightTan),\n        yScale = 2.0 / (upTan + downTan);\n\n    out[0] = xScale;\n    out[1] = 0.0;\n    out[2] = 0.0;\n    out[3] = 0.0;\n    out[4] = 0.0;\n    out[5] = yScale;\n    out[6] = 0.0;\n    out[7] = 0.0;\n    out[8] = -((leftTan - rightTan) * xScale * 0.5);\n    out[9] = ((upTan - downTan) * yScale * 0.5);\n    out[10] = far / (near - far);\n    out[11] = -1.0;\n    out[12] = 0.0;\n    out[13] = 0.0;\n    out[14] = (far * near) / (near - far);\n    out[15] = 0.0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nmat4.ortho = function (out, left, right, bottom, top, near, far) {\n    var lr = 1 / (left - right),\n        bt = 1 / (bottom - top),\n        nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n};\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nmat4.lookAt = function (out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&\n        Math.abs(eyey - centery) < glMatrix.EPSILON &&\n        Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n        return mat4.identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} mat matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nmat4.str = function (a) {\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nmat4.frob = function (a) {\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\n};\n\n\nmodule.exports = mat4;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/mat4.js\n ** module id = 19\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\nvar mat3 = require(\"./mat3.js\");\nvar vec3 = require(\"./vec3.js\");\nvar vec4 = require(\"./vec4.js\");\n\n/**\n * @class Quaternion\n * @name quat\n */\nvar quat = {};\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\nquat.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(4);\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nquat.rotationTo = (function() {\n    var tmpvec3 = vec3.create();\n    var xUnitVec3 = vec3.fromValues(1,0,0);\n    var yUnitVec3 = vec3.fromValues(0,1,0);\n\n    return function(out, a, b) {\n        var dot = vec3.dot(a, b);\n        if (dot < -0.999999) {\n            vec3.cross(tmpvec3, xUnitVec3, a);\n            if (vec3.length(tmpvec3) < 0.000001)\n                vec3.cross(tmpvec3, yUnitVec3, a);\n            vec3.normalize(tmpvec3, tmpvec3);\n            quat.setAxisAngle(out, tmpvec3, Math.PI);\n            return out;\n        } else if (dot > 0.999999) {\n            out[0] = 0;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            return out;\n        } else {\n            vec3.cross(tmpvec3, a, b);\n            out[0] = tmpvec3[0];\n            out[1] = tmpvec3[1];\n            out[2] = tmpvec3[2];\n            out[3] = 1 + dot;\n            return quat.normalize(out, out);\n        }\n    };\n})();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nquat.setAxes = (function() {\n    var matr = mat3.create();\n\n    return function(out, view, right, up) {\n        matr[0] = right[0];\n        matr[3] = right[1];\n        matr[6] = right[2];\n\n        matr[1] = up[0];\n        matr[4] = up[1];\n        matr[7] = up[2];\n\n        matr[2] = -view[0];\n        matr[5] = -view[1];\n        matr[8] = -view[2];\n\n        return quat.normalize(out, quat.fromMat3(out, matr));\n    };\n})();\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nquat.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nquat.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nquat.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nquat.set = vec4.set;\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nquat.identity = function(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n};\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nquat.setAxisAngle = function(out, axis, rad) {\n    rad = rad * 0.5;\n    var s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n};\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nquat.add = vec4.add;\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nquat.multiply = function(out, a, b) {\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n};\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nquat.mul = quat.multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nquat.scale = vec4.scale;\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateX = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateY = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        by = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n};\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nquat.rotateZ = function (out, a, rad) {\n    rad *= 0.5; \n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bz = Math.sin(rad), bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n};\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nquat.calculateW = function (out, a) {\n    var x = a[0], y = a[1], z = a[2];\n\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n    return out;\n};\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nquat.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nquat.lerp = vec4.lerp;\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nquat.slerp = function (out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n\n    var ax = a[0], ay = a[1], az = a[2], aw = a[3],\n        bx = b[0], by = b[1], bz = b[2], bw = b[3];\n\n    var        omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if ( cosom < 0.0 ) {\n        cosom = -cosom;\n        bx = - bx;\n        by = - by;\n        bz = - bz;\n        bw = - bw;\n    }\n    // calculate coefficients\n    if ( (1.0 - cosom) > 0.000001 ) {\n        // standard case (slerp)\n        omega  = Math.acos(cosom);\n        sinom  = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {        \n        // \"from\" and \"to\" quaternions are very close \n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n    \n    return out;\n};\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nquat.sqlerp = (function () {\n  var temp1 = quat.create();\n  var temp2 = quat.create();\n  \n  return function (out, a, b, c, d, t) {\n    quat.slerp(temp1, a, d, t);\n    quat.slerp(temp2, b, c, t);\n    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));\n    \n    return out;\n  };\n}());\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nquat.invert = function(out, a) {\n    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],\n        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,\n        invDot = dot ? 1.0/dot : 0;\n    \n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0*invDot;\n    out[1] = -a1*invDot;\n    out[2] = -a2*invDot;\n    out[3] = a3*invDot;\n    return out;\n};\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nquat.conjugate = function (out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n};\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n * @function\n */\nquat.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nquat.len = quat.length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nquat.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nquat.sqrLen = quat.squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nquat.normalize = vec4.normalize;\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nquat.fromMat3 = function(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    var fTrace = m[0] + m[4] + m[8];\n    var fRoot;\n\n    if ( fTrace > 0.0 ) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0);  // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5/fRoot;  // 1/(4w)\n        out[0] = (m[5]-m[7])*fRoot;\n        out[1] = (m[6]-m[2])*fRoot;\n        out[2] = (m[1]-m[3])*fRoot;\n    } else {\n        // |w| <= 1/2\n        var i = 0;\n        if ( m[4] > m[0] )\n          i = 1;\n        if ( m[8] > m[i*3+i] )\n          i = 2;\n        var j = (i+1)%3;\n        var k = (i+2)%3;\n        \n        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;\n        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;\n        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;\n    }\n    \n    return out;\n};\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nquat.str = function (a) {\n    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};\n\nmodule.exports = quat;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/quat.js\n ** module id = 20\n ** module chunks = 0\n **/","/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nvar glMatrix = require(\"./common.js\");\n\n/**\n * @class 2 Dimensional Vector\n * @name vec2\n */\nvar vec2 = {};\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nvec2.create = function() {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nvec2.clone = function(a) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nvec2.fromValues = function(x, y) {\n    var out = new glMatrix.ARRAY_TYPE(2);\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nvec2.copy = function(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n};\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nvec2.set = function(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n};\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.add = function(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n};\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.subtract = function(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvec2.sub = vec2.subtract;\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.multiply = function(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvec2.mul = vec2.multiply;\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.divide = function(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n};\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvec2.div = vec2.divide;\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.min = function(out, a, b) {\n    out[0] = Math.min(a[0], b[0]);\n    out[1] = Math.min(a[1], b[1]);\n    return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nvec2.max = function(out, a, b) {\n    out[0] = Math.max(a[0], b[0]);\n    out[1] = Math.max(a[1], b[1]);\n    return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nvec2.scale = function(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nvec2.scaleAndAdd = function(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale);\n    out[1] = a[1] + (b[1] * scale);\n    return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nvec2.distance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvec2.dist = vec2.distance;\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nvec2.squaredDistance = function(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvec2.sqrDist = vec2.squaredDistance;\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nvec2.length = function (a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x*x + y*y);\n};\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvec2.len = vec2.length;\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nvec2.squaredLength = function (a) {\n    var x = a[0],\n        y = a[1];\n    return x*x + y*y;\n};\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvec2.sqrLen = vec2.squaredLength;\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nvec2.negate = function(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nvec2.inverse = function(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nvec2.normalize = function(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x*x + y*y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n        out[0] = a[0] * len;\n        out[1] = a[1] * len;\n    }\n    return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nvec2.dot = function (a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nvec2.cross = function(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0];\n    out[0] = out[1] = 0;\n    out[2] = z;\n    return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nvec2.lerp = function (out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nvec2.random = function (out, scale) {\n    scale = scale || 1.0;\n    var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n    out[0] = Math.cos(r) * scale;\n    out[1] = Math.sin(r) * scale;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat2d = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat3 = function(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nvec2.transformMat4 = function(out, a, m) {\n    var x = a[0], \n        y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n};\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvec2.forEach = (function() {\n    var vec = vec2.create();\n\n    return function(a, stride, offset, count, fn, arg) {\n        var i, l;\n        if(!stride) {\n            stride = 2;\n        }\n\n        if(!offset) {\n            offset = 0;\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length);\n        } else {\n            l = a.length;\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i]; vec[1] = a[i+1];\n            fn(vec, vec, arg);\n            a[i] = vec[0]; a[i+1] = vec[1];\n        }\n        \n        return a;\n    };\n})();\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} vec vector to represent as a string\n * @returns {String} string representation of the vector\n */\nvec2.str = function (a) {\n    return 'vec2(' + a[0] + ', ' + a[1] + ')';\n};\n\nmodule.exports = vec2;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/gl-matrix/src/gl-matrix/vec2.js\n ** module id = 21\n ** module chunks = 0\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _helpersSelectLocalVideo = require('./helpers/select-local-video');\n\nvar _helpersSelectLocalVideo2 = _interopRequireDefault(_helpersSelectLocalVideo);\n\nvar noop = function noop() {};\n\nvar Controls = (function (_React$Component) {\n    _inherits(Controls, _React$Component);\n\n    function Controls() {\n        _classCallCheck(this, Controls);\n\n        _get(Object.getPrototypeOf(Controls.prototype), 'constructor', this).apply(this, arguments);\n    }\n\n    _createClass(Controls, [{\n        key: 'render',\n        value: function render() {\n            var playClassName = this.props.isPlaying ? 'fa fa-pause icon' : 'fa fa-play icon';\n            var muteClassName = this.props.isMute ? 'fa fa-volume-off icon' : 'fa fa-volume-up icon';\n            // <a className=\"open-remote fa fa-external-link icon\" title=\"Open Remote\"></a>\n            return _react2['default'].createElement(\n                'div',\n                { className: 'video-controls' },\n                _react2['default'].createElement('a', { className: playClassName, title: 'Play', onClick: this.playPause.bind(this) }),\n                _react2['default'].createElement('input', { type: 'range', className: 'seek-bar', value: this.props.position, onChange: this.positionChange.bind(this), ref: 'seekBar' }),\n                _react2['default'].createElement('a', { className: muteClassName, title: 'Mute', onClick: this.mute.bind(this) }),\n                _react2['default'].createElement(\n                    'span',\n                    { className: 'brand' },\n                    this.props.brand\n                ),\n                _react2['default'].createElement(\n                    'span',\n                    { className: 'info' },\n                    this.props.title\n                ),\n                _react2['default'].createElement('span', { className: 'timingInfo' }),\n                _react2['default'].createElement('a', { className: 'full-screen fa fa-expand icon rfloat', title: 'Full Screen', onClick: this.fullScreen.bind(this) }),\n                _react2['default'].createElement('a', { className: 'select-local-file fa fa-folder-open icon rfloat', title: 'Select File', onClick: this.selectLocalFile.bind(this) })\n            );\n        }\n    }, {\n        key: 'playPause',\n        value: function playPause() {\n            this.props.onPlayPause();\n        }\n    }, {\n        key: 'mute',\n        value: function mute() {\n            this.props.onMute();\n        }\n    }, {\n        key: 'fullScreen',\n        value: function fullScreen() {\n            this.props.onFullScreen();\n        }\n    }, {\n        key: 'positionChange',\n        value: function positionChange() {\n            this.props.onPositionChange(+this.refs.seekBar.value);\n        }\n    }, {\n        key: 'selectLocalFile',\n        value: function selectLocalFile() {\n            var _this = this;\n\n            (0, _helpersSelectLocalVideo2['default'])().then(function (videoFile) {\n                _this.props.onLocalVideoSelected(videoFile);\n            })['catch'](function (error) {\n                console.error(error);\n            });\n        }\n    }]);\n\n    return Controls;\n})(_react2['default'].Component);\n\nControls.propTypes = {\n    isPlaying: _react.PropTypes.bool,\n    onPlayPause: _react.PropTypes.func,\n    isMute: _react.PropTypes.bool,\n    onMute: _react.PropTypes.func,\n    isFullscreen: _react.PropTypes.bool,\n    onFullScreen: _react.PropTypes.func,\n    position: _react.PropTypes.number,\n    onPositionChange: _react.PropTypes.func,\n    onLocalVideoSelected: _react.PropTypes.func,\n\n    brand: _react.PropTypes.string,\n    title: _react.PropTypes.string\n};\n\nControls.defaultProps = {\n    isPlaying: false,\n    onPlayPause: noop,\n    isMute: false,\n    onMute: noop,\n    isFullscreen: false,\n    onFullScreen: noop,\n    position: 0,\n    onPositionChange: noop,\n    onLocalVideoSelected: noop,\n    brand: '',\n    title: ''\n};\n\nexports['default'] = Controls;\nmodule.exports = exports['default'];\n\n\n/** WEBPACK FOOTER **\n ** ./~/babel-loader!./source/Controls.jsx\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _helpersGetVrDevices = require('./helpers/get-vr-devices');\n\nvar _helpersGetVrDevices2 = _interopRequireDefault(_helpersGetVrDevices);\n\nvar _helpersPhonevr = require('./helpers/phonevr');\n\nvar _helpersPhonevr2 = _interopRequireDefault(_helpersPhonevr);\n\nvar _webgl = require('./webgl');\n\nvar _webgl2 = _interopRequireDefault(_webgl);\n\nvar _helpersManualControls = require('./helpers/manual-controls');\n\nvar _helpersManualControls2 = _interopRequireDefault(_helpersManualControls);\n\nvar _helpersGoFullScreen = require('./helpers/goFullScreen');\n\nvar _helpersGoFullScreen2 = _interopRequireDefault(_helpersGoFullScreen);\n\nvar noop = function noop() {};\n\nvar Video = (function (_React$Component) {\n    _inherits(Video, _React$Component);\n\n    function Video(props) {\n        _classCallCheck(this, Video);\n\n        _get(Object.getPrototypeOf(Video.prototype), 'constructor', this).call(this, props);\n\n        this.state = {\n            webGl: null,\n            devices: null,\n            needReload: false\n        };\n    }\n\n    _createClass(Video, [{\n        key: 'render',\n        value: function render() {\n            return _react2['default'].createElement(\n                'div',\n                null,\n                _react2['default'].createElement(\n                    'canvas',\n                    { className: 'glcanvas', ref: 'canvas' },\n                    'Your browser doesn\\'t appear to support the HTML5 ',\n                    _react2['default'].createElement(\n                        'code',\n                        null,\n                        '<canvas>'\n                    ),\n                    ' element.'\n                ),\n                _react2['default'].createElement(\n                    'video',\n                    { preload: 'false', className: 'video', loop: 'true', 'webkit-playsinline': true, ref: 'video', style: { height: 200 } },\n                    this.props.sources.map(function (s) {\n                        return _react2['default'].createElement('source', { src: s.url, type: s.type, key: s.url });\n                    })\n                )\n            );\n        }\n    }, {\n        key: 'componentWillMount',\n        value: function componentWillMount() {}\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this = this;\n\n            var devices = undefined;\n            var phone = new _helpersPhonevr2['default']();\n\n            (0, _helpersGetVrDevices2['default'])().then(function (devs) {\n                console.log('devices: ', devs);\n                devices = devs;\n                _this.setState({ devices: devices });\n            }).then(function () {\n                return (0, _webgl2['default'])(devices, phone, _this.refs.video, _this.refs.canvas);\n            }).then(function (gl) {\n                _this.setState({ webGl: gl });\n                (0, _helpersManualControls2['default'])(_this.props.keys, function (rotation, sign) {\n                    gl.rotate(rotation, sign);\n                });\n            });\n\n            var video = this.refs.video;\n\n            video.addEventListener('timeupdate', function () {\n                if (!video.paused) {\n                    if (video.duration > 0) {\n                        var value = video.currentTime / video.duration * 100;\n                        _this.props.onPositionChange(value);\n                    } else {\n                        _this.props.onPositionChange(0);\n                    }\n                }\n            });\n\n            document.addEventListener('fullscreenchange', function (event) {\n                if (this.props.isFullscreen !== document.fullscreenEnabled && document.fullScreenElement === this.refs.canvas) {\n                    this.props.onFullscreen(document.fullscreenEnabled);\n                }\n            });\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(newProps) {\n            if (this.props.sources != newProps.sources) {\n                this.updateSources();\n            }\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            if (this.state.needReload) {\n                console.log('Reloading video');\n                var video = this.refs.video;\n                var webGl = this.state.webGl;\n                video.load();\n                webGl.draw();\n                this.setState({ needReload: false });\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var webGl = this.state.webGl;\n            if (webGl) {\n                webGl.stop();\n            }\n        }\n    }, {\n        key: 'playPause',\n        value: function playPause() {\n            var video = this.refs.video;\n            var webGl = this.state.webGl;\n            if (video.paused) {\n                video.play();\n                webGl.draw();\n            } else {\n                video.pause();\n            }\n            this.props.onPlayPause(!video.paused);\n        }\n    }, {\n        key: 'toggleMute',\n        value: function toggleMute() {\n            var video = this.refs.video;\n            video.muted = !video.muted;\n            this.props.onMute(video.muted);\n        }\n    }, {\n        key: 'goFullScreen',\n        value: function goFullScreen() {\n            var canvas = this.refs.canvas;\n            var devices = this.state.devices;\n            (0, _helpersGoFullScreen2['default'])(canvas, devices, true);\n        }\n    }, {\n        key: 'setPosition',\n        value: function setPosition(percentage) {\n            var video = this.refs.video;\n            var time = video.duration * percentage / 100;\n            video.currentTime = time;\n            this.props.onPositionChange(percentage);\n        }\n    }, {\n        key: 'zeroSensor',\n        value: function zeroSensor() {\n            var devices = this.state.devices;\n            if (devices.sensor) {\n                devices.sensor.zeroSensor();\n            }\n        }\n    }, {\n        key: 'updateSources',\n        value: function updateSources() {\n            var video = this.refs.video;\n            var webGl = this.state.webGl;\n            video.pause();\n            webGl.stop();\n            this.props.onPlayPause(!video.paused);\n            this.props.onPositionChange(0);\n            this.setState({ needReload: true });\n        }\n    }]);\n\n    return Video;\n})(_react2['default'].Component);\n\nVideo.propTypes = {\n    sources: _react.PropTypes.array.isRequired,\n    onFullscreen: _react.PropTypes.func,\n    onPositionChange: _react.PropTypes.func,\n    onPlayPause: _react.PropTypes.func,\n    onMute: _react.PropTypes.func,\n    keys: _react.PropTypes.object\n};\n\nVideo.defaultProps = {\n    sources: [],\n    onFullscreen: noop,\n    onPositionChange: noop,\n    onPlayPause: noop,\n    onMute: noop,\n    keys: {\n        left: 'A',\n        right: 'D',\n        up: 'W',\n        down: 'S',\n        rotateLeft: 'Q',\n        rotateRight: 'E',\n        fullScreen: 'F',\n        zeroSensor: 'Z',\n        playPause: ' '\n    }\n};\n\nexports['default'] = Video;\nmodule.exports = exports['default'];\n\n\n/** WEBPACK FOOTER **\n ** ./~/babel-loader!./source/Video.jsx\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nrequire('./VrPlayer.css');\n\nvar _Controls = require('./Controls');\n\nvar _Controls2 = _interopRequireDefault(_Controls);\n\nvar _Video = require('./Video');\n\nvar _Video2 = _interopRequireDefault(_Video);\n\nvar VrPlayer = (function (_React$Component) {\n    _inherits(VrPlayer, _React$Component);\n\n    function VrPlayer(props) {\n        _classCallCheck(this, VrPlayer);\n\n        _get(Object.getPrototypeOf(VrPlayer.prototype), 'constructor', this).call(this, props);\n        this.state = {\n            isPlaying: false,\n            isMute: false,\n            isFullscreen: false,\n            position: 0,\n            sources: []\n        };\n    }\n\n    _createClass(VrPlayer, [{\n        key: 'render',\n        value: function render() {\n            var _this = this;\n\n            return _react2['default'].createElement(\n                'div',\n                { className: 'VrPlayer' },\n                _react2['default'].createElement(_Video2['default'], { ref: 'video',\n                    sources: this.state.sources,\n                    onFullScreen: this.fullScreen.bind(this),\n                    onPositionChange: function (p) {\n                        return _this.setState({ position: p });\n                    },\n                    onPlayPause: this.playPause.bind(this),\n                    onMute: this.mute.bind(this),\n                    keys: this.props.keys }),\n                _react2['default'].createElement(_Controls2['default'], { isPlaying: this.state.isPlaying,\n                    onPlayPause: this.togglePlayPause.bind(this),\n                    isMute: this.state.isMute,\n                    onMute: this.toggleMute.bind(this),\n                    isFullscreen: this.state.isFullscreen,\n                    onFullScreen: this.toggleFullScreen.bind(this),\n                    position: this.state.position,\n                    onPositionChange: this.changePosition.bind(this),\n                    onLocalVideoSelected: this.localVideoSelected.bind(this),\n                    brand: this.props.brand,\n                    title: this.props.title\n                })\n            );\n        }\n    }, {\n        key: 'playPause',\n        value: function playPause(playing) {\n            this.setState({ isPlaying: playing });\n        }\n    }, {\n        key: 'togglePlayPause',\n        value: function togglePlayPause() {\n            this.refs.video.playPause();\n        }\n    }, {\n        key: 'mute',\n        value: function mute(muted) {\n            this.setState({ isMute: muted });\n        }\n    }, {\n        key: 'toggleMute',\n        value: function toggleMute() {\n            this.refs.video.toggleMute();\n        }\n    }, {\n        key: 'fullScreen',\n        value: function fullScreen(isFullscreen) {\n            this.setState({ isFullscreen: isFullscreen });\n        }\n    }, {\n        key: 'toggleFullScreen',\n        value: function toggleFullScreen() {\n            this.refs.video.goFullScreen();\n        }\n    }, {\n        key: 'changePosition',\n        value: function changePosition(percentage) {\n            this.refs.video.setPosition(percentage);\n        }\n    }, {\n        key: 'localVideoSelected',\n        value: function localVideoSelected(videoSource) {\n            this.setState({ sources: [videoSource] });\n        }\n    }, {\n        key: 'zeroSensor',\n        value: function zeroSensor() {\n            this.refs.video.zeroSensor();\n        }\n    }, {\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n            this.setState({ sources: this.props.sources });\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            var keys = this.props.keys;\n            if (window) {\n                window.addEventListener('keypress', function (event) {\n                    switch (String.fromCharCode(event.charCode)) {\n                        case keys.fullScreen.toLowerCase():\n                            _this2.toggleFullScreen();\n                            break;\n                        case keys.zeroSensor.toLowerCase():\n                            _this2.zeroSensor();\n                            break;\n                        case keys.playPause.toLowerCase():\n                            _this2.togglePlayPause();\n                            break;\n                    }\n                }, true);\n            }\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(newProps) {\n            if (this.props.sources !== newProps.sources) {\n                this.setState({ sources: newProps.sources });\n            }\n        }\n    }]);\n\n    return VrPlayer;\n})(_react2['default'].Component);\n\nVrPlayer.propTypes = {\n    sources: _react.PropTypes.array.isRequired,\n    title: _react.PropTypes.string,\n    brand: _react.PropTypes.string,\n    keys: _react.PropTypes.object\n};\n\nVrPlayer.defaultProps = {\n    sources: [],\n    title: '',\n    brand: '',\n    keys: {\n        left: 'A',\n        right: 'D',\n        up: 'W',\n        down: 'S',\n        rotateLeft: 'Q',\n        rotateRight: 'E',\n        fullScreen: 'F',\n        zeroSensor: 'Z',\n        playPause: ' '\n    }\n};\n\nexports['default'] = VrPlayer;\nmodule.exports = exports['default'];\n\n\n/** WEBPACK FOOTER **\n ** ./~/babel-loader!./source/VrPlayer.jsx\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 25\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./VrPlayer.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./VrPlayer.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./VrPlayer.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./source/VrPlayer.css\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = \"varying mediump vec3 vDirection;\\nuniform mediump float eye;\\nuniform mediump float projection;\\n\\nuniform sampler2D uSampler;\\n\\n#define PI 3.1415926535897932384626433832795\\n\\nmediump vec4 directionToColor(mediump vec3 direction, mediump float eye, mediump float projection) {\\n  mediump float theta = atan(direction.x, -1.0 * direction.z);\\n  mediump float phi = atan(direction.y, length(direction.xz));\\n\\n  if (abs(direction.x) < 1e-4 * abs(direction.z))\\n    theta = 0.5*PI * (1.0 - sign(-1.0 * direction.z));\\n  if (abs(direction.y) < 1e-4 * length(direction.xz))\\n    phi = 0.0;\\n\\n  if (projection == 0.) {\\n    return texture2D(uSampler, vec2(mod(theta / (2.0*PI), 1.0), phi / PI + 0.5));\\n  } else {\\n    eye = 1. - eye;\\n    return texture2D(uSampler, vec2(mod(theta / (2.0*PI), 1.0), ((phi / PI + 0.5) + eye)/ 2.));\\n  }\\n}\\n\\nvoid main(void) {\\n  gl_FragColor = directionToColor(vDirection, eye, projection);\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./source/webgl/fragment.glsl\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = \"attribute mediump vec2 aVertexPosition;\\n\\nuniform mediump mat4 proj_inv;\\n\\nvarying mediump vec3 vDirection;\\n\\nvoid main(void) {\\n  gl_Position = vec4(aVertexPosition, 1.0, 1.0);\\n  mediump vec4 projective_direction = proj_inv * gl_Position;\\n  vDirection = projective_direction.xyz / projective_direction.w;\\n}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./source/webgl/vertex.glsl\n ** module id = 28\n ** module chunks = 0\n **/"],"sourceRoot":""}